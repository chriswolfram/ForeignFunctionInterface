name: Build
on:
  pull_request:
    branches: ["master"]
  push:
    # branches: ["master"]
  workflow_dispatch:
jobs:
  run-libffi-autogen:
    name: Run libffi autogen
    
    runs-on: ubuntu-latest
    
    steps:
    
      - uses: actions/checkout@v2
        with:
          repository: libffi/libffi
          path: libffi
      
      - name: Run autogen
        shell: bash
        run: |
          cd libffi
          ./autogen.sh
          
      - name: Package results
        shell: bash
        run: tar -cvf libffi.tar libffi
          
      - name: Upload libffi autogen built artifacts
        uses: actions/upload-artifact@v3
        with:
          name: libffi-autogen
          path: libffi.tar
          if-no-files-found: error
    
  build-libffi: 
    name: Build libffi
    
    needs: run-libffi-autogen
    
    strategy:
      matrix:
        os:
        - ubuntu-latest
        # - windows-latest
        # - macOS-latest
    
    runs-on: ${{ matrix.os }}
    
    steps:
    
      - uses: actions/download-artifact@v3
        with:
          name: libffi-autogen
          
      - name: Configure libffi
        shell: bash
        run: |
          tar -xvf libffi.tar
          cd libffi
          mkdir source-build
          cd source-build
          # ./configure
          
          mkdir build
          # rm 'C:/Program Files/Git/usr/bin/sh.exe'
          ls -L /bin/sh
          echo "Finished"
          ../configure --disable-docs --prefix $PWD/build
          # ../configure CC=../msvcc.sh CXX=../msvcc.sh LD=link CPP="cl -nologo -EP" CPPFLAGS="-DFFI_BUILDING_DLL"
      
      - name: Run make
        shell: /bin/bash {0}
        run: |
          cd libffi
          cd source-build
          # make
          make install
          
      - name: Upload libffi built artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ format('libffi-build-{0}', runner.os) }}
          path: libffi/source-build/build/
          if-no-files-found: error
          
  build-libffi-windows:
    name: Build libffi Windows
    
    runs-on: windows-latest
    
    steps:
      - run: git config --global core.autocrlf input

      - uses: actions/checkout@v2
        with:
          repository: libffi/libffi

      - name: Set up Cygwin
        uses: cygwin/cygwin-install-action@master
        with:
          packages: wget gcc-core make dejagnu automake autoconf libtool texinfo dos2unix unzip

      - run: |
          set -x
          cd $(cygpath $RUNNER_WORKSPACE)/libffi
          wget https://rl.gl/cli/rlgl-windows-amd64.zip
          unzip rlgl-windows-amd64.zip
          autoreconf -f -v -i
          ./configure
          make -j 4
          TERM=none DEJAGNU=$(pwd)/.ci/site.exp BOARDSDIR=$(pwd)/.ci GCC_COLORS= make check || true
          ./rlgl/rlgl.exe l --key=0LIBFFI-0LIBFFI-0LIBFFI-0LIBFFI https://rl.gl
          ./rlgl/rlgl.exe e \
                          -l project=libffi \
                          -l sha=${GITHUB_SHA:0:7} \
                          -l CC=gcc \
                          -l host=${{ matrix.host }} \
                          --policy=https://github.com/libffi/rlgl-policy.git $(find . -name libffi.log)
        shell: C:\tools\cygwin\bin\bash.exe --login --norc -eo pipefail -o igncr '{0}'
