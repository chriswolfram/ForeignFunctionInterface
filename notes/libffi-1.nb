(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2808625,      51322]
NotebookOptionsPosition[   2726582,      49967]
NotebookOutlinePosition[   2732981,      50080]
CellTagsIndexPosition[   2731693,      50055]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData["Quit"], "Input",
 CellChangeTimes->{{3.868038733808641*^9, 3.868038734255402*^9}, {
  3.868538050620256*^9, 3.8685380514838467`*^9}, {3.879608268471136*^9, 
  3.8796082690696087`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"139476a9-3c83-4845-a4ae-1236b88c36de"],

Cell[CellGroupData[{

Cell["Init", "Section",
 CellChangeTimes->{{3.868038689533751*^9, 3.868038689965659*^9}, {
  3.883841866394394*^9, 3.883841866529872*^9}, {3.883843514993565*^9, 
  3.8838435151534653`*^9}},ExpressionUUID->"faf1aeae-d9af-4069-9593-\
755aeee43b0e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FunctionCompile", "[", 
  RowBox[{"Function", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8611151263240023`*^9, 3.8611151348835707`*^9}, {
  3.8722620746531553`*^9, 3.872262075700181*^9}, {3.872262149472865*^9, 
  3.872262149934793*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"a0cbc2b3-671a-4c21-bf2c-be2db5b71a45"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledCodeFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GraphicsBox[
             InsetBox[
              FormBox[
               StyleBox["\"Code\"", 
                GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
               TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], Axes -> 
             False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {27., {0., 10.}}], Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Signature: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", "}"}], "\[Rule]", "\"Integer64\""}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GraphicsBox[
             InsetBox[
              FormBox[
               StyleBox["\"Code\"", 
                GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
               TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], Axes -> 
             False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {27., {0., 10.}}], Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Signature: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", "}"}], "\[Rule]", "\"Integer64\""}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledCodeFunction[<|
   "Signature" -> TypeSpecifier[{} -> "Integer64"], "Input" -> 
    Compile`Program[{}, 
      Function[{}, 2]], "ErrorFunction" -> Automatic, "InitializationName" -> 
    "Initialization_45f0b8d6_2748_40d1_af1b_d48c1423adf6", "ExpressionName" -> 
    "Main_ExprInvocation", "CName" -> "Main_CInvocation", "FunctionName" -> 
    "Main", "SystemID" -> "Linux-x86-64", "VersionData" -> {13.2, 0, 0}, 
    "CompiledIR" -> <|"Linux-x86-64" -> ByteArray[CompressedData["
1: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
Laj5n60mYv8fvLjwAA==
        "]]|>, "orcInstance" -> 52856048, "orcModuleId" -> 52877504, 
    "targetMachineId" -> 45337760|>, 140246163697776, 140246163697680, 
   140246163697744, 140246163697664, "{} -> \"Integer64\""],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.861903111724416*^9, 3.861903160803357*^9, 3.861986026060467*^9, 
   3.861986066636181*^9, 3.8619861375138817`*^9, 3.862063428226615*^9, 
   3.862063483256877*^9, 3.862063607123322*^9, 3.862063926155941*^9, 
   3.862064382936854*^9, 3.862064584570538*^9, 3.862064623190915*^9, 
   3.862065717381349*^9, 3.862569025362431*^9, 3.862588957938179*^9, 
   3.862601819930735*^9, 3.862602035202921*^9, 3.862602082508767*^9, 
   3.862602366388706*^9, 3.862657428456607*^9, 3.862660139002159*^9, 
   3.862660267091572*^9, 3.862670790270954*^9, 3.862670989398048*^9, 
   3.862671067239737*^9, 3.862672148645689*^9, {3.863715861536409*^9, 
   3.863715883467454*^9}, {3.8643956130501747`*^9, 3.864395617818561*^9}, 
   3.8648257346250267`*^9, 3.864926167707851*^9, 3.864997886044901*^9, 
   3.8649980965703163`*^9, 3.864999004372036*^9, 3.8650071004899*^9, 
   3.865007169340221*^9, 3.865007219369155*^9, 3.8650073420563517`*^9, 
   3.865007431585397*^9, 3.8650099010525923`*^9, 3.865011213066304*^9, 
   3.865011319629266*^9, 3.865094348517783*^9, 3.865345692158112*^9, 
   3.8653457791085873`*^9, 3.865347510964961*^9, 3.8653475462544727`*^9, 
   3.865354498000963*^9, 3.865354547987475*^9, 3.8653546377390423`*^9, 
   3.8653549190025682`*^9, 3.8653549873466177`*^9, {3.8653551579217367`*^9, 
   3.865355187120085*^9}, 3.8653557199750967`*^9, 3.8653559288600283`*^9, 
   3.865356037966646*^9, 3.865441131656032*^9, 3.865441221872979*^9, 
   3.8655013330406847`*^9, 3.865502840981514*^9, 3.865502984507183*^9, {
   3.865503097703383*^9, 3.8655031272245197`*^9}, 3.865514525756065*^9, 
   3.865515481295987*^9, 3.8655168893230257`*^9, 3.8655191988011208`*^9, 
   3.865520337665229*^9, 3.865520731858121*^9, 3.865521151556439*^9, 
   3.865521432177115*^9, {3.865521664693972*^9, 3.865521687032915*^9}, 
   3.865521723785036*^9, 3.865521764966239*^9, 3.865521845676066*^9, 
   3.865522026582923*^9, 3.8655225958275557`*^9, 3.8655229887963877`*^9, 
   3.865523181628332*^9, 3.8655234063198223`*^9, 3.865542856899603*^9, 
   3.865590639740662*^9, 3.865594133387185*^9, 3.865594577669401*^9, 
   3.865595738450368*^9, 3.865596416253707*^9, 3.865600410516066*^9, 
   3.865600686317588*^9, 3.865601529098922*^9, 3.865601673112915*^9, 
   3.865602081168344*^9, 3.8656021235263557`*^9, 3.865602357960945*^9, 
   3.86560254746523*^9, 3.8656033844413357`*^9, 3.865603545814835*^9, 
   3.865603824917485*^9, 3.865603979253126*^9, 3.865604330161796*^9, 
   3.865604748363957*^9, 3.865605074416033*^9, 3.865605264717929*^9, 
   3.8656054203318253`*^9, 3.865605790195899*^9, 3.865605855857012*^9, 
   3.8656060143567667`*^9, 3.865608594879583*^9, 3.865608781369453*^9, 
   3.865609154005945*^9, 3.86561505172756*^9, 3.8656152202491083`*^9, 
   3.865616324286007*^9, 3.865616560253634*^9, 3.865616783157452*^9, 
   3.865616819089995*^9, 3.86785531060459*^9, 3.868023761077232*^9, 
   3.868024031175337*^9, 3.868024511745708*^9, 3.86803157618941*^9, 
   3.868031613242991*^9, 3.8680317752671337`*^9, 3.868031925544525*^9, 
   3.868033894181046*^9, 3.868034372790634*^9, 3.8680345538368263`*^9, 
   3.868034603973735*^9, 3.8680389175652027`*^9, 3.8680622115565557`*^9, 
   3.8680622662904243`*^9, 3.868062351790895*^9, 3.8680624762514143`*^9, 
   3.8680625360591793`*^9, 3.868063911104377*^9, 3.868063943663975*^9, 
   3.8680640645105886`*^9, 3.86806411401935*^9, 3.868064231970542*^9, 
   3.868064272877668*^9, {3.868064326314003*^9, 3.868064355590081*^9}, 
   3.868064964255208*^9, 3.868093296823547*^9, 3.868095414726911*^9, 
   3.868110071832368*^9, 3.868112371401729*^9, 3.868112439367125*^9, 
   3.868114644586625*^9, {3.8681148211525917`*^9, 3.86811483576341*^9}, {
   3.868114974739155*^9, 3.868115020157379*^9}, 3.868115079005754*^9, 
   3.86811690247416*^9, 3.8681202538655167`*^9, 3.868466435282682*^9, 
   3.8684678111720657`*^9, 3.86853807876619*^9, 3.86854892402814*^9, 
   3.8698498975556927`*^9, 3.86985000803796*^9, 3.869852540031262*^9, 
   3.8698526365061083`*^9, 3.869852674672916*^9, 3.8698527393745623`*^9, 
   3.86992646390936*^9, 3.86992649683678*^9, 3.869926637417192*^9, 
   3.869926670081605*^9, 3.8699272520235033`*^9, 3.8699273690673428`*^9, 
   3.869927489111549*^9, 3.869927665334393*^9, 3.869927812472946*^9, 
   3.8699278776066093`*^9, 3.869927923802669*^9, 3.869928201283847*^9, 
   3.8699282932829857`*^9, 3.869928399172977*^9, 3.869928461370614*^9, 
   3.869929340775626*^9, 3.869929993386272*^9, 3.869930075152833*^9, 
   3.869930316796062*^9, 3.869930407694703*^9, {3.869931803434857*^9, 
   3.869931817064116*^9}, 3.8699318590695457`*^9, 3.869931895623556*^9, 
   3.869932052652638*^9, 3.8699333391556673`*^9, 3.8699334416836042`*^9, 
   3.8699337998778133`*^9, 3.87019239106188*^9, 3.870192495697878*^9, 
   3.870192766231185*^9, 3.87019298392531*^9, 3.870193375398306*^9, 
   3.870193437040976*^9, 3.870193579713499*^9, 3.870364136671116*^9, 
   3.870364213768168*^9, 3.8703643287014008`*^9, 3.8703658917796373`*^9, 
   3.870798993931797*^9, {3.870799169197084*^9, 3.870799182142867*^9}, 
   3.870799588386251*^9, 3.870799676014723*^9, 3.870799766638098*^9, 
   3.870799828943224*^9, 3.870799886873784*^9, 3.8708002320808353`*^9, 
   3.8708007287303*^9, 3.871556955341901*^9, 3.871557156845028*^9, 
   3.871557201942397*^9, 3.8715590807637997`*^9, 3.8715591990513067`*^9, {
   3.871559298678314*^9, 3.871559323996661*^9}, 3.871568480471472*^9, 
   3.871568929799676*^9, 3.871659882808181*^9, 3.871660024702491*^9, 
   3.871660107177004*^9, 3.871663212104114*^9, 3.87166327497528*^9, 
   3.8716633383608418`*^9, 3.871663413392578*^9, 3.871663631781901*^9, 
   3.872006775480554*^9, 3.87200759877247*^9, 3.872007683477613*^9, 
   3.872010312330832*^9, 3.872010658678879*^9, 3.872010796121921*^9, 
   3.87206974265984*^9, 3.8720700116668177`*^9, 3.872070064287916*^9, 
   3.872070110987377*^9, 3.872070141738673*^9, 3.872070215335116*^9, 
   3.872070599979828*^9, 3.872070686120274*^9, 3.872071770130115*^9, 
   3.872071806509252*^9, 3.87207220846274*^9, 3.8720723537871037`*^9, 
   3.872078404828971*^9, 3.8720786823757668`*^9, 3.8720910914575987`*^9, 
   3.872091132143744*^9, 3.872091839067943*^9, 3.872091895516142*^9, 
   3.872091932822094*^9, 3.872092194865982*^9, 3.872092493504415*^9, 
   3.872092624175786*^9, 3.872093228120408*^9, 3.872093770467237*^9, 
   3.872094433086995*^9, {3.8720945088461657`*^9, 3.872094534147958*^9}, 
   3.872094569070087*^9, 3.8720946694605227`*^9, 3.872097298521899*^9, 
   3.872097510394848*^9, 3.872157381239348*^9, 3.872157850747644*^9, 
   3.872159445400773*^9, 3.872160372725725*^9, 3.8721606748637743`*^9, 
   3.8721674951802397`*^9, 3.8721698516769533`*^9, 3.8722508543613043`*^9, 
   3.8722520607403507`*^9, 3.872252153614797*^9, 3.872252836794498*^9, 
   3.872254589376193*^9, 3.872254662608724*^9, 3.872254885732542*^9, {
   3.87225503317258*^9, 3.872255061303975*^9}, 3.872255655852921*^9, 
   3.872255700623723*^9, 3.8722569747752333`*^9, 3.8722573084168663`*^9, 
   3.872261717379671*^9, 3.8722620461144123`*^9, 3.87226208253061*^9, 
   3.8722621825450563`*^9, 3.872262647263708*^9, 3.872262940533399*^9, 
   3.8722657628951387`*^9, 3.872265819027317*^9, 3.872265887126058*^9, 
   3.8722664315310163`*^9, 3.872266508814645*^9, {3.87226676859682*^9, 
   3.8722667979393673`*^9}, 3.8722668599801197`*^9, 3.872267050787416*^9, 
   3.8722674124808683`*^9, 3.873285592409857*^9, 3.873285626297901*^9, 
   3.8732856982777452`*^9, 3.873286045899403*^9, 3.8732864659411507`*^9, 
   3.873286735256255*^9, 3.873287139479249*^9, 3.873287253783701*^9, 
   3.8732873461556997`*^9, 3.8732876570231667`*^9, 3.8732879726425333`*^9, 
   3.873297427124179*^9, 3.873297512395814*^9, 3.873297586915904*^9, 
   3.8732977819314632`*^9, 3.8732978292131777`*^9, 3.873298078923463*^9, 
   3.87329817649011*^9, 3.873298562534446*^9, 3.8732987053480997`*^9, 
   3.873298793952124*^9, 3.873298877078699*^9, 3.8733021008639317`*^9, 
   3.873302273276346*^9, 3.87330311593613*^9, 3.873304499743815*^9, 
   3.873305139941633*^9, 3.873305191301135*^9, 3.87330582084226*^9, 
   3.873307380108754*^9, 3.873307551013584*^9, 3.8733076595993767`*^9, 
   3.873308218986444*^9, 3.873308275633165*^9, 3.873471106029217*^9, 
   3.8750131334032288`*^9, 3.875013287314809*^9, 3.875013421352592*^9, 
   3.875013519714862*^9, 3.875013585304398*^9, 3.875013774122724*^9, 
   3.875013850878171*^9, 3.875111642933506*^9, 3.875231046113331*^9, 
   3.8752310927210093`*^9, 3.8752311538502893`*^9, 3.87523123104494*^9, 
   3.875231299980185*^9, 3.875231359680633*^9, 3.8752314126323833`*^9, 
   3.875231562385096*^9, 3.875232613011327*^9, 3.875232648461062*^9, 
   3.875232702697283*^9, 3.876407745594949*^9, 3.876407917443245*^9, 
   3.87640847188238*^9, 3.876411012501519*^9, 3.876411110575954*^9, 
   3.876411231030209*^9, 3.8764113702884703`*^9, 3.8764115917181253`*^9, 
   3.876411699955645*^9, 3.876412120924676*^9, 3.8764145407529507`*^9, 
   3.876414738411543*^9, 3.876414984064096*^9, 3.876415051808764*^9, 
   3.876415640139071*^9, 3.876416730300172*^9, 3.876421052703312*^9, 
   3.878141654294586*^9, 3.87814187176503*^9, 3.8781419269559813`*^9, 
   3.878142381305191*^9, 3.878142586062416*^9, 3.878142951921142*^9, 
   3.87814305949816*^9, 3.878143258201253*^9, 3.878143364254109*^9, 
   3.87814353005654*^9, 3.878143591067809*^9, 3.8781436945009003`*^9, 
   3.878143844475273*^9, 3.878143906244172*^9, 3.878144055665411*^9, 
   3.8781445240596743`*^9, 3.8781596093507977`*^9, 3.87815979449655*^9, 
   3.878160078210602*^9, 3.878164660978451*^9, 3.878164695852933*^9, 
   3.878164823163309*^9, 3.878165013509799*^9, {3.878165066334177*^9, 
   3.87816508788785*^9}, 3.8781652087004004`*^9, 3.8781652556691933`*^9, 
   3.8781654552997*^9, 3.87816553438916*^9, 3.878168001263137*^9, 
   3.878168311417803*^9, 3.878168509349443*^9, 3.878168682495123*^9, 
   3.878169897172242*^9, 3.878208944162925*^9, 3.8782214582509937`*^9, 
   3.8782215000828447`*^9, 3.8782216015944138`*^9, 3.878223063653194*^9, 
   3.87822373258805*^9, 3.8782237789464607`*^9, 3.878224404104457*^9, 
   3.878225042559948*^9, 3.878227126514512*^9, 3.878227182247987*^9, 
   3.8782285276165857`*^9, 3.878228746705842*^9, 3.878228790324992*^9, 
   3.8782289403979*^9, 3.878229657305401*^9, 3.8782297642997227`*^9, {
   3.878230022782686*^9, 3.878230050265437*^9}, 3.878230953244068*^9, 
   3.87823105708325*^9, 3.8782348697228603`*^9, 3.8783494380791397`*^9, 
   3.878389737036455*^9, 3.87839839530081*^9, 3.8783988878264637`*^9, 
   3.87840008995807*^9, 3.878652102603485*^9, 3.878652277392107*^9, 
   3.8786561433298264`*^9, 3.878657599153185*^9, 3.878657918025382*^9, 
   3.8786579950891733`*^9, 3.878658037793841*^9, 3.8786581346790047`*^9, 
   3.878659904593437*^9, 3.878664845705575*^9, 3.878664950646323*^9, 
   3.878665023491941*^9, 3.878665107652876*^9, 3.878665317552593*^9, 
   3.878665443263729*^9, 3.878666005100608*^9, 3.878666089384899*^9, 
   3.878666178762498*^9, 3.878667533242537*^9, 3.8787239758518677`*^9, {
   3.878726612614924*^9, 3.8787266403896923`*^9}, 3.878727056407398*^9, 
   3.878739948517228*^9, 3.878740296112897*^9, 3.8787404879770184`*^9, 
   3.8787408412177677`*^9, 3.87874100836561*^9, 3.878741530388095*^9, 
   3.8787419591983128`*^9, 3.878743752460145*^9, 3.878743918133815*^9, 
   3.878744357517434*^9, 3.878745560131585*^9, 3.8787465079210873`*^9, 
   3.8787465903673983`*^9, 3.878747267860855*^9, 3.878747515871711*^9, 
   3.878751529283023*^9, 3.878751890552966*^9, 3.878752317429584*^9, 
   3.878753170227127*^9, 3.878753998169485*^9, 3.87877682462457*^9, 
   3.8787769518395033`*^9, 3.878777014898765*^9, 3.8787771468144073`*^9, 
   3.8787775874075108`*^9, 3.878777671939274*^9, 3.8787790162369623`*^9, 
   3.878779064828993*^9, 3.8787792467754173`*^9, 3.8790446861611223`*^9, 
   3.879089596374617*^9, 3.879555310937932*^9, 3.8795554293541603`*^9, 
   3.879555868097677*^9, 3.879556324996468*^9, 3.879561529311891*^9, 
   3.879561707622015*^9, 3.879602509649827*^9, 3.8796025799023523`*^9, 
   3.8796040269235353`*^9, 3.879608282920198*^9, 3.8796102562552156`*^9, 
   3.879633688343511*^9, 3.879633720762743*^9, 3.879634504095954*^9, 
   3.879634696997095*^9, 3.87963480452704*^9, 3.879637667351679*^9, 
   3.879637741004218*^9, 3.879638891625942*^9, 3.8796392554464083`*^9, 
   3.87964009142423*^9, 3.879640203509657*^9, 3.879640465831273*^9, 
   3.879641721198798*^9, 3.87964177110013*^9, 3.879643409525909*^9, 
   3.8796434521504183`*^9, {3.879643538673438*^9, 3.8796435677314577`*^9}, 
   3.8796440185290213`*^9, 3.879644268291314*^9, 3.880033879996176*^9, 
   3.8800341953734217`*^9, 3.880253882168872*^9, 3.880254233341172*^9, 
   3.8803160848024817`*^9, 3.88031633627483*^9, 3.8803164733546257`*^9, 
   3.8803167149280157`*^9, 3.880316835984521*^9, 3.880317340211351*^9, {
   3.880317374282455*^9, 3.8803173967966747`*^9}, 3.880317692247615*^9, 
   3.880317766554344*^9, 3.880317931760387*^9, 3.880319548093699*^9, 
   3.880341233162202*^9, 3.8803413455736856`*^9, 3.88034432323219*^9, 
   3.880344495811256*^9, 3.880344640584486*^9, 3.880344730794146*^9, 
   3.88034482943934*^9, 3.880345001653494*^9, 3.880345189194893*^9, 
   3.8803453295209312`*^9, 3.880345829907258*^9, 3.880345904633604*^9, 
   3.880345936531085*^9, 3.8803460044019327`*^9, 3.8803462636950417`*^9, 
   3.880346586251905*^9, 3.880346937356761*^9, 3.880382187857361*^9, 
   3.8804505261591473`*^9, 3.880450624998872*^9, 3.880457301032799*^9, 
   3.8804639474077883`*^9, 3.880464045632523*^9, 3.880464131883235*^9, 
   3.8804644206917143`*^9, 3.8804645707161922`*^9, 3.880464838919198*^9, 
   3.880464960222363*^9, 3.8804686172981863`*^9, 3.8804690581014633`*^9, 
   3.880470685301537*^9, 3.8804839861675262`*^9, 3.880484195322713*^9, 
   3.880484448449926*^9, 3.880484995239634*^9, 3.880501820760654*^9, 
   3.88050199224717*^9, 3.8805021554207573`*^9, 3.880502620007629*^9, 
   3.880508501011982*^9, 3.88050907567376*^9, 3.8805096349748487`*^9, 
   3.8805441500803757`*^9, 3.8805508135975246`*^9, 3.8805509349715242`*^9, 
   3.8805516275723877`*^9, 3.880552471771493*^9, 3.880552527812155*^9, 
   3.880553540928072*^9, 3.88055389903673*^9, 3.8805539365212317`*^9, 
   3.8805540671542883`*^9, 3.8805581362799273`*^9, 3.880558370287098*^9, 
   3.8805586118605213`*^9, 3.8805588112538767`*^9, 3.8805602834957438`*^9, 
   3.8805606463102493`*^9, 3.880561308916643*^9, 3.8805616977811537`*^9, 
   3.880561809468713*^9, 3.880563398435573*^9, 3.8806410056428432`*^9, 
   3.880805985966012*^9, 3.880806123188246*^9, 3.880806382325836*^9, 
   3.880849379683951*^9, 3.880849745615975*^9, 3.881154688731779*^9, 
   3.88115500982487*^9, 3.8816912408141813`*^9, 3.881713704352219*^9, 
   3.881714018802926*^9, 3.881714141174417*^9, 3.881716059299705*^9, 
   3.881716189311166*^9, 3.881716293295477*^9, 3.8817164015175533`*^9, 
   3.881716642103121*^9, 3.881716939474506*^9, 3.881717058093667*^9, 
   3.88171718835776*^9, 3.881717298640086*^9, 3.881717556687969*^9, 
   3.883231218886999*^9, 3.8832439837605124`*^9, 3.88324402852306*^9, 
   3.88324409821902*^9, 3.883244182580286*^9, 3.883244303722007*^9, 
   3.883244452370553*^9, 3.883244874802417*^9, 3.883244956156702*^9, 
   3.88324506488885*^9, 3.883245244391533*^9, 3.8832456615638123`*^9, 
   3.8838434427150183`*^9, 3.8838435415424137`*^9, 3.883843701115837*^9, 
   3.883844056412174*^9, 3.8838440947813673`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"c0c7a19a-8683-480b-ac16-25a2d9b0dde3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"PacletDirectoryLoad", "[", 
   RowBox[{"ParentDirectory", "[", 
    RowBox[{"NotebookDirectory", "[", "]"}], "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.8722657359036007`*^9, 3.872265749775318*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"e61e89d2-034f-4b87-9582-4028542464d0"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<ChristopherWolfram`ForeignFunctionInterface`\>\"",
   "]"}]], "Input",
 CellChangeTimes->{{3.875231050673148*^9, 3.875231056107067*^9}, {
  3.879044690576518*^9, 3.879044692718449*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"d7f1f76e-f543-4578-9a1d-dfe36104d3e8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Building", "Section",
 CellChangeTimes->{{3.87523104092021*^9, 
  3.87523104174949*^9}},ExpressionUUID->"0969184b-b69f-47f9-85bb-\
9029dc4c5df1"],

Cell["Building the ffiConstants library:", "Text",
 CellChangeTimes->{{3.878742756807526*^9, 
  3.8787427640558977`*^9}},ExpressionUUID->"736f435a-9efe-42cb-850b-\
abdfaa8f3805"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Needs", "[", "\"\<CCompilerDriver`\>\"", "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"CreateLibrary", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ParentDirectory", "@", 
          RowBox[{"NotebookDirectory", "[", "]"}]}], ",", 
         "\"\<ffiConstants\>\"", ",", "\"\<ffiConstants.c\>\""}], "}"}], 
       "]"}], "}"}], ",", "\[IndentingNewLine]", "\"\<ffiConstants\>\"", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<TargetDirectory\>\"", "->", "\[IndentingNewLine]", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ParentDirectory", "@", 
          RowBox[{"NotebookDirectory", "[", "]"}]}], ",", 
         "\[IndentingNewLine]", "\"\<ForeignFunctionInterface\>\"", ",", 
         "\[IndentingNewLine]", "\"\<LibraryResources\>\"", ",", 
         "\[IndentingNewLine]", "$SystemID"}], "\[IndentingNewLine]", "}"}], 
       "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Libraries\>\"", "->", 
      RowBox[{"{", "\"\</lib/x86_64-linux-gnu/libffi.so\>\"", "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.8787427779772*^9, 3.878742779673423*^9}, {
   3.878743063979308*^9, 3.8787431232540197`*^9}, {3.878743180129259*^9, 
   3.878743195032433*^9}, {3.878743225613662*^9, 3.878743229631823*^9}, {
   3.8787433920096607`*^9, 3.8787434276172867`*^9}, {3.878743652355084*^9, 
   3.878743664155435*^9}, {3.8787439097989073`*^9, 3.8787439270522547`*^9}, {
   3.878744420223234*^9, 3.878744420262735*^9}, 3.879555306531308*^9, 
   3.8796094928115673`*^9, {3.879609554058426*^9, 3.879609555214347*^9}, {
   3.880213653055911*^9, 3.880213656792818*^9}, 3.88169125323313*^9, 
   3.881716059114595*^9, {3.883245064365506*^9, 3.883245066893615*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"92733140-6395-45f4-a96f-983e14579bc4"],

Cell["Building the compiled component:", "Text",
 CellChangeTimes->{{3.8787427518634233`*^9, 
  3.8787427555594597`*^9}},ExpressionUUID->"f9136f71-b7c8-4409-bda1-\
0b6102a4288f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BuildCompiledComponent", "[", 
  RowBox[{"\"\<ForeignFunctionInterface\>\"", ",", 
   RowBox[{
   "PacletObject", "[", "\"\<ChristopherWolfram/ForeignFunctionInterface\>\"",
     "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.875231045615931*^9, 3.8752310476041603`*^9}, {
  3.8752310813078423`*^9, 3.8752310848044357`*^9}, {3.878667509122073*^9, 
  3.878667516745905*^9}, {3.8786675538121443`*^9, 3.8786675567308807`*^9}, {
  3.878726676131106*^9, 3.8787266763068953`*^9}, {3.87904470238311*^9, 
  3.8790447051752863`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"fdaf6456-106c-42ca-bf07-57b6ecf1e3df"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Success",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[Checkmark]\"", 
              Directive[
               RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
               25], StripOnInput -> False], ContentPadding -> False, 
             FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Component\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["CompiledComponent", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionInterface\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Declarations: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["132", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionInterface\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Declarations: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["132", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"LibraryFunctions: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"InstalledFunctions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["19", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"ExternalLibraries: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"LoadingEpilogs: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   CompiledComponent["ForeignFunctionInterface"], Selectable -> 
                   False, Editable -> False, SelectWithContents -> True], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"BuildDirectory\"", "\": \""}, "RowDefault"],
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                 "\"/home/christopher/git/ForeignFunctionInterface/\
ForeignFunctionInterface/LibraryResources/Linux-x86-64\"", "SummaryItem"]}]}},
              GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[Checkmark]\"", 
              Directive[
               RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
               25], StripOnInput -> False], ContentPadding -> False, 
             FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Component\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["CompiledComponent", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionInterface\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Declarations: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["132", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionInterface\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Declarations: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["132", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"LibraryFunctions: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"InstalledFunctions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["19", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"ExternalLibraries: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"LoadingEpilogs: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   CompiledComponent["ForeignFunctionInterface"], Selectable -> 
                   False, Editable -> False, SelectWithContents -> True], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"BuildDirectory\"", "\": \""}, "RowDefault"],
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                 "\"/home/christopher/git/ForeignFunctionInterface/\
ForeignFunctionInterface/LibraryResources/Linux-x86-64\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Artifacts\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  
                  RowBox[{
                   "{", "\"/home/christopher/git/ForeignFunctionInterface/\
ForeignFunctionInterface/LibraryResources/Linux-x86-64/\
ForeignFunctionInterface.so\"", "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"BuildTime\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "122.279488`", "\"s\"", "seconds", "\"Seconds\""}, 
                   "Quantity", SyntaxForm -> Mod], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"ComponentBuilt\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Success[
  "ComponentBuilt", <|
   "Component" -> CompiledComponent["ForeignFunctionInterface"], 
    "BuildDirectory" -> 
    "/home/christopher/git/ForeignFunctionInterface/ForeignFunctionInterface/\
LibraryResources/Linux-x86-64", 
    "Artifacts" -> {
     "/home/christopher/git/ForeignFunctionInterface/ForeignFunctionInterface/\
LibraryResources/Linux-x86-64/ForeignFunctionInterface.so"}, "BuildTime" -> 
    Quantity[122.279488, "Seconds"]|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.883245192044945*^9, 3.883843828814719*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"6fd595aa-c691-4218-b16b-ba5d88953c4a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Beep", "[", "]"}]], "Input",
 CellChangeTimes->{{3.880382177298687*^9, 3.8803821792543077`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"fd44cdfa-2d7f-44a4-8e3f-03acfff5a1a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Testing", "Section",
 CellChangeTimes->{{3.875231664082879*^9, 
  3.8752316650821877`*^9}},ExpressionUUID->"762b75dd-df63-44cb-9ac2-\
74adda1e11cd"],

Cell[CellGroupData[{

Cell["Basic", "Subsection",
 CellChangeTimes->{{3.878144312265067*^9, 
  3.878144312836811*^9}},ExpressionUUID->"b4ae5d32-9af7-424b-bb47-\
23aef3209bff"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"demoLib", "=", 
  RowBox[{
  "LoadExternalLibrary", "[", "\"\<compilerDemoBase\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.875231667698007*^9, 3.8752316720105877`*^9}, {
   3.8752324938877277`*^9, 3.875232502335763*^9}, {3.875232594750108*^9, 
   3.875232597511079*^9}, {3.875232798130351*^9, 3.875232798196138*^9}, {
   3.878142493595173*^9, 3.878142494666603*^9}, 3.883244799525352*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"a0aa9f34-18d7-425b-ab49-b6cf512b9d29"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ExternalLibrary",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               TagBox["\"name: \"", "SummaryItem"]}, {
               TagBox["\"compilerDemoBase.so\"", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               TagBox["\"name: \"", "SummaryItem"]}, {
               TagBox["\"compilerDemoBase.so\"", "SummaryItem"]}, {
               TagBox["\"path: \"", "SummaryItem"]}, {
               TagBox[
               "\"/usr/local/Wolfram/Mathematica/13.2/SystemFiles/Links/\
LibraryLink/LibraryResources/Linux-x86-64/compilerDemoBase.so\"", 
                "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ChristopherWolfram`ForeignFunctionInterface`ExternalLibrary[
  "/usr/local/Wolfram/Mathematica/13.2/SystemFiles/Links/LibraryLink/\
LibraryResources/Linux-x86-64/compilerDemoBase.so", 
   ChristopherWolfram`ForeignFunctionInterface`OpaqueRawPointer[53935056]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.875232503169067*^9, 3.875232619426947*^9, 3.875232659896351*^9, {
   3.8752327806666317`*^9, 3.875232798888033*^9}, 3.8764155443821793`*^9, 
   3.876416403627836*^9, 3.876420960062374*^9, 3.876421238784281*^9, 
   3.878142495221792*^9, 3.878142672840567*^9, 3.878144210277327*^9, 
   3.878168117057225*^9, 3.878225970501398*^9, 3.8782301636163683`*^9, 
   3.878652391078618*^9, 3.879555522918598*^9, 3.879556428664649*^9, 
   3.879608403031136*^9, 3.883244593644762*^9, 3.8832447998060713`*^9, 
   3.883245214259782*^9, 3.883245350257533*^9, 3.883245668475716*^9, 
   3.8838439544983892`*^9, 3.8838440638414507`*^9, 3.8838440974769583`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"05b27dc9-003d-4308-8bcd-87a39e9461c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"addone", "=", 
  RowBox[{"ForeignFunction", "[", 
   RowBox[{"demoLib", ",", "\"\<addone\>\"", ",", 
    RowBox[{
     RowBox[{"{", "\"\<CInt\>\"", "}"}], "->", "\"\<CInt\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.875232518115183*^9, 3.875232532890107*^9}, {
  3.875232592645788*^9, 3.8752325994555902`*^9}, {3.8752326407683983`*^9, 
  3.875232654736418*^9}, {3.8764155489287443`*^9, 3.87641555483746*^9}, {
  3.878142497675231*^9, 3.878142503491035*^9}, {3.878160307950583*^9, 
  3.87816030938167*^9}, {3.87823016609489*^9, 3.878230167181635*^9}, {
  3.880509647748948*^9, 3.8805096515510197`*^9}, {3.883244603164361*^9, 
  3.883244605068748*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"436146f3-e1d0-4fff-8025-bc47dd95295b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ForeignFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox["\"name: \"", "SummaryItem"], 
               TagBox["\"addone\"", "SummaryItem"]}, {
               TagBox["\"type: \"", "SummaryItem"], 
               TagBox[
                RowBox[{
                  RowBox[{"{", "\"CInt\"", "}"}], "\[Rule]", "\"CInt\""}], 
                "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               TagBox["\"name: \"", "SummaryItem"], 
               TagBox["\"addone\"", "SummaryItem"]}, {
               TagBox["\"type: \"", "SummaryItem"], 
               TagBox[
                RowBox[{
                  RowBox[{"{", "\"CInt\"", "}"}], "\[Rule]", "\"CInt\""}], 
                "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ChristopherWolfram`ForeignFunctionInterface`ForeignFunction[
  "addone", {"CInt"} -> "CInt", 
   DataStructure["ForeignFunctionObject", $Failed]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8752325339272614`*^9, 3.875232621029664*^9, 3.8752326624622717`*^9, {
   3.87523278091392*^9, 3.8752327998002853`*^9}, {3.876415555274091*^9, 
   3.8764155570951633`*^9}, 3.876416404358057*^9, 3.876420960856423*^9, 
   3.87642123890386*^9, 3.8781425045248623`*^9, 3.8781426737541933`*^9, 
   3.8781442115981083`*^9, 3.8781681200236397`*^9, 3.878230167907538*^9, 
   3.8786523917686987`*^9, 3.879555523446209*^9, 3.879556429315852*^9, 
   3.879608403795244*^9, 3.883244605746036*^9, 3.8832453635815277`*^9, 
   3.883245668828463*^9, 3.883843955163463*^9, 3.883844064524055*^9, 
   3.883844097716177*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"14fc7a7f-b1fd-483f-b02b-48a520c6f978"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"addone", "[", "12", "]"}]], "Input",
 CellChangeTimes->{{3.8832446064335546`*^9, 3.883244607932886*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"8a0419c7-4f84-4560-a8f7-37bf926217f4"],

Cell[BoxData["13"], "Output",
 CellChangeTimes->{3.883244608261608*^9, 3.883245365022626*^9, 
  3.883843956074298*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"12e46910-4ee8-4c92-9ef3-e595f8c157e9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["addone", "Subsubsection",
 CellChangeTimes->{{3.87839937060256*^9, 
  3.8783993730103273`*^9}},ExpressionUUID->"43455c52-d0a4-4f20-b26f-\
c2989a64bf4b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LibraryLoad", "[", "\"\<compilerDemoBase\>\"", "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.878160315790765*^9, 3.878160321206682*^9}, 
   3.8787404597394238`*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"055e2bf9-b4e6-4ca9-9ecc-9e2e05281437"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"addone", "=", 
  RowBox[{"ForeignFunction", "[", 
   RowBox[{"\"\<addone\>\"", ",", 
    RowBox[{
     RowBox[{"{", "\"\<CInt\>\"", "}"}], "->", "\"\<CInt\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.880345936306713*^9, 3.88034593739324*^9}, {
  3.880346624183648*^9, 3.880346625700397*^9}, {3.880382360269359*^9, 
  3.880382363870512*^9}, {3.880502341248946*^9, 3.880502341619272*^9}, {
  3.8805027777086267`*^9, 3.880502783703507*^9}, {3.880505622871237*^9, 
  3.8805056315518637`*^9}, {3.880509707284232*^9, 3.880509707339629*^9}, {
  3.883244618261635*^9, 3.883244619862056*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"172418f8-8fd7-481e-9d92-4b467ac9227f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ForeignFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox["\"name: \"", "SummaryItem"], 
               TagBox["\"addone\"", "SummaryItem"]}, {
               TagBox["\"type: \"", "SummaryItem"], 
               TagBox[
                RowBox[{
                  RowBox[{"{", "\"CInt\"", "}"}], "\[Rule]", "\"CInt\""}], 
                "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               TagBox["\"name: \"", "SummaryItem"], 
               TagBox["\"addone\"", "SummaryItem"]}, {
               TagBox["\"type: \"", "SummaryItem"], 
               TagBox[
                RowBox[{
                  RowBox[{"{", "\"CInt\"", "}"}], "\[Rule]", "\"CInt\""}], 
                "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ChristopherWolfram`ForeignFunctionInterface`ForeignFunction[
  "addone", {"CInt"} -> "CInt", 
   DataStructure["ForeignFunctionObject", $Failed]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.88034672989834*^9, 3.8803823647440977`*^9, 3.8804507820275927`*^9, 
   3.880457308263109*^9, 3.880464735960601*^9, 3.880468808582326*^9, 
   3.8805023419506397`*^9, {3.8805027768567266`*^9, 3.880502784004553*^9}, {
   3.8805056257757387`*^9, 3.8805056317783413`*^9}, 3.880508659395402*^9, 
   3.88055081989723*^9, 3.8805510982460012`*^9, 3.8811551352530603`*^9, 
   3.8817138309093447`*^9, 3.883244620089243*^9, 3.883245368551524*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"cc855f73-e78a-4179-91ad-7b50f3b55ca9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"addone", "[", "12", "]"}], "//", "RepeatedTiming"}]], "Input",
 CellChangeTimes->{{3.883245374833386*^9, 3.883245378313085*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"e2c13335-41ce-407d-9340-2e097c178e38"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7.947816848754883`*^-7", ",", "13"}], "}"}]], "Output",
 CellChangeTimes->{3.883245380220956*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"f35df512-3256-47bc-99a6-e06f3614a99b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ForeignFunction", "[", 
   RowBox[{"\"\<addone\>\"", ",", 
    RowBox[{
     RowBox[{"{", "\"\<CInt\>\"", "}"}], "->", "\"\<CInt\>\""}]}], "]"}], "//",
   "RepeatedTiming"}]], "Input",
 CellChangeTimes->{{3.880382398196877*^9, 3.8803824135347967`*^9}, {
  3.880502347255947*^9, 3.880502347694785*^9}, {3.883245394945208*^9, 
  3.883245410352972*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"9a77e349-efcc-4403-8035-976ba9840372"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4.5113525390625`*^-6", ",", 
   InterpretationBox[
    RowBox[{
     TagBox["ForeignFunction",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              GridBox[{{
                 TagBox["\"name: \"", "SummaryItem"], 
                 TagBox["\"addone\"", "SummaryItem"]}, {
                 TagBox["\"type: \"", "SummaryItem"], 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", "\"CInt\"", "}"}], "\[Rule]", "\"CInt\""}], 
                  "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              GridBox[{{
                 TagBox["\"name: \"", "SummaryItem"], 
                 TagBox["\"addone\"", "SummaryItem"]}, {
                 TagBox["\"type: \"", "SummaryItem"], 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", "\"CInt\"", "}"}], "\[Rule]", "\"CInt\""}], 
                  "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    ChristopherWolfram`ForeignFunctionInterface`ForeignFunction[
    "addone", {"CInt"} -> "CInt", 
     DataStructure["ForeignFunctionObject", $Failed]],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.880382401493926*^9, 3.8804507891888313`*^9, 3.880457319616211*^9, 
   3.880468813896852*^9, 3.8805023498566008`*^9, {3.883245396926897*^9, 
   3.883245411993985*^9}},
 CellLabel->"Out[14]=",ExpressionUUID->"35a88f56-f101-4120-b3f8-6fea804c18d0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ForeignFunction", "[", 
    RowBox[{"\"\<addone\>\"", ",", 
     RowBox[{
      RowBox[{"{", "\"\<CInt\>\"", "}"}], "->", "\"\<CInt\>\""}]}], "]"}], 
   "[", "12", "]"}], "//", "RepeatedTiming"}]], "Input",
 CellChangeTimes->{{3.883245401704619*^9, 3.883245402100203*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"9255ff8e-ba3d-427a-b22b-1fb5f5862913"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5.5181884765625`*^-6", ",", "13"}], "}"}]], "Output",
 CellChangeTimes->{{3.883245403869891*^9, 3.8832454139638767`*^9}},
 CellLabel->"Out[15]=",ExpressionUUID->"ce17c45a-01c0-4b00-b62c-2dc3c97815db"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cf", "=", 
  RowBox[{"FunctionCompile", "[", 
   RowBox[{
    RowBox[{"LibraryFunctionDeclaration", "[", 
     RowBox[{"\"\<addone\>\"", ",", "\"\<compilerDemoBase\>\"", ",", 
      RowBox[{
       RowBox[{"{", "\"\<CInt\>\"", "}"}], "->", "\"\<CInt\>\""}]}], "]"}], 
    ",", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"Typed", "[", 
       RowBox[{"n", ",", "\"\<CInt\>\""}], "]"}], ",", 
      RowBox[{
       RowBox[{"LibraryFunction", "[", "\"\<addone\>\"", "]"}], "[", "n", 
       "]"}]}], "]"}]}], "]"}]}]], "Input",
 CellLabel->"In[16]:=",
 CellID->371194181,ExpressionUUID->"8fa5fa71-8972-458a-9752-ebfcd4979f4a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledCodeFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GraphicsBox[
             InsetBox[
              FormBox[
               StyleBox["\"Code\"", 
                GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
               TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], Axes -> 
             False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {27., {0., 10.}}], Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Signature: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", "\"Integer32\"", "}"}], "\[Rule]", 
                    "\"Integer32\""}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GraphicsBox[
             InsetBox[
              FormBox[
               StyleBox["\"Code\"", 
                GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
               TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], Axes -> 
             False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {27., {0., 10.}}], Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Signature: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", "\"Integer32\"", "}"}], "\[Rule]", 
                    "\"Integer32\""}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledCodeFunction[<|
   "Signature" -> TypeSpecifier[{"Integer32"} -> "Integer32"], "Input" -> 
    Compile`Program[
      LibraryFunctionDeclaration[
      "addone", "compilerDemoBase", {"CInt"} -> "CInt"], 
      Function[
       Typed[$CellContext`n, "CInt"], 
       LibraryFunction["addone"][$CellContext`n]]], "ErrorFunction" -> 
    Automatic, "InitializationName" -> 
    "Initialization_656a9a61_8d91_4b40_a93f_0124c92ceec0", "ExpressionName" -> 
    "Main_ExprInvocation", "CName" -> "Main_CInvocation", "FunctionName" -> 
    "Main", "SystemID" -> "Linux-x86-64", "VersionData" -> {13.2, 0, 0}, 
    "CompiledIR" -> <|"Linux-x86-64" -> ByteArray[CompressedData["
1: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
        "]]|>, "ExternalLibraryPaths" -> {"compilerDemoBase"}, "orcInstance" -> 
    61573152, "orcModuleId" -> 60565328, "targetMachineId" -> 62604464|>, 
   140193210957968, 140193210957840, 140193210957904, 140193210957824, 
   "{\"Integer32\"} -> \"Integer32\""],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.878666451691725*^9, 3.878668856497904*^9, 
  3.878729270491336*^9, 3.878740591300293*^9, 3.878741644694703*^9, 
  3.878745665595973*^9, 3.87955643398732*^9, 3.879634940766651*^9, 
  3.883245454022544*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"ed37f021-8641-44ff-85d0-7ad8e4dce37a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fun", "=", 
  RowBox[{"LibraryFunctionLoad", "[", 
   RowBox[{"\"\<demo\>\"", ",", " ", "\"\<demo_I_I\>\"", ",", 
    RowBox[{"{", "Integer", "}"}], ",", "Integer"}], "]"}]}]], "Input",
 CellLabel->"In[17]:=",
 CellID->90146561,ExpressionUUID->"6df37121-3d70-492d-a0bb-68aa1ba39fd5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["LibraryFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Function name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"demo_I_I\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Function name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"demo_I_I\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"{", "Integer", "}"}], 
                   ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 0, 
                   StripOnInput -> True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Return type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                  "Integer", ImageSize -> {{1, 500}, Automatic}, 
                   BaselinePosition -> Baseline, ContentPadding -> False, 
                   FrameMargins -> 0, StripOnInput -> True], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Library: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"demo.so\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  LibraryFunction[
  "/usr/local/Wolfram/Mathematica/13.2/SystemFiles/Links/LibraryLink/\
LibraryResources/Linux-x86-64/demo.so", "demo_I_I", {Integer}, Integer],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.878729286921789*^9, 3.8787416466309767`*^9, 
  3.878745666823907*^9, 3.879556435910502*^9, 3.879634942001863*^9, 
  3.883245454645783*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"712c6a6d-1ac4-4f20-83f5-bad9eb141224"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"addone", "[", "12", "]"}], "//", "RepeatedTiming"}]], "Input",
 CellChangeTimes->{{3.878142514899678*^9, 3.87814252144354*^9}, {
  3.878144218362068*^9, 3.878144219794722*^9}, {3.883245458188012*^9, 
  3.883245459578511*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"a63300bb-699a-4379-8b37-98748e83ee8b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7.954511642456055`*^-7", ",", "13"}], "}"}]], "Output",
 CellChangeTimes->{
  3.876421239061591*^9, {3.87814251690933*^9, 3.878142521760667*^9}, {
   3.87814267681461*^9, 3.878142678588146*^9}, {3.878144213414385*^9, 
   3.878144221050662*^9}, {3.878160331282092*^9, 3.878160333491497*^9}, 
   3.878165375080583*^9, 3.878165648387349*^9, 3.878168125224414*^9, 
   3.878223179675006*^9, 3.878230176330496*^9, 3.878349550235978*^9, 
   3.878652397201144*^9, {3.8786664474670553`*^9, 3.8786664647693768`*^9}, {
   3.878668860795928*^9, 3.878668867548039*^9}, 3.878729273930969*^9, 
   3.878745682724843*^9, 3.878775141655422*^9, 3.8795564382575197`*^9, 
   3.879604220314247*^9, {3.87963494466057*^9, 3.879634960953952*^9}, 
   3.880254073196747*^9, {3.88324545662879*^9, 3.883245468204101*^9}},
 CellLabel->"Out[22]=",ExpressionUUID->"0259faee-7aaf-4a25-af34-af60295099ac"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"cf", "[", "12", "]"}], "//", "RepeatedTiming"}]], "Input",
 CellChangeTimes->{{3.878666455731655*^9, 3.878666460756755*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"4a3857b8-41d2-4c5f-820e-f2b7b0433574"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.5469908714294433`*^-7", ",", "13"}], "}"}]], "Output",
 CellChangeTimes->{{3.8786664567601433`*^9, 3.878666462290822*^9}, 
   3.878668858406847*^9, 3.878729272264757*^9, {3.8787456700726433`*^9, 
   3.878745674519853*^9}, 3.879556440219102*^9, 3.879634952453486*^9, 
   3.883245464262672*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"439bad98-b44e-41b2-88d0-d5395ccdc505"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"fun", "[", "12", "]"}], "//", "RepeatedTiming"}]], "Input",
 CellChangeTimes->{{3.878729291410159*^9, 3.878729294228159*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"93066710-9e79-4ff8-af21-6140e9319d2c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.9858241081237792`*^-7", ",", "13"}], "}"}]], "Output",
 CellChangeTimes->{
  3.878729300366481*^9, {3.8787456768467913`*^9, 3.8787456798508472`*^9}, 
   3.879556442443882*^9, {3.87963495485316*^9, 3.879634957682541*^9}, 
   3.883245466035241*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"d24a5bcc-2597-4cd9-8f45-5546a2323184"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["populateArray", "Subsubsection",
 CellChangeTimes->{{3.87839937060256*^9, 
  3.8783993832348337`*^9}},ExpressionUUID->"d8be9472-d061-40b7-972e-\
f04be5f9066c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"populateArray", "=", 
  RowBox[{"ForeignFunction", "[", 
   RowBox[{"\"\<populateArray\>\"", ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<OpaqueRawPointer\>\"", ",", "\"\<CLong\>\""}], "}"}], 
     "->", "\"\<CInt\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.878160323454307*^9, 3.878160326494378*^9}, {
  3.878230171119422*^9, 3.87823017186165*^9}, {3.87839938500382*^9, 
  3.8783994038919897`*^9}, {3.880508225791162*^9, 3.8805082318567953`*^9}, {
  3.8832456857954483`*^9, 3.8832456876349087`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"89ecc4c5-8e7b-4d9c-b099-91b59b978adc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ForeignFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox["\"name: \"", "SummaryItem"], 
               TagBox["\"populateArray\"", "SummaryItem"]}, {
               TagBox["\"type: \"", "SummaryItem"], 
               TagBox[
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"\"OpaqueRawPointer\"", ",", "\"CLong\""}], "}"}],
                   "\[Rule]", "\"CInt\""}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               TagBox["\"name: \"", "SummaryItem"], 
               TagBox["\"populateArray\"", "SummaryItem"]}, {
               TagBox["\"type: \"", "SummaryItem"], 
               TagBox[
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"\"OpaqueRawPointer\"", ",", "\"CLong\""}], "}"}],
                   "\[Rule]", "\"CInt\""}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ChristopherWolfram`ForeignFunctionInterface`ForeignFunction[
  "populateArray", {"OpaqueRawPointer", "CLong"} -> "CInt", 
   DataStructure["ForeignFunctionObject", $Failed]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8781603277206373`*^9, 3.8781653695197*^9, 3.8781656458589478`*^9, 
   3.878168122523356*^9, 3.878223176780526*^9, 3.8782301729002953`*^9, 
   3.8783495469097137`*^9, 3.8783994066098747`*^9, 3.8786523988890543`*^9, 
   3.878746673706753*^9, 3.878747370582423*^9, 3.87875166702433*^9, 
   3.878754001449292*^9, 3.8787772452732964`*^9, 3.878779165753319*^9, 
   3.878779435721386*^9, {3.879555529466498*^9, 3.879555546228342*^9}, 
   3.879555964304117*^9, 3.879556445952958*^9, 3.879561965695459*^9, 
   3.8796027018234243`*^9, 3.879608409071542*^9, {3.880508223559552*^9, 
   3.880508232208712*^9}, 3.8805086675647078`*^9, 3.8805098260753717`*^9, {
   3.883245687856882*^9, 3.883245703159944*^9}, 3.883844104869199*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"cb8e616a-ea2e-44e1-bc2d-8ab23198a6e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ForeignFunction", "[", 
  RowBox[{"\"\<populateArray\>\"", ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<RawPointer\>\"", "::[", "\"\<CLong\>\"", "]"}], ",", 
      "\"\<CLong\>\""}], "}"}], "->", "\"\<CInt\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.883844116833149*^9, 3.883844120776651*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"0074d8f0-c4ba-4497-8546-a818911a63f2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ForeignFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox["\"name: \"", "SummaryItem"], 
               TagBox["\"populateArray\"", "SummaryItem"]}, {
               TagBox["\"type: \"", "SummaryItem"], 
               TagBox[
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"TypeSpecifier", "[", "\"RawPointer\"", "]"}], 
                    "[", "\"CLong\"", "]"}], ",", "\"CLong\""}], "}"}], 
                  "\[Rule]", "\"CInt\""}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               TagBox["\"name: \"", "SummaryItem"], 
               TagBox["\"populateArray\"", "SummaryItem"]}, {
               TagBox["\"type: \"", "SummaryItem"], 
               TagBox[
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"TypeSpecifier", "[", "\"RawPointer\"", "]"}], 
                    "[", "\"CLong\"", "]"}], ",", "\"CLong\""}], "}"}], 
                  "\[Rule]", "\"CInt\""}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ChristopherWolfram`ForeignFunctionInterface`ForeignFunction[
  "populateArray", {
     TypeSpecifier["RawPointer"]["CLong"], "CLong"} -> "CInt", 
   DataStructure["ForeignFunctionObject", $Failed]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8838441210279207`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"c4e058e4-6c46-4c03-b7be-f680409dac0e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"array", "=", 
  RowBox[{"CreateManagedExpression", "[", 
   RowBox[{
    RowBox[{"CreateBuffer", "[", 
     RowBox[{"\"\<CLong\>\"", ",", "100"}], "]"}], ",", "DeleteBuffer"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.878399408813304*^9, 3.878399432780897*^9}, {
   3.87877724677135*^9, 3.8787772484904327`*^9}, {3.87955554958391*^9, 
   3.879555556620393*^9}, 3.8805082357665358`*^9, {3.880509805912488*^9, 
   3.8805098065251226`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"8c79dd84-c8c5-4069-9740-ac59a74f65ed"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TypeProduct", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
                  TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ManagedExpression\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
                  TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ManagedExpression\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"], 
       DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("DataStructure[ManagedExpression, $Failed]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8783994334371367`*^9, 3.878652399709537*^9, {3.878747371145557*^9, 
   3.878747373272717*^9}, {3.878747411424608*^9, 3.878747419684375*^9}, 
   3.878751668330263*^9, 3.878751748039283*^9, 3.8787540023039103`*^9, 
   3.878777248929564*^9, 3.8787791668724813`*^9, 3.878779436559739*^9, 
   3.87955555684929*^9, 3.879555965126411*^9, 3.87955644672745*^9, 
   3.87956196626367*^9, 3.879602702553514*^9, 3.879608409873424*^9, 
   3.8805082367250357`*^9, 3.880508668469553*^9, {3.8805098086707773`*^9, 
   3.880509827795372*^9}, 3.883245706796968*^9, {3.883844108280163*^9, 
   3.883844122990608*^9}},
 CellLabel->"Out[11]=",ExpressionUUID->"8206ce09-2079-41c8-abf7-3d3aad58835d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"populateArray", "[", 
  RowBox[{"array", ",", "100"}], "]"}]], "Input",
 CellChangeTimes->{{3.8783994369497423`*^9, 3.878399441141177*^9}, {
  3.883245710140357*^9, 3.88324571237183*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"bfd8ee02-e1a4-4fbb-b88f-76e460a9c2b6"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.878165373104856*^9, 3.8781656465694103`*^9, 3.878168123294882*^9, 
   3.8782231776541357`*^9, 3.878230173447999*^9, 3.878349547635021*^9, {
   3.87839944239183*^9, 3.8783994440621233`*^9}, 3.878652400407364*^9, 
   3.878747374409772*^9, 3.878747420665948*^9, 3.8787516710263567`*^9, 
   3.878751750212598*^9, 3.8787540065291557`*^9, 3.878777250254043*^9, 
   3.878779167899413*^9, 3.87877943723949*^9, 3.879555558419228*^9, {
   3.879555966930622*^9, 3.879555974845799*^9}, 3.879556448142111*^9, 
   3.879561966923608*^9, 3.879602703320919*^9, 3.879608410597583*^9, 
   3.8805082421242647`*^9, 3.880508669287651*^9, 3.880509828361354*^9, 
   3.883245712760901*^9, {3.883844109195353*^9, 3.883844123940366*^9}},
 CellLabel->"Out[12]=",ExpressionUUID->"658a37b4-582a-4eff-9bf7-43fc36b9899f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "@", 
  RowBox[{"BufferToNumericArray", "[", 
   RowBox[{"array", ",", "\"\<CLong\>\"", ",", "100"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.878399446446816*^9, 3.8783994662380943`*^9}, {
   3.878779171698395*^9, 3.878779172481444*^9}, {3.87955597729585*^9, 
   3.879555980727894*^9}, 3.880508246509198*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"dd0a1092-3e9e-4f21-b95a-5f5ad51d17c1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "4", ",", "9", ",", "16", ",", "25", ",", "36", ",", 
   "49", ",", "64", ",", "81", ",", "100", ",", "121", ",", "144", ",", "169",
    ",", "196", ",", "225", ",", "256", ",", "289", ",", "324", ",", "361", 
   ",", "400", ",", "441", ",", "484", ",", "529", ",", "576", ",", "625", 
   ",", "676", ",", "729", ",", "784", ",", "841", ",", "900", ",", "961", 
   ",", "1024", ",", "1089", ",", "1156", ",", "1225", ",", "1296", ",", 
   "1369", ",", "1444", ",", "1521", ",", "1600", ",", "1681", ",", "1764", 
   ",", "1849", ",", "1936", ",", "2025", ",", "2116", ",", "2209", ",", 
   "2304", ",", "2401", ",", "2500", ",", "2601", ",", "2704", ",", "2809", 
   ",", "2916", ",", "3025", ",", "3136", ",", "3249", ",", "3364", ",", 
   "3481", ",", "3600", ",", "3721", ",", "3844", ",", "3969", ",", "4096", 
   ",", "4225", ",", "4356", ",", "4489", ",", "4624", ",", "4761", ",", 
   "4900", ",", "5041", ",", "5184", ",", "5329", ",", "5476", ",", "5625", 
   ",", "5776", ",", "5929", ",", "6084", ",", "6241", ",", "6400", ",", 
   "6561", ",", "6724", ",", "6889", ",", "7056", ",", "7225", ",", "7396", 
   ",", "7569", ",", "7744", ",", "7921", ",", "8100", ",", "8281", ",", 
   "8464", ",", "8649", ",", "8836", ",", "9025", ",", "9216", ",", "9409", 
   ",", "9604", ",", "9801"}], "}"}]], "Output",
 CellChangeTimes->{{3.878399451274138*^9, 3.878399467823148*^9}, 
   3.878652401224923*^9, 3.878747375513054*^9, 3.878751671898891*^9, 
   3.878751750975716*^9, 3.8787772511180353`*^9, 3.878779174310328*^9, 
   3.878779437976334*^9, 3.8795559787003393`*^9, 3.87955644878776*^9, 
   3.87956196750008*^9, 3.879602703819291*^9, 3.879608411214704*^9, 
   3.880508246825837*^9, 3.8805086701152563`*^9, 3.880509830434992*^9, 
   3.883245714983181*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"3347223b-31df-41d5-ab37-e038eae26a85"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["sumArray", "Subsubsection",
 CellChangeTimes->{{3.878399477758609*^9, 
  3.878399479446335*^9}},ExpressionUUID->"48945c05-7d57-42c9-bfe0-\
e78913aa8a33"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sumArray", "=", 
  RowBox[{"ForeignFunction", "[", 
   RowBox[{"\"\<sumArray\>\"", ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<OpaqueRawPointer\>\"", ",", "\"\<CLong\>\""}], "}"}], 
     "->", "\"\<CLong\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.878160323454307*^9, 3.878160326494378*^9}, {
  3.878230171119422*^9, 3.87823017186165*^9}, {3.87839938500382*^9, 
  3.8783994038919897`*^9}, {3.8783994870796337`*^9, 3.878399504448016*^9}, {
  3.880508676913781*^9, 3.880508682672234*^9}, {3.883245724788866*^9, 
  3.883245726436445*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"e69b8133-3338-4112-8dd8-d932d8111b5c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ForeignFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox["\"name: \"", "SummaryItem"], 
               TagBox["\"sumArray\"", "SummaryItem"]}, {
               TagBox["\"type: \"", "SummaryItem"], 
               TagBox[
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"\"OpaqueRawPointer\"", ",", "\"CLong\""}], "}"}],
                   "\[Rule]", "\"CLong\""}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               TagBox["\"name: \"", "SummaryItem"], 
               TagBox["\"sumArray\"", "SummaryItem"]}, {
               TagBox["\"type: \"", "SummaryItem"], 
               TagBox[
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"\"OpaqueRawPointer\"", ",", "\"CLong\""}], "}"}],
                   "\[Rule]", "\"CLong\""}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ChristopherWolfram`ForeignFunctionInterface`ForeignFunction[
  "sumArray", {"OpaqueRawPointer", "CLong"} -> "CLong", 
   DataStructure["ForeignFunctionObject", $Failed]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8781603277206373`*^9, 3.8781653695197*^9, 3.8781656458589478`*^9, 
   3.878168122523356*^9, 3.878223176780526*^9, 3.8782301729002953`*^9, 
   3.8783495469097137`*^9, 3.8783994066098747`*^9, 3.878399504708488*^9, 
   3.878652403835967*^9, {3.878747403052347*^9, 3.878747409778862*^9}, 
   3.878751752500966*^9, 3.87875401230505*^9, 3.878777253764864*^9, 
   3.878779175897537*^9, 3.8787794396464653`*^9, 3.879556450705558*^9, {
   3.879561852247593*^9, 3.879561860002016*^9}, 3.8796027064352293`*^9, 
   3.879608413122732*^9, 3.880508682927547*^9, 3.8805098353057957`*^9, 
   3.883245726818*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"7623a6cd-0116-4fe0-9497-5db42c3006e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sumArray", "[", 
  RowBox[{"array", ",", "100"}], "]"}]], "Input",
 CellChangeTimes->{{3.8783994369497423`*^9, 3.878399441141177*^9}, {
  3.878399512624567*^9, 3.878399513568123*^9}, {3.878652411097744*^9, 
  3.878652415513442*^9}, {3.8832457306531067`*^9, 3.883245732452344*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"18106ab7-3aeb-4769-8042-06199124b17d"],

Cell[BoxData["328350"], "Output",
 CellChangeTimes->{
  3.878165373104856*^9, 3.8781656465694103`*^9, 3.878168123294882*^9, 
   3.8782231776541357`*^9, 3.878230173447999*^9, 3.878349547635021*^9, {
   3.87839944239183*^9, 3.8783994440621233`*^9}, {3.8783995139274883`*^9, 
   3.878399515116658*^9}, {3.878652404486779*^9, 3.878652415903687*^9}, 
   3.8787474220164337`*^9, 3.8787517530838423`*^9, 3.878777254396837*^9, 
   3.8787791765423317`*^9, 3.878779440214058*^9, 3.879556451382465*^9, 
   3.879561972554782*^9, 3.879602707057417*^9, 3.879608413654044*^9, 
   3.880508684444847*^9, 3.883245732684762*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"44dbebd1-1694-41f0-99f5-bff9f8c10676"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "@", 
  RowBox[{"BufferToNumericArray", "[", 
   RowBox[{"array", ",", "\"\<CLong\>\"", ",", "100"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.87839951789704*^9, 3.8783995195684977`*^9}, {
   3.878652417514*^9, 3.878652421329494*^9}, 3.878779177972081*^9, 
   3.8805086871148453`*^9},
 CellLabel->"In[16]:=",ExpressionUUID->"fc9dccde-5bc0-48f8-8f38-367601a8f310"],

Cell[BoxData["328350"], "Output",
 CellChangeTimes->{
  3.878399519795425*^9, {3.878652405347591*^9, 3.8786524216553783`*^9}, 
   3.878747423030532*^9, 3.878751753570374*^9, 3.878777255033869*^9, 
   3.87877917863148*^9, 3.878779440851756*^9, 3.879556452101102*^9, 
   3.8795619716834183`*^9, 3.879602708922682*^9, 3.879608414359645*^9, 
   3.8805086873818283`*^9, 3.8832457351999073`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"6c048a5c-cc63-4bde-ae1d-faecc2d93320"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sumArray", "[", 
  RowBox[{
   RowBox[{"CreateManagedExpression", "[", 
    RowBox[{
     RowBox[{"NumericArrayToBuffer", "[", 
      RowBox[{
       RowBox[{"NumericArray", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", "99"}], "]"}], "^", "2"}], ",", 
         "\"\<Integer64\>\""}], "]"}], ",", "\"\<CLong\>\""}], "]"}], ",", 
     "DeleteBuffer"}], "]"}], ",", "100"}], "]"}]], "Input",
 CellChangeTimes->{{3.879602790637685*^9, 3.879602829114641*^9}, 
   3.88050869103318*^9, 3.880509834114225*^9, {3.883245737470148*^9, 
   3.8832457415809813`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"0b30341c-9378-4e58-bf95-fcef35d86cad"],

Cell[BoxData["328350"], "Output",
 CellChangeTimes->{{3.879602803909124*^9, 3.8796028293391113`*^9}, 
   3.8796084149384117`*^9, 3.8805086917975073`*^9, 3.8805098358899*^9, 
   3.8832457420395308`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"cbb30fe7-b850-4aca-a739-e7d8cc0b8cd9"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["OpenSSL", "Subsection",
 CellChangeTimes->{{3.8781443186851063`*^9, 
  3.8781443195409327`*^9}},ExpressionUUID->"9a43e2f0-17d3-4818-a8d3-\
3b65decda34d"],

Cell[CellGroupData[{

Cell["RAND_bytes", "Subsubsection",
 CellChangeTimes->{{3.8781656868464613`*^9, 
  3.87816568920208*^9}},ExpressionUUID->"423a67c7-f342-4b9f-b689-\
9e56ea90dd99"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"randBytes", "=", 
  RowBox[{"ForeignFunction", "[", 
   RowBox[{"\"\<RAND_bytes\>\"", ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<OpaqueRawPointer\>\"", ",", "\"\<CInt\>\""}], "}"}], "->", 
     "\"\<CInt\>\""}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.875232518115183*^9, 3.875232532890107*^9}, {
   3.875232592645788*^9, 3.8752325994555902`*^9}, {3.8752326407683983`*^9, 
   3.875232654736418*^9}, {3.8764155489287443`*^9, 3.87641555483746*^9}, {
   3.878142497675231*^9, 3.878142503491035*^9}, {3.87814444125002*^9, 
   3.878144465818858*^9}, 3.878144536166732*^9, {3.8781449711336412`*^9, 
   3.878144973165409*^9}, {3.878160343576007*^9, 3.8781603437752943`*^9}, {
   3.8782062189677277`*^9, 3.878206221116675*^9}, {3.8782089743821373`*^9, 
   3.878208976134137*^9}, {3.878230176551277*^9, 3.878230177981924*^9}, {
   3.8805086955416727`*^9, 3.8805087012201366`*^9}, {3.883245745133415*^9, 
   3.883245746605132*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"43205e43-9dd6-4f00-a465-982630cfc8ca"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ForeignFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox["\"name: \"", "SummaryItem"], 
               TagBox["\"RAND_bytes\"", "SummaryItem"]}, {
               TagBox["\"type: \"", "SummaryItem"], 
               TagBox[
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"\"OpaqueRawPointer\"", ",", "\"CInt\""}], "}"}], 
                  "\[Rule]", "\"CInt\""}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               TagBox["\"name: \"", "SummaryItem"], 
               TagBox["\"RAND_bytes\"", "SummaryItem"]}, {
               TagBox["\"type: \"", "SummaryItem"], 
               TagBox[
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{"\"OpaqueRawPointer\"", ",", "\"CInt\""}], "}"}], 
                  "\[Rule]", "\"CInt\""}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ChristopherWolfram`ForeignFunctionInterface`ForeignFunction[
  "RAND_bytes", {"OpaqueRawPointer", "CInt"} -> "CInt", 
   DataStructure["ForeignFunctionObject", $Failed]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8752325339272614`*^9, 3.875232621029664*^9, 3.8752326624622717`*^9, {
   3.87523278091392*^9, 3.8752327998002853`*^9}, {3.876415555274091*^9, 
   3.8764155570951633`*^9}, 3.876416404358057*^9, 3.876420960856423*^9, 
   3.87642123890386*^9, 3.8781425045248623`*^9, 3.8781426737541933`*^9, 
   3.8781442115981083`*^9, 3.878144467436576*^9, {3.8781445325115423`*^9, 
   3.8781445368147917`*^9}, 3.8781603447849693`*^9, 3.878165376892696*^9, 
   3.878165649103125*^9, 3.878168127524128*^9, 3.878168616312325*^9, {
   3.8782062158999662`*^9, 3.878206221493176*^9}, {3.878208971555983*^9, 
   3.878208976592103*^9}, 3.878230178683662*^9, 3.8783495526265717`*^9, 
   3.878389842953957*^9, 3.8786524282340393`*^9, 3.878665550328402*^9, 
   3.878666344056566*^9, 3.878747426044608*^9, 3.878751754990754*^9, 
   3.878754102325239*^9, 3.878777256471224*^9, 3.878779180129004*^9, 
   3.878779442244329*^9, 3.879556453608512*^9, 3.8796084155503597`*^9, 
   3.8803176988598957`*^9, 3.880508701844338*^9, 3.880509837990492*^9, 
   3.881155144453081*^9, 3.8832457468521423`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"4cece337-a0cb-4ac2-bf65-5569fbfe2e71"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"out", "=", 
  RowBox[{"CreateBuffer", "[", 
   RowBox[{"\"\<UnsignedInteger8\>\"", ",", "32"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.878144386792873*^9, 3.878144394767818*^9}, {
   3.878165385447939*^9, 3.878165391967554*^9}, 3.8782301795832157`*^9, {
   3.878777257236176*^9, 3.87877725881078*^9}, 3.880508705733295*^9},
 CellLabel->"In[19]:=",ExpressionUUID->"e846cb3b-43fc-4236-9938-3fbf96aa921d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["OpaqueRawPointer",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["140664333231712", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["140664333231712", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ChristopherWolfram`ForeignFunctionInterface`OpaqueRawPointer[
  140664333231712],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.878144395150853*^9, 3.8781444702457447`*^9, 3.878144538038124*^9, 
   3.8781603463732653`*^9, {3.878165377754384*^9, 3.878165392566502*^9}, 
   3.878165650254901*^9, 3.878168128457717*^9, 3.878168617004952*^9, {
   3.878206240664445*^9, 3.878206255271723*^9}, 3.8782089813139772`*^9, 
   3.878230180202055*^9, 3.8783495537420464`*^9, 3.878389843660483*^9, 
   3.878652428967119*^9, 3.878665551787108*^9, 3.878666344814404*^9, 
   3.87874742735445*^9, 3.8787517567575912`*^9, 3.8787541029954433`*^9, 
   3.878777260266264*^9, 3.8787791811173*^9, 3.87877944312866*^9, 
   3.879556455138019*^9, 3.8796084171450167`*^9, 3.880508706167439*^9, 
   3.8805098389484043`*^9, 3.881155146580727*^9, 3.883245750097906*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"8332a72a-8a7c-4c04-95a8-632d038576ca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"randBytes", "[", 
  RowBox[{"out", ",", "32"}], "]"}]], "Input",
 CellChangeTimes->{{3.878144471611837*^9, 3.878144477546934*^9}, {
  3.878165670346262*^9, 3.878165675177771*^9}, {3.883245752374092*^9, 
  3.883245754189398*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"26796f94-76ec-4241-80a2-d567217716fe"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.878144539059518*^9, 3.878144541277588*^9}, {
   3.8781446719538727`*^9, 3.878144673314393*^9}, {3.8781449836948566`*^9, 
   3.878144985600079*^9}, {3.878160347751505*^9, 3.878160359935059*^9}, 
   3.87816539550576*^9, {3.8781656521233673`*^9, 3.878165675556075*^9}, 
   3.8781681313593082`*^9, 3.878168617801005*^9, 3.878206248760539*^9, 
   3.878208988922885*^9, 3.878230181260325*^9, 3.878349555146803*^9, 
   3.8783898443934803`*^9, {3.878652429736681*^9, 3.878652431442665*^9}, 
   3.8786655527446957`*^9, 3.878666345747546*^9, 3.878747428453073*^9, 
   3.878751757990324*^9, 3.8787541057806787`*^9, 3.878777261008086*^9, 
   3.878779182266794*^9, 3.8787794437356043`*^9, 3.879556457287322*^9, 
   3.879608417671777*^9, {3.880508708003186*^9, 3.880508720523861*^9}, 
   3.8805098399221907`*^9, 3.881155147207999*^9, 3.883245754575953*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"aacce7aa-2874-4edc-b759-cebcd7428992"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "@", 
  RowBox[{"BufferToNumericArray", "[", 
   RowBox[{"out", ",", "\"\<UnsignedInteger8\>\"", ",", "32"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.878165405920207*^9, 3.878165414456311*^9}, {
   3.878165656433776*^9, 3.87816565733705*^9}, 3.87823018272726*^9, 
   3.878779183163815*^9, 3.8805087110026503`*^9},
 CellLabel->"In[21]:=",ExpressionUUID->"9eb82e58-b3d7-449f-a395-ba263520014c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "134", ",", "182", ",", "148", ",", "39", ",", "222", ",", "227", ",", 
   "116", ",", "75", ",", "232", ",", "72", ",", "20", ",", "152", ",", "22", 
   ",", "2", ",", "144", ",", "42", ",", "147", ",", "182", ",", "195", ",", 
   "180", ",", "229", ",", "96", ",", "43", ",", "82", ",", "136", ",", "37", 
   ",", "108", ",", "182", ",", "224", ",", "186", ",", "118", ",", "55"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8781654147626247`*^9, {3.878165653902977*^9, 3.878165676643834*^9}, 
   3.878168132281722*^9, 3.8781686200510883`*^9, 3.8782062517484417`*^9, 
   3.878208991302259*^9, 3.878230183375381*^9, 3.878349556371868*^9, 
   3.878389845170404*^9, {3.878652430538455*^9, 3.878652432002408*^9}, 
   3.878665553397295*^9, 3.878666347198564*^9, 3.8787474292681007`*^9, 
   3.878751758828435*^9, 3.878754107821444*^9, 3.8787772623155127`*^9, 
   3.878779183884036*^9, 3.878779444255052*^9, 3.8795564603532887`*^9, 
   3.8796084183766613`*^9, {3.880508711333972*^9, 3.880508721206313*^9}, 
   3.880509840699884*^9, 3.8811551481191053`*^9, 3.88324575599406*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"94d9aa8b-7082-4970-8b12-958c53af6f0f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"randBytes", "[", 
   RowBox[{"out", ",", "32"}], "]"}], "//", "RepeatedTiming"}]], "Input",
 CellChangeTimes->{{3.878206257481496*^9, 3.8782062589047956`*^9}, {
  3.8832457577901297`*^9, 3.883245760613429*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"17036279-7f78-4d71-9fb7-112f8133b4d9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.1793136596679686`*^-6", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.878206260854723*^9, 3.878208995653866*^9, 
  3.878230187016037*^9, 3.8783898479567757`*^9, 3.878652434856292*^9, 
  3.878665556519664*^9, 3.878666350173376*^9, 3.878747431849455*^9, 
  3.878777265438018*^9, 3.8787794466832952`*^9, 3.8795564646657457`*^9, 
  3.879608420856503*^9, 3.8805087148447123`*^9, 3.880509843355465*^9, 
  3.88115515074111*^9, 3.883245762033875*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"40296dd4-d851-48ea-8486-c2e2049fba14"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["OpenSSL_version _num", "Subsubsection",
 CellChangeTimes->{{3.878234371720517*^9, 3.87823437564605*^9}, {
  3.8782348756689177`*^9, 
  3.878234890473732*^9}},ExpressionUUID->"cb624e93-784d-4bbd-ae81-\
c283a93cf6b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ForeignFunction", "[", 
   RowBox[{"\"\<OpenSSL_version_num\>\"", ",", 
    RowBox[{
     RowBox[{"{", "}"}], "->", "\"\<CUnsignedLong\>\""}]}], "]"}], "[", 
  "]"}]], "Input",
 CellChangeTimes->{{3.878234438649313*^9, 3.878234440025166*^9}, {
  3.883245773295269*^9, 3.883245774438545*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"d6dc65c8-2f03-49bb-a32f-2ff0d985e393"],

Cell[BoxData["269488447"], "Output",
 CellChangeTimes->{{3.878234440363168*^9, 3.878234442454666*^9}, 
   3.8782345327222643`*^9, 3.87834956243751*^9, 3.878389851512109*^9, 
   3.8786524374242773`*^9, 3.878665557263495*^9, 3.878666354621175*^9, 
   3.8787474368128767`*^9, 3.878751761533736*^9, 3.878754116100045*^9, 
   3.878777268448493*^9, 3.878779188132525*^9, 3.8787794470480413`*^9, 
   3.879556475344095*^9, 3.8796084216154737`*^9, 3.880508729268804*^9, 
   3.8811551515334473`*^9, 3.8832457747299433`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"1aec7785-f26d-42a9-ad00-d6cae47eb523"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IntegerString", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ForeignFunction", "[", 
     RowBox[{"\"\<OpenSSL_version_num\>\"", ",", 
      RowBox[{
       RowBox[{"{", "}"}], "->", "\"\<CUnsignedLong\>\""}]}], "]"}], "[", 
    "]"}], ",", "16"}], "]"}]], "Input",
 CellChangeTimes->{{3.878234469922635*^9, 3.878234495802823*^9}, 
   3.883245778279323*^9},
 CellLabel->"In[24]:=",ExpressionUUID->"75fcd64e-bef3-4263-b186-c02e5e609fd4"],

Cell[BoxData["\<\"1010113f\"\>"], "Output",
 CellChangeTimes->{{3.878234473532201*^9, 3.8782344960351152`*^9}, 
   3.878234533088195*^9, 3.8783495634614363`*^9, 3.8783898523276978`*^9, 
   3.8786524381583242`*^9, 3.878665557902136*^9, 3.8786663551721478`*^9, 
   3.878747437554343*^9, 3.878751762107847*^9, 3.878754116958926*^9, 
   3.87877726914212*^9, 3.878779188767665*^9, 3.878779447503542*^9, 
   3.879556476173142*^9, 3.879608422133251*^9, 3.880508730223393*^9, 
   3.8811551523174334`*^9, 3.883245778595694*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"c6b4a1fd-3560-499a-9aa1-f4f87065fed2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["SHA256", "Subsubsection",
 CellChangeTimes->{{3.878165691911253*^9, 
  3.878165693110125*^9}},ExpressionUUID->"0925e49e-806d-475e-8540-\
9bb6fe79bd31"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sha256", "=", 
  RowBox[{"ForeignFunction", "[", 
   RowBox[{"\"\<SHA256\>\"", ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<RawPointer\>\"", "::[", "\"\<CCHar\>\"", "]"}], ",", 
       "\[IndentingNewLine]", "\"\<CUnsignedLong\>\"", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<RawPointer\>\"", "::[", "\"\<CCHar\>\"", "]"}]}], 
      "\[IndentingNewLine]", "}"}], "->", 
     RowBox[{"\"\<RawPointer\>\"", "::[", "\"\<CCHar\>\"", "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.875232518115183*^9, 3.875232532890107*^9}, {
   3.875232592645788*^9, 3.8752325994555902`*^9}, {3.8752326407683983`*^9, 
   3.875232654736418*^9}, {3.8764155489287443`*^9, 3.87641555483746*^9}, {
   3.878142497675231*^9, 3.878142503491035*^9}, {3.87814444125002*^9, 
   3.878144465818858*^9}, 3.878144536166732*^9, {3.8781449711336412`*^9, 
   3.878144973165409*^9}, {3.878160343576007*^9, 3.8781603437752943`*^9}, {
   3.878165718084022*^9, 3.878165776565988*^9}, {3.878165812223196*^9, 
   3.8781658259842653`*^9}, {3.8781695658504477`*^9, 3.878169575569667*^9}, {
   3.878230186671628*^9, 3.878230189014275*^9}, {3.878230683755766*^9, 
   3.878230688040501*^9}, {3.878234625329886*^9, 3.878234626991763*^9}, {
   3.878234792866789*^9, 3.8782348105190487`*^9}, {3.880508733135413*^9, 
   3.880508739833403*^9}, 3.88324592930882*^9, {3.8838442187175913`*^9, 
   3.8838442401821537`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"6246fb13-e4f0-43b7-82a4-488f4a72261f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ForeignFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox["\"name: \"", "SummaryItem"], 
               TagBox["\"SHA256\"", "SummaryItem"]}, {
               TagBox["\"type: \"", "SummaryItem"], 
               TagBox[
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"TypeSpecifier", "[", "\"RawPointer\"", "]"}], 
                    "[", "\"CCHar\"", "]"}], ",", "\"CUnsignedLong\"", ",", 
                    RowBox[{
                    RowBox[{"TypeSpecifier", "[", "\"RawPointer\"", "]"}], 
                    "[", "\"CCHar\"", "]"}]}], "}"}], "\[Rule]", 
                  RowBox[{
                    RowBox[{"TypeSpecifier", "[", "\"RawPointer\"", "]"}], 
                    "[", "\"CCHar\"", "]"}]}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               TagBox["\"name: \"", "SummaryItem"], 
               TagBox["\"SHA256\"", "SummaryItem"]}, {
               TagBox["\"type: \"", "SummaryItem"], 
               TagBox[
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"TypeSpecifier", "[", "\"RawPointer\"", "]"}], 
                    "[", "\"CCHar\"", "]"}], ",", "\"CUnsignedLong\"", ",", 
                    RowBox[{
                    RowBox[{"TypeSpecifier", "[", "\"RawPointer\"", "]"}], 
                    "[", "\"CCHar\"", "]"}]}], "}"}], "\[Rule]", 
                  RowBox[{
                    RowBox[{"TypeSpecifier", "[", "\"RawPointer\"", "]"}], 
                    "[", "\"CCHar\"", "]"}]}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ChristopherWolfram`ForeignFunctionInterface`ForeignFunction["SHA256", {
     TypeSpecifier["RawPointer"]["CCHar"], "CUnsignedLong", 
     TypeSpecifier["RawPointer"]["CCHar"]} -> 
   TypeSpecifier["RawPointer"]["CCHar"], 
   DataStructure["ForeignFunctionObject", $Failed]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.878165756383418*^9, {3.8781658167434387`*^9, 3.878165826302988*^9}, 
   3.8781681343285313`*^9, 3.878168416307863*^9, 3.8781686227951183`*^9, 
   3.87816878691267*^9, {3.878169567527445*^9, 3.8781695759229*^9}, 
   3.878169975285513*^9, 3.878230189859432*^9, 3.878230691090818*^9, 
   3.87823095587615*^9, 3.8782312112250423`*^9, 3.878234402967057*^9, 
   3.8782346272672367`*^9, {3.878234794124329*^9, 3.8782348108475*^9}, 
   3.8782348947750483`*^9, 3.878349564575157*^9, {3.878389853507594*^9, 
   3.878389858459545*^9}, 3.878652446252769*^9, 3.8786655591785192`*^9, 
   3.878666358349695*^9, 3.878668875179001*^9, 3.878747438694417*^9, 
   3.878751378669032*^9, 3.878751763695307*^9, 3.878754117398938*^9, 
   3.878777270342073*^9, 3.878779190377603*^9, 3.878779448054777*^9, 
   3.879556477488862*^9, 3.879608422695745*^9, 3.880317616657167*^9, 
   3.880508740170122*^9, 3.880509859841796*^9, 3.883245930132401*^9, 
   3.883844241620418*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"4e554119-a64b-45b2-bac8-87f64fe1fe8b"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"out", "=", 
   RowBox[{"CreateBuffer", "[", 
    RowBox[{"\"\<UnsignedInteger8\>\"", ",", "32"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"in", "=", 
   RowBox[{"StringToBuffer", "[", "\"\<Hello, World!\>\"", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.878144386792873*^9, 3.878144394767818*^9}, {
   3.878165385447939*^9, 3.878165391967554*^9}, {3.87816583468785*^9, 
   3.878165841119958*^9}, {3.8781681389243927`*^9, 3.8781681630057096`*^9}, {
   3.878169979032321*^9, 3.878169984176236*^9}, 3.878230191367537*^9, {
   3.878234900547708*^9, 3.878234900641972*^9}, {3.8786655744114933`*^9, 
   3.8786655768181543`*^9}, 3.87866635939148*^9, 3.878666587194331*^9, 
   3.878777271420204*^9, {3.87877922889209*^9, 3.8787792307638493`*^9}, 
   3.880508743172283*^9},
 CellLabel->"In[15]:=",ExpressionUUID->"046e0247-2815-4489-859e-de1d4955b294"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sha256", "[", 
  RowBox[{"in", ",", "13", ",", "out"}], "]"}]], "Input",
 CellChangeTimes->{{3.878168164878613*^9, 3.878168178014064*^9}, {
  3.878168633680366*^9, 3.878168658783996*^9}, {3.878169188411964*^9, 
  3.878169208859624*^9}, {3.878230825687129*^9, 3.878230825805736*^9}, {
  3.878230919490692*^9, 3.87823092699288*^9}, {3.8782348187764473`*^9, 
  3.878234849111765*^9}, {3.878234903963531*^9, 3.878234905089941*^9}, {
  3.878666374849331*^9, 3.8786663795442553`*^9}, {3.883245935548676*^9, 
  3.883245937363866*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"b9785da8-6a31-4ce1-bd32-23804ebd7ed2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["RawPointer",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox["\"type: \"", "SummaryItem"], 
               TagBox["\"CCHar\"", "SummaryItem"]}, {
               TagBox["\"address: \"", "SummaryItem"], 
               TagBox["140239139706400", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               TagBox["\"type: \"", "SummaryItem"], 
               TagBox["\"CCHar\"", "SummaryItem"]}, {
               TagBox["\"address: \"", "SummaryItem"], 
               TagBox["140239139706400", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ChristopherWolfram`ForeignFunctionInterface`RawPointer[
  140239139706400, "CCHar"],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.878168179036401*^9, 3.878168185544557*^9}, 
   3.8781684180787992`*^9, {3.87816862466962*^9, 3.878168659483934*^9}, 
   3.878168789278574*^9, {3.878168836953458*^9, 3.8781688430025*^9}, {
   3.878169189963463*^9, 3.878169213770677*^9}, {3.87816930753585*^9, 
   3.878169309589637*^9}, {3.87816956977985*^9, 3.8781695778452578`*^9}, 
   3.878169988867937*^9, 3.878230194899927*^9, {3.878230693805994*^9, 
   3.878230711173931*^9}, {3.878230826732853*^9, 3.878230830115316*^9}, {
   3.878230921206236*^9, 3.878230927882394*^9}, {3.878231001162794*^9, 
   3.878231004918535*^9}, 3.8782312147016068`*^9, {3.87823463011684*^9, 
   3.878234633301453*^9}, {3.878234803900807*^9, 3.8782348507284718`*^9}, {
   3.878234905338418*^9, 3.8782349640820513`*^9}, {3.878349320958473*^9, 
   3.878349324934013*^9}, {3.878349569005782*^9, 3.8783495749950647`*^9}, {
   3.8783898621300983`*^9, 3.87838986838694*^9}, {3.8783903498922*^9, 
   3.87839035293943*^9}, {3.878652449671699*^9, 3.878652458437237*^9}, {
   3.878665568285405*^9, 3.878665580555469*^9}, {3.878666363824202*^9, 
   3.8786663798433523`*^9}, 3.8786665934803133`*^9, 3.8786688763397903`*^9, 
   3.878747442355928*^9, 3.878751380543969*^9, 3.878751767215711*^9, 
   3.878754119396154*^9, 3.878777273233128*^9, 3.878779450128001*^9, 
   3.8795564793425083`*^9, 3.879608424821624*^9, 3.880508744958023*^9, 
   3.883245937640626*^9, {3.883844244872175*^9, 3.883844246841433*^9}},
 CellLabel->"Out[18]=",ExpressionUUID->"9609016d-80ea-4c2e-b5e8-abdb4d6407fc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "@", 
  RowBox[{"BufferToNumericArray", "[", 
   RowBox[{"out", ",", "\"\<UnsignedInteger8\>\"", ",", "32"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.878168794741304*^9, 3.878168808957027*^9}, 
   3.87823019589601*^9, {3.878230903801176*^9, 3.878230907200535*^9}, {
   3.878234908683777*^9, 3.878234908754341*^9}, {3.878665572835031*^9, 
   3.8786655728980913`*^9}, {3.8787794528606358`*^9, 3.878779453547798*^9}, 
   3.880508747879222*^9},
 CellLabel->"In[29]:=",ExpressionUUID->"0537dbbc-b392-46b9-b650-74925962cf2c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "223", ",", "253", ",", "96", ",", "33", ",", "187", ",", "43", ",", "213", 
   ",", "176", ",", "175", ",", "103", ",", "98", ",", "144", ",", "128", ",",
    "158", ",", "195", ",", "165", ",", "49", ",", "145", ",", "221", ",", 
   "129", ",", "199", ",", "247", ",", "10", ",", "75", ",", "40", ",", "104",
    ",", "138", ",", "54", ",", "33", ",", "130", ",", "152", ",", "111"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.878168797755927*^9, 3.878168843561563*^9}, {
   3.8781691907976513`*^9, 3.8781692144545527`*^9}, {3.87816957086744*^9, 
   3.878169578476988*^9}, 3.8781699895564137`*^9, 3.8782301990638227`*^9, {
   3.878230694923922*^9, 3.878230711762615*^9}, {3.878230827689077*^9, 
   3.87823083133678*^9}, {3.878230905428875*^9, 3.878230929053164*^9}, {
   3.878231002250153*^9, 3.878231005575591*^9}, 3.878231215440769*^9, {
   3.878234631460348*^9, 3.8782346339091673`*^9}, {3.878234804746975*^9, 
   3.878234834419718*^9}, {3.878234907226001*^9, 3.8782349652197227`*^9}, {
   3.8783493138927603`*^9, 3.8783493258289967`*^9}, {3.878349572070703*^9, 
   3.8783495757435637`*^9}, {3.878389866332176*^9, 3.878389869067482*^9}, 
   3.878390354102936*^9, {3.878652455164691*^9, 3.878652459097538*^9}, {
   3.8786655698120003`*^9, 3.878665581232568*^9}, {3.878666369990164*^9, 
   3.87866638194917*^9}, {3.878666590197843*^9, 3.87866659425252*^9}, 
   3.8786688774360237`*^9, 3.8787474438508873`*^9, 3.87875138134429*^9, 
   3.878751770430957*^9, 3.878754120283801*^9, 3.8787772752315893`*^9, 
   3.8787794538584414`*^9, 3.8795564814837837`*^9, 3.879608425349855*^9, 
   3.880508748116221*^9, 3.8832459395916147`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"31b4a1ab-0b1a-4eed-8ae8-706b63957ba4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "@", 
  RowBox[{"Hash", "[", 
   RowBox[{
   "\"\<Hello, World!\>\"", ",", "\"\<SHA256\>\"", ",", "\"\<ByteArray\>\""}],
    "]"}]}]], "Input",
 CellChangeTimes->{{3.878168810349538*^9, 3.8781688251735067`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"b4db8f67-28f1-4ccf-91ec-8f70ea09ac43"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "223", ",", "253", ",", "96", ",", "33", ",", "187", ",", "43", ",", "213", 
   ",", "176", ",", "175", ",", "103", ",", "98", ",", "144", ",", "128", ",",
    "158", ",", "195", ",", "165", ",", "49", ",", "145", ",", "221", ",", 
   "129", ",", "199", ",", "247", ",", "10", ",", "75", ",", "40", ",", "104",
    ",", "138", ",", "54", ",", "33", ",", "130", ",", "152", ",", "111"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.87816882229574*^9, 3.878168825433517*^9}, 
   3.878169990547036*^9, 3.878230200596287*^9, 3.878652456874105*^9, 
   3.878665583084495*^9, 3.8786665960702143`*^9, 3.878747449086615*^9, 
   3.878751382170018*^9, 3.878754121540691*^9, 3.8787772763546047`*^9, 
   3.878779455442707*^9, 3.879556482223754*^9, 3.879608426134309*^9, 
   3.883245940678157*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"c35dc847-9dda-4503-baff-6b888951bf58"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cf", "=", 
  RowBox[{"FunctionCompile", "[", 
   RowBox[{
    RowBox[{"LibraryFunctionDeclaration", "[", 
     RowBox[{"\"\<SHA256\>\"", ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<OpaqueRawPointer\>\"", ",", "\"\<UnsignedInteger64\>\"", ",", 
         "\"\<OpaqueRawPointer\>\""}], "}"}], "->", 
       "\"\<OpaqueRawPointer\>\""}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"plaintext", ",", "ciphertext"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"plaintext", "=", 
          RowBox[{"CreateTypeInstance", "[", 
           RowBox[{
            RowBox[{
            "\"\<CArray\>\"", "::[", "\"\<UnsignedInteger8\>\"", "]"}], ",", 
            "\"\<Hello, World!\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ciphertext", "=", 
          RowBox[{"CreateTypeInstance", "[", 
           RowBox[{
            RowBox[{"\"\<CArray\>\"", "::[", "\"\<CChar\>\"", "]"}], ",", 
            "32"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"LibraryFunction", "[", "\"\<SHA256\>\"", "]"}], "[", 
          RowBox[{
           RowBox[{"Cast", "[", 
            RowBox[{
            "plaintext", ",", "\"\<OpaqueRawPointer\>\"", ",", 
             "\"\<BitCast\>\""}], "]"}], ",", 
           RowBox[{"Typed", "[", 
            RowBox[{"13", ",", "\"\<UnsignedInteger64\>\""}], "]"}], ",", 
           RowBox[{"Cast", "[", 
            RowBox[{
            "ciphertext", ",", "\"\<OpaqueRawPointer\>\"", ",", 
             "\"\<BitCast\>\""}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         
         RowBox[{"CreateTypeInstance", "[", 
          RowBox[{"\"\<NumericArray\>\"", ",", "ciphertext", ",", "32"}], 
          "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
     "]"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.878170001449929*^9, 3.878170022249607*^9}, {
  3.878170080875898*^9, 3.878170129718274*^9}, {3.878170605737823*^9, 
  3.878170618448107*^9}, {3.8782314283110437`*^9, 3.878231432028901*^9}, {
  3.8783482587128353`*^9, 3.878348260815544*^9}, {3.878348439375902*^9, 
  3.878348452662517*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"fde60ec2-805a-48f0-b6ea-f818d8ab8d7f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledCodeFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GraphicsBox[
             InsetBox[
              FormBox[
               StyleBox["\"Code\"", 
                GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
               TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], Axes -> 
             False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {27., {0., 10.}}], Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Signature: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", "}"}], "\[Rule]", 
                    RowBox[{"\"NumericArray\"", "::[", 
                    RowBox[{"\"UnsignedInteger8\"", ",", "1"}], "]"}]}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GraphicsBox[
             InsetBox[
              FormBox[
               StyleBox["\"Code\"", 
                GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
               TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], Axes -> 
             False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {27., {0., 10.}}], Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Signature: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", "}"}], "\[Rule]", 
                    RowBox[{"\"NumericArray\"", "::[", 
                    RowBox[{"\"UnsignedInteger8\"", ",", "1"}], "]"}]}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledCodeFunction[<|
   "Signature" -> TypeSpecifier[{} -> "NumericArray"["UnsignedInteger8", 
        LiteralType[1, "Integer64"]]], "Input" -> Compile`Program[
      LibraryFunctionDeclaration[
      "SHA256", {"OpaqueRawPointer", "UnsignedInteger64", "OpaqueRawPointer"} -> 
       "OpaqueRawPointer"], 
      Function[{}, 
       Module[{$CellContext`plaintext, $CellContext`ciphertext}, \
$CellContext`plaintext = CreateTypeInstance[
           TypeSpecifier["CArray"]["UnsignedInteger8"], 
           "Hello, World!"]; $CellContext`ciphertext = CreateTypeInstance[
           TypeSpecifier["CArray"]["CChar"], 32]; LibraryFunction["SHA256"][
          Cast[$CellContext`plaintext, "OpaqueRawPointer", "BitCast"], 
          Typed[13, "UnsignedInteger64"], 
          Cast[$CellContext`ciphertext, "OpaqueRawPointer", "BitCast"]]; 
        CreateTypeInstance["NumericArray", $CellContext`ciphertext, 32]]]], 
    "ErrorFunction" -> Automatic, "InitializationName" -> 
    "Initialization_92fc7a5c_6c45_49bb_a740_b93bca035e30", "ExpressionName" -> 
    "Main_ExprInvocation", "CName" -> "Main_CInvocation", "FunctionName" -> 
    "Main", "SystemID" -> "Linux-x86-64", "VersionData" -> {13.2, 0, 0}, 
    "CompiledIR" -> <|"Linux-x86-64" -> ByteArray[CompressedData["
1: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
SZeGJwwOJ34NDdDH53S4Z3S6Ezw9qhatur8n94hf3dcDfczt13fWYCi0qgYG
sMQbf/644LpReGMI7lnCy6TwMiG8axBU4YIRUgDRO0O8vw8JLhkE90j5N9dN
0m5X4uDwhOuyxCuyxF5ZIlzBa7JJFcSenGPaGUfY6la3ur/kGFx96OxqaKfe
u9IOo+cVXMYFowFrb5GCOz7BmIFJWbAKVocCQkeSntA28+MjHAo9IXe1bN16
SteOp5bnZijyNvtk76jwj0GxdClYUm2rcJgqCW11pd1qszgIRXpGZroinSQq
qh1EgbWqroFoUGUTqdnKZ81W51QidWF1vaXSDCUzVGmEglQopuY7rISa0FnK
AihBks9lKp9TqkAmx893kVqyT29sKjKVHVpRO1f+TO07CZMl3x19vSxze9SK
2oPPbN81//XahMlE0Ychkug/55fJ7789f8UzCZNTwXuwlmTQn6hIRyrMUXR1
ib0NxqUHZoN6oKfpivT43uhrGqaErjCBY9b+KeWIUXDVAFNKeIlJLOFVg2Cs
g3ahq1IDGd/grQmud4l9d4+qE8nZ557R2sNaAYtHemFYeoGQXjIx7TVXUrdJ
OrBX2hdcJOQU3E54zL2vP3efO2c3THT2jHZ3Lkx6Xw+zHZlg7I8x5x1nfhqz
8zBbC0eCpLqaUpscRDdGRYgNmrOU1WcKbquZIg7F20dV+wgxiuQhRv50Di7p
V/A15CaEJhRYa0J/Av8dHCRmSBbqENfSrq4OJIPDIS8QlJE0G4EM47VJORfT
elycVpSftwYnxOC4Xdvh8qe5NZwzEoAlr6Mu+9NcpyZoXTViXF/K994ttBPT
baTZkEtgPJMP9TcjLBchWfM6zv9kotONi3t4Oh+3K02jMBt0cIJdk5Ye4vTt
1hCbJOJFWJNGcl0zfQGLJt7G9kziv+z70jSHzwcc/5Dw0lDU+ujmaD5m7B3y
UTj/eLuwj+AfXi9pyiDYkYLyXvBmHs6fWYi1ZPjcY4IcaD+0YK0BLcPTRAJO
JYzH4ZGOYo+Sd1V5mqPc/pUkDr/xfSWZz9X9uPDlzYXIqVevvlC2mGq9+JMo
94xGqS8cyd0zfnhLSUshIvr64n7I6jx37K9w1PBvG3mjo4falKL+8VoRUqB7
Y4ZnUB87gPWO/7z2p/Fn7+LXtZjehZ8ar31JjAzeyo4xK3uJ7FgTLhp/d/zz
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
kgUPH7L/72ds+kpbesG/hDCU6/8Ey0Skdg==
        "]]|>, "orcInstance" -> 49983520, "orcModuleId" -> 31691616, 
    "targetMachineId" -> 44316672|>, 140172363596400, 140172363596064, 
   140172363596336, 140172363595776, 
   "{} -> \"NumericArray\"[\"UnsignedInteger8\", LiteralType[1, \
\"Integer64\"]]"],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.878170134451757*^9, {3.878170607058626*^9, 3.878170624447358*^9}, 
   3.8782314357059317`*^9, 3.878348263189334*^9, 3.8783484549728317`*^9, 
   3.878665592786203*^9, 3.8786663943472023`*^9, 3.87866671964496*^9, 
   3.878668881734707*^9, 3.878747448609087*^9, 3.8787513857366953`*^9, 
   3.8795564884179497`*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"282dcf7e-9e8f-4257-a2f2-4dfe9141a13e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"cf", "[", "]"}], "//", "RepeatedTiming"}]], "Input",
 CellChangeTimes->{{3.878231434205186*^9, 3.878231438771963*^9}, {
  3.878665595428707*^9, 3.878665598123843*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"55a993b0-ebcf-4a40-97b3-5c1adff6a2c4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.6265945434570313`*^-7", ",", 
   InterpretationBox[
    RowBox[{
     TagBox["NumericArray",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"UnsignedInteger8\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "32", "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"UnsignedInteger8\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "32", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{
                    "223", "\", \"", "253", "\", \"", "96", "\", \"", "33", 
                    "\", \"", "187", "\", \"", "\"\[Ellipsis]\""}, 
                    "RowDefault"], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    RawArray["UnsignedInteger8",{223, 253, 96, 33, 187, 43, 213, 176, 175, 
     103, 98, 144, 128, 158, 195, 165, 49, 145, 221, 129, 199, 247, 10, 75, 
     40, 104, 138, 54, 33, 130, 152, 111}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.878231439030052*^9, 3.878348264513074*^9, 3.87834845563282*^9, 
   3.878665599864793*^9, 3.8786663966210737`*^9, {3.8786667156631203`*^9, 
   3.8786667211953297`*^9}, 3.8786688832877493`*^9, 3.878747451876848*^9, 
   3.878751388364381*^9, 3.879556490667364*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"37700aef-f15e-4ab2-8a4f-99aaf446f3ec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RepeatedTiming", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"out", "=", 
    RowBox[{"CreateManagedExpression", "[", 
     RowBox[{
      RowBox[{"CreateBuffer", "[", 
       RowBox[{"\"\<UnsignedInteger8\>\"", ",", "32"}], "]"}], ",", 
      "DeleteBuffer"}], "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"in", "=", 
    RowBox[{"CreateManagedExpression", "[", 
     RowBox[{
      RowBox[{"StringToBuffer", "[", "\"\<Hello, World!\>\"", "]"}], ",", 
      "DeleteBuffer"}], "]"}]}], ";", 
   RowBox[{"sha256", "[", 
    RowBox[{"in", ",", "13", ",", "out"}], "]"}], ";", "\[IndentingNewLine]", 
   
   RowBox[{"BufferToNumericArray", "[", 
    RowBox[{"out", ",", "\"\<UnsignedInteger8\>\"", ",", "32"}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.878665607555347*^9, 3.878665609820649*^9}, {
  3.878666626331325*^9, 3.878666652345896*^9}, {3.8786666976523943`*^9, 
  3.878666706947804*^9}, {3.878779458652396*^9, 3.8787794996539907`*^9}, {
  3.879556501397153*^9, 3.879556504435714*^9}, {3.880508757075629*^9, 
  3.880508759296556*^9}, {3.880509850230687*^9, 3.880509851929037*^9}, {
  3.883245949245907*^9, 3.8832459545815353`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"c0986cc5-17b3-4350-b7ed-c105c17b64ad"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5.277633666992187`*^-6", ",", 
   InterpretationBox[
    RowBox[{
     TagBox["NumericArray",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"UnsignedInteger8\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "32", "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"UnsignedInteger8\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "32", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{
                    "223", "\", \"", "253", "\", \"", "96", "\", \"", "33", 
                    "\", \"", "187", "\", \"", "\"\[Ellipsis]\""}, 
                    "RowDefault"], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    RawArray["UnsignedInteger8",{223, 253, 96, 33, 187, 43, 213, 176, 175, 
     103, 98, 144, 128, 158, 195, 165, 49, 145, 221, 129, 199, 247, 10, 75, 
     40, 104, 138, 54, 33, 130, 152, 111}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.883245956289914*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"6349a2e3-8c50-49a4-aaae-76b54497b0c3"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["SQLite", "Subsection",
 CellChangeTimes->{{3.878169789744837*^9, 
  3.878169790664628*^9}},ExpressionUUID->"4c6873e4-5428-4b70-a4f4-\
14f0d3fabeb5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PacletInstall", "[", "\"\<LibSQLite\>\"", "]"}]], "Input",
 CellLabel->"In[8]:=",ExpressionUUID->"224a0598-e1e7-4b33-8141-13ef8bbc3299"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PacletObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0416667], {
               FaceForm[{
                 RGBColor[0.961, 0.961, 0.961], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5454, 
                22.5972}, {7.5464, 20.5002}, {2.5454, 18.4022}, {2.5454, 
                12.5982}, {2.5454, 12.5972}, {2.5454, 6.7952}, {7.5454, 
                4.6962}, {7.546, 4.6972}, {12.5454, 2.5992}, {17.5454, 
                4.6972}, {17.5454, 4.6962}, {22.5454, 6.7952}, {22.5454, 
                12.5972}, {22.5454, 12.5982}, {22.5454, 18.4022}}}]}, {
               FaceForm[{
                 RGBColor[0.898, 0.898, 0.898], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 8.3359}, {17.125, 
                14.0569}, {16.875, 14.0569}, {16.875, 8.3359}, {17., 
                8.1169}, {21.952, 6.0399}, {22.049, 6.2709}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 8.3359}, {7.125, 14.0569}, {
                6.875, 14.0569}, {6.875, 8.3359}, {1.952, 6.2709}, {2.048, 
                6.0399}, {7., 8.1169}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8745, 6.2383}, {6.9515, 4.1733}, {7.0475, 
                3.9423}, {11.9995, 6.0193}, {16.9515, 3.9423}, {17.0475, 
                4.1733}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 14.1392}, {17.125, 
                19.8602}, {16.875, 19.8602}, {16.875, 14.1392}, {17., 
                13.9202}, {21.952, 11.8432}, {22.049, 12.0742}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 14.1392}, {7.125, 19.8602}, {
                6.875, 19.8602}, {6.875, 14.1392}, {1.952, 12.0742}, {2.048, 
                11.8432}, {7., 13.9202}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8746, 21.3633}, {11.8746, 18.3563}, {
                11.9996, 18.3033}, {12.1246, 18.3563}, {12.1246, 21.3633}, {
                11.9996, 21.4153}}}]}, {
               FaceForm[{
                 RGBColor[0.749, 0.749, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{8.292, 19.8594}, {12., 21.4154}, {15.707, 
                 19.8594}, {12., 18.3034}}, {{17.5, 19.5274}, {17.5, 
                 20.1924}, {12., 22.5004}, {6.5, 20.1924}, {6.5, 19.5284}, {
                 12., 17.2194}, {12., 17.2194}, {15.7, 18.7724}, {17.5, 
                 19.5274}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.5, 8.5156}, {11.5, 6.4876}, {11.5, 
                5.4026}, {12.5, 5.8226}, {12.5, 8.5156}, {12., 8.3056}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{21.5, 6.4873}, {17.5, 4.8083}, {17.5, 
                 9.5283}, {21.5, 11.2073}}, {{21.5, 12.7113}, {21.5, 
                 12.2913}, {17., 10.4033}, {16.5, 10.6133}, {16.5, 10.1943}, {
                 15.707, 9.8613}, {16.5, 9.5283}, {16.5, 4.8083}, {16.5, 
                 4.8093}, {16.5, 4.3903}, {15.707, 4.0573}, {17., 3.5143}, {
                 22.5, 5.8223}, {22.5, 12.2913}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{6.5, 4.8086}, {2.5, 6.4876}, {2.5, 
                 11.2066}, {6.5, 9.5286}}, {{7.5, 9.1096}, {7.5, 9.1096}, {
                 7.5, 9.5286}, {8.292, 9.8616}, {7.5, 10.1936}, {7.5, 
                 10.6136}, {7., 10.4036}, {2.5, 12.2906}, {2.5, 12.7106}, {
                 1.5, 12.2916}, {1.5, 5.8226}, {7., 3.5146}, {8.293, 
                 4.0576}, {7.5, 4.3906}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{3.2925, 17.7622}, {7.0005, 
                 19.3182}, {10.7075, 17.7622}, {7.0005, 16.2062}}, {{6.5005, 
                 10.6122}, {2.5005, 12.2912}, {2.5005, 17.0102}, {6.5005, 
                 15.3322}}, {{7.5005, 10.1932}, {7.5005, 10.6122}, {7.5005, 
                 15.3322}, {12.0005, 17.2202}, {12.5005, 17.0102}, {12.5005, 
                 18.0952}, {7.0005, 20.4032}, {1.5005, 18.0952}, {1.5005, 
                 11.6262}, {7.0005, 9.3182}, {8.2935, 9.8612}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{21.5, 12.291}, {17.5, 10.612}, {
                 17.5, 15.332}, {21.5, 17.01}}, {{13.293, 17.762}, {17., 
                 19.318}, {20.708, 17.762}, {17., 16.207}}, {{17., 20.403}, {
                 11.5, 18.095}, {11.5, 17.01}, {12., 17.22}, {16.5, 15.332}, {
                 16.5, 10.612}, {16.5, 10.194}, {15.706, 9.861}, {17., 
                 9.318}, {22.5, 11.626}, {22.5, 18.095}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{16.4995, 4.3906}, {12.4995, 
                 2.7116}, {12.4995, 7.4316}, {16.4995, 9.1096}}, {{11.4995, 
                 2.7116}, {7.4995, 4.3906}, {7.4995, 9.1096}, {11.4995, 
                 7.4316}}, {{16.4995, 10.6136}, {16.4995, 10.1946}, {11.9995, 
                 8.3056}, {8.2915, 9.8616}, {7.4995, 10.1936}, {7.4995, 
                 10.6146}, {6.4995, 10.1946}, {6.4995, 3.7256}, {11.9995, 
                 1.4176}, {17.4995, 3.7256}, {17.4995, 10.1946}}}]}, {
               FaceForm[{
                 RGBColor[0.965, 0.765, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{12., 17.6616}, {16.945, 15.5856}, {16.945, 
                9.9376}, {12., 7.8636}, {7.055, 9.9376}, {7.055, 
                15.5856}}}]}, {
               FaceForm[{
                 RGBColor[0.91, 0.655, 0.635], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.125, 
                17.7627}, {11.875, 17.7627}, {11.875, 12.0407}, {6.952, 
                9.9757}, {7.048, 9.7447}, {12., 11.8227}, {16.952, 9.7447}, {
                17.048, 9.9757}, {12.125, 12.0407}}}]}, {
               FaceForm[{
                 RGBColor[0.867, 0.067, 0.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{12.5, 8.5146}, {12.5, 13.2336}, {16.5, 14.9116}, {
                 16.5, 10.1926}}, {{7.5, 14.9116}, {11.5, 13.2336}, {11.5, 
                 8.5146}, {7.5, 10.1926}}, {{15.708, 15.6636}, {12., 
                 14.1086}, {8.292, 15.6636}, {12., 17.2206}}, {{12., 
                 18.3046}, {6.5, 15.9956}, {6.5, 9.5286}, {12., 7.2206}, {
                 17.5, 9.5286}, {17.5, 15.9956}}}]}}, AspectRatio -> 
             Automatic, ImageSize -> {24., 24.}, 
             PlotRange -> {{0., 24.}, {0., 24.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"LibSQLite\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"3.38.05\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0416667], {
               FaceForm[{
                 RGBColor[0.961, 0.961, 0.961], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5454, 
                22.5972}, {7.5464, 20.5002}, {2.5454, 18.4022}, {2.5454, 
                12.5982}, {2.5454, 12.5972}, {2.5454, 6.7952}, {7.5454, 
                4.6962}, {7.546, 4.6972}, {12.5454, 2.5992}, {17.5454, 
                4.6972}, {17.5454, 4.6962}, {22.5454, 6.7952}, {22.5454, 
                12.5972}, {22.5454, 12.5982}, {22.5454, 18.4022}}}]}, {
               FaceForm[{
                 RGBColor[0.898, 0.898, 0.898], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 8.3359}, {17.125, 
                14.0569}, {16.875, 14.0569}, {16.875, 8.3359}, {17., 
                8.1169}, {21.952, 6.0399}, {22.049, 6.2709}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 8.3359}, {7.125, 14.0569}, {
                6.875, 14.0569}, {6.875, 8.3359}, {1.952, 6.2709}, {2.048, 
                6.0399}, {7., 8.1169}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8745, 6.2383}, {6.9515, 4.1733}, {7.0475, 
                3.9423}, {11.9995, 6.0193}, {16.9515, 3.9423}, {17.0475, 
                4.1733}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 14.1392}, {17.125, 
                19.8602}, {16.875, 19.8602}, {16.875, 14.1392}, {17., 
                13.9202}, {21.952, 11.8432}, {22.049, 12.0742}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 14.1392}, {7.125, 19.8602}, {
                6.875, 19.8602}, {6.875, 14.1392}, {1.952, 12.0742}, {2.048, 
                11.8432}, {7., 13.9202}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8746, 21.3633}, {11.8746, 18.3563}, {
                11.9996, 18.3033}, {12.1246, 18.3563}, {12.1246, 21.3633}, {
                11.9996, 21.4153}}}]}, {
               FaceForm[{
                 RGBColor[0.749, 0.749, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{8.292, 19.8594}, {12., 21.4154}, {15.707, 
                 19.8594}, {12., 18.3034}}, {{17.5, 19.5274}, {17.5, 
                 20.1924}, {12., 22.5004}, {6.5, 20.1924}, {6.5, 19.5284}, {
                 12., 17.2194}, {12., 17.2194}, {15.7, 18.7724}, {17.5, 
                 19.5274}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.5, 8.5156}, {11.5, 6.4876}, {11.5, 
                5.4026}, {12.5, 5.8226}, {12.5, 8.5156}, {12., 8.3056}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{21.5, 6.4873}, {17.5, 4.8083}, {17.5, 
                 9.5283}, {21.5, 11.2073}}, {{21.5, 12.7113}, {21.5, 
                 12.2913}, {17., 10.4033}, {16.5, 10.6133}, {16.5, 10.1943}, {
                 15.707, 9.8613}, {16.5, 9.5283}, {16.5, 4.8083}, {16.5, 
                 4.8093}, {16.5, 4.3903}, {15.707, 4.0573}, {17., 3.5143}, {
                 22.5, 5.8223}, {22.5, 12.2913}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{6.5, 4.8086}, {2.5, 6.4876}, {2.5, 
                 11.2066}, {6.5, 9.5286}}, {{7.5, 9.1096}, {7.5, 9.1096}, {
                 7.5, 9.5286}, {8.292, 9.8616}, {7.5, 10.1936}, {7.5, 
                 10.6136}, {7., 10.4036}, {2.5, 12.2906}, {2.5, 12.7106}, {
                 1.5, 12.2916}, {1.5, 5.8226}, {7., 3.5146}, {8.293, 
                 4.0576}, {7.5, 4.3906}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{3.2925, 17.7622}, {7.0005, 
                 19.3182}, {10.7075, 17.7622}, {7.0005, 16.2062}}, {{6.5005, 
                 10.6122}, {2.5005, 12.2912}, {2.5005, 17.0102}, {6.5005, 
                 15.3322}}, {{7.5005, 10.1932}, {7.5005, 10.6122}, {7.5005, 
                 15.3322}, {12.0005, 17.2202}, {12.5005, 17.0102}, {12.5005, 
                 18.0952}, {7.0005, 20.4032}, {1.5005, 18.0952}, {1.5005, 
                 11.6262}, {7.0005, 9.3182}, {8.2935, 9.8612}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{21.5, 12.291}, {17.5, 10.612}, {
                 17.5, 15.332}, {21.5, 17.01}}, {{13.293, 17.762}, {17., 
                 19.318}, {20.708, 17.762}, {17., 16.207}}, {{17., 20.403}, {
                 11.5, 18.095}, {11.5, 17.01}, {12., 17.22}, {16.5, 15.332}, {
                 16.5, 10.612}, {16.5, 10.194}, {15.706, 9.861}, {17., 
                 9.318}, {22.5, 11.626}, {22.5, 18.095}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{16.4995, 4.3906}, {12.4995, 
                 2.7116}, {12.4995, 7.4316}, {16.4995, 9.1096}}, {{11.4995, 
                 2.7116}, {7.4995, 4.3906}, {7.4995, 9.1096}, {11.4995, 
                 7.4316}}, {{16.4995, 10.6136}, {16.4995, 10.1946}, {11.9995, 
                 8.3056}, {8.2915, 9.8616}, {7.4995, 10.1936}, {7.4995, 
                 10.6146}, {6.4995, 10.1946}, {6.4995, 3.7256}, {11.9995, 
                 1.4176}, {17.4995, 3.7256}, {17.4995, 10.1946}}}]}, {
               FaceForm[{
                 RGBColor[0.965, 0.765, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{12., 17.6616}, {16.945, 15.5856}, {16.945, 
                9.9376}, {12., 7.8636}, {7.055, 9.9376}, {7.055, 
                15.5856}}}]}, {
               FaceForm[{
                 RGBColor[0.91, 0.655, 0.635], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.125, 
                17.7627}, {11.875, 17.7627}, {11.875, 12.0407}, {6.952, 
                9.9757}, {7.048, 9.7447}, {12., 11.8227}, {16.952, 9.7447}, {
                17.048, 9.9757}, {12.125, 12.0407}}}]}, {
               FaceForm[{
                 RGBColor[0.867, 0.067, 0.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{12.5, 8.5146}, {12.5, 13.2336}, {16.5, 14.9116}, {
                 16.5, 10.1926}}, {{7.5, 14.9116}, {11.5, 13.2336}, {11.5, 
                 8.5146}, {7.5, 10.1926}}, {{15.708, 15.6636}, {12., 
                 14.1086}, {8.292, 15.6636}, {12., 17.2206}}, {{12., 
                 18.3046}, {6.5, 15.9956}, {6.5, 9.5286}, {12., 7.2206}, {
                 17.5, 9.5286}, {17.5, 15.9956}}}]}}, AspectRatio -> 
             Automatic, ImageSize -> {24., 24.}, 
             PlotRange -> {{0., 24.}, {0., 24.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"LibSQLite\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"3.38.05\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Location: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"/Users/christopher/Library/Mathematica/Paclets/Repository/\
LibSQLite-3.38.05\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   
                   RowBox[{
                    "\"Provides SQLite dynamic libraries for use\"", 
                    "\[Ellipsis]", 
                    "\"r. Not used by any built-in functionality.\""}], 
                   Short], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  PacletObject[<|
   "Name" -> "LibSQLite", "Version" -> "3.38.05", "WolframVersion" -> "13.1+",
     "Extensions" -> {{"LibraryLink"}}, "Description" -> 
    "Provides SQLite dynamic libraries for use as an example in \
tutorial/CallingExternalLibrariesWithTheCompiler. Not used by any built-in \
functionality.", "Location" -> 
    "/Users/christopher/Library/Mathematica/Paclets/Repository/LibSQLite-3.38.\
05"|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8781698083031816`*^9, 3.8782302070728083`*^9, 
  3.8783911523837433`*^9, 3.8783984076261883`*^9, 3.878741651650091*^9, 
  3.878744483307514*^9, 3.878747462904346*^9, 3.878753289473384*^9, 
  3.878754128639427*^9, 3.8795565288533792`*^9, 3.879608429474104*^9, 
  3.8796411433204727`*^9, 3.8796417222092333`*^9, 3.8798467361563997`*^9, 
  3.880508777674637*^9, 3.880509226487824*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"2c570c19-71aa-46ff-a4b7-810cf13fa3fb"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"LibraryLoad", "[", "\"\<libsqlite3\>\"", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.878169818947291*^9, 3.8781698263153963`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"4430de82-4346-4399-a4f5-e7c75974d3e2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sqliteVersion", "=", 
  RowBox[{"CreateForeignFunction", "[", 
   RowBox[{"\"\<sqlite3_libversion_number\>\"", ",", 
    RowBox[{
     RowBox[{"{", "}"}], "->", "\"\<CInt\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.87816983334691*^9, 3.878169844467031*^9}, {
   3.8781699117511387`*^9, 3.878169916782464*^9}, 3.878230205271985*^9, {
   3.880508767622192*^9, 3.880508768741989*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"2185f48d-a7c7-48d4-aef9-aaf3ae7deb98"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TypeProduct", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"], 
       DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "DataStructure[ForeignFunctionObject, $Failed]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.878169844748013*^9, {3.8781699126694*^9, 3.878169917585506*^9}, 
   3.8782302082088423`*^9, 3.87839115416061*^9, 3.878398412174555*^9, 
   3.878399545450629*^9, 3.878400092537284*^9, 3.878723438822701*^9, 
   3.8787240910536118`*^9, 3.878726922403975*^9, 3.878728945604393*^9, 
   3.878741158381818*^9, 3.878741651806899*^9, 3.878744483499803*^9, 
   3.878747464258266*^9, 3.878747524439918*^9, 3.87875177563361*^9, 
   3.878752019918496*^9, 3.878753289802822*^9, 3.87875412878701*^9, 
   3.8787772809531727`*^9, 3.8787803802799587`*^9, 3.8795565312670603`*^9, 
   3.879608430761867*^9, 3.879641144955724*^9, 3.8796417315008783`*^9, 
   3.8796417762210217`*^9, 3.879846738282319*^9, 3.88050876902927*^9, 
   3.88050922738546*^9, 3.880509871723137*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"20eadb9e-0836-4825-8bda-d6a5c3e3ea87"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CallForeignFunction", "[", 
  RowBox[{"sqliteVersion", ",", 
   RowBox[{"{", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8781698458683233`*^9, 3.87816985258722*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"d70e7555-4f90-417c-ba96-d868e897a684"],

Cell[BoxData["3039004"], "Output",
 CellChangeTimes->{{3.878169919300396*^9, 3.878169921118292*^9}, 
   3.8782302089194727`*^9, 3.878391154888008*^9, 3.8783984141213017`*^9, 
   3.878399546821939*^9, 3.878400092733376*^9, 3.878723439929837*^9, 
   3.878724092191189*^9, 3.878726922934738*^9, 3.878728947245021*^9, 
   3.8787411590508833`*^9, 3.878741651862899*^9, 3.878744483543282*^9, 
   3.8787474650337143`*^9, 3.8787475250668707`*^9, 3.878751776314987*^9, 
   3.878752020838306*^9, 3.8787532898650093`*^9, 3.87875412884274*^9, 
   3.878777281592873*^9, 3.8787803808997707`*^9, 3.879556531881213*^9, 
   3.8796084314120092`*^9, 3.8796411454577417`*^9, 3.879641731688053*^9, 
   3.879641776428151*^9, 3.8798467389025793`*^9, {3.880508771974765*^9, 
   3.880508780561164*^9}, 3.8805092277892017`*^9, 3.880509872520699*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"796518f3-3a35-4232-97bb-be7e55d6317d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sqliteOpenC", "=", 
  RowBox[{"CreateForeignFunction", "[", 
   RowBox[{"\"\<sqlite3_open\>\"", ",", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
      "\"\<OpaqueRawPointer\>\"", ",", "\[IndentingNewLine]", 
       "\"\<OpaqueRawPointer\>\""}], "\[IndentingNewLine]", "}"}], "->", 
     "\"\<CInt\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.878391165861327*^9, 3.878391191878581*^9}, 
   3.878723497893715*^9, {3.8787261344304333`*^9, 3.878726139494321*^9}, {
   3.880508783741951*^9, 3.8805087910749083`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"85e2130b-0cf6-4382-882f-bdfe7976d67e"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TypeProduct", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"], 
       DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "DataStructure[ForeignFunctionObject, $Failed]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8783911872560863`*^9, 3.8783911922574587`*^9}, 
   3.878398416103396*^9, 3.87839954898429*^9, 3.878400094377494*^9, 
   3.8787235023789043`*^9, 3.878724094488122*^9, 3.878726924597698*^9, 
   3.878728949035925*^9, 3.878741160442379*^9, 3.878741651932487*^9, 
   3.8787444836558323`*^9, 3.878747466324601*^9, 3.8787475263220997`*^9, 
   3.878751777005631*^9, 3.878752023018855*^9, 3.878753289994605*^9, 
   3.8787541289566383`*^9, 3.878777282078442*^9, 3.87878038130828*^9, 
   3.8795565325488358`*^9, 3.879608431913827*^9, 3.879641145968566*^9, 
   3.879641731739071*^9, 3.879641776468132*^9, 3.879846742084033*^9, 
   3.880508788660039*^9, 3.880509228279561*^9, 3.8805098732515507`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"289c7f4d-9c5d-4633-87c0-11198c013e92"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sqliteCloseC", "=", 
  RowBox[{"CreateForeignFunction", "[", 
   RowBox[{"\"\<sqlite3_close\>\"", ",", 
    RowBox[{
     RowBox[{
     "{", "\[IndentingNewLine]", "\"\<OpaqueRawPointer\>\"", 
      "\[IndentingNewLine]", "}"}], "->", "\"\<CInt\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.878724384309444*^9, 3.878724395061852*^9}, {
  3.878726143622785*^9, 3.878726144638603*^9}, {3.880508795554042*^9, 
  3.880508798749234*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"1059d57b-27ce-4222-98d8-28ffe7e85b5d"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TypeProduct", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"], 
       DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "DataStructure[ForeignFunctionObject, $Failed]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.878724404948501*^9, 3.878724806165435*^9, 
  3.878724874306552*^9, 3.878725348022159*^9, 3.878726939635331*^9, 
  3.8787289763545628`*^9, 3.878741165676037*^9, 3.878741655844644*^9, 
  3.878744487555067*^9, 3.8787475313880587`*^9, 3.878751781384029*^9, 
  3.878752026741836*^9, 3.878753293340818*^9, 3.8787541323772984`*^9, 
  3.878777296143826*^9, 3.878780382641366*^9, 3.879556533103615*^9, 
  3.879608433273406*^9, 3.879641147332776*^9, 3.8796417318070173`*^9, 
  3.879641776510282*^9, 3.8798467424733963`*^9, 3.880508799009469*^9, 
  3.880509228601901*^9, 3.880509874364974*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"88c25661-71d3-476d-a1a3-fc38c6c9521f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"sqliteClose", "[", "db_", "]"}], ":=", 
  RowBox[{"CallForeignFunction", "[", 
   RowBox[{"sqliteCloseC", ",", 
    RowBox[{"{", "db", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8787244150462847`*^9, 3.878724427422718*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"5df6f2ee-1831-4a2a-8301-d9b599451827"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sqliteOpen", "[", "path_", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"databaseArr", ",", "pathC", ",", "errorCode"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"databaseArr", "=", 
      RowBox[{"CreateManagedExpression", "[", 
       RowBox[{
        RowBox[{"CreateBuffer", "[", "\"\<OpaqueRawPointer\>\"", "]"}], ",", 
        "DeleteBuffer"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"pathC", "=", 
      RowBox[{"CreateManagedExpression", "[", 
       RowBox[{
        RowBox[{"StringToBuffer", "[", "path", "]"}], ",", "DeleteBuffer"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"errorCode", "=", 
      RowBox[{"CallForeignFunction", "[", 
       RowBox[{"sqliteOpenC", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"GetManagedExpression", "[", "pathC", "]"}], ",", 
          "databaseArr"}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"errorCode", "===", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"DereferenceBuffer", "[", 
        RowBox[{"databaseArr", ",", "\"\<OpaqueRawPointer\>\""}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Failure", "[", 
        RowBox[{"\"\<FailedOpenDatabase\>\"", ",", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<ErrorCode\>\"", "->", "errorCode"}], ",", 
           RowBox[{"\"\<Path\>\"", "->", "path"}]}], "|>"}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8787235096623497`*^9, 3.878723546950807*^9}, {
  3.878723614249161*^9, 3.8787238969084682`*^9}, {3.8787241049321938`*^9, 
  3.878724109956058*^9}, {3.878724626415357*^9, 3.878724667345357*^9}, {
  3.878724816206153*^9, 3.878724828079401*^9}, {3.878725371259581*^9, 
  3.8787253968760967`*^9}, {3.8787773009419813`*^9, 3.878777380376244*^9}, {
  3.87877742486862*^9, 3.878777428825976*^9}, {3.878780386807866*^9, 
  3.878780387511672*^9}, {3.8795565400697927`*^9, 3.879556542221437*^9}, {
  3.880508803082388*^9, 3.880508805362711*^9}, {3.880508836026553*^9, 
  3.880508872264975*^9}, {3.8805089125889997`*^9, 3.8805089234529257`*^9}, {
  3.8805098763989162`*^9, 3.880509879490387*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"d7fc2c56-9d7d-4a90-8835-20babad1dcf3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"db", "=", 
  RowBox[{"sqliteOpen", "[", 
   RowBox[{
   "FindFile", "[", "\"\<ExampleData/ecommerce-database.sqlite\>\"", "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.878724447096733*^9, 3.878724448719523*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"aabc691d-93b2-4ba2-b006-84af501e5855"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["OpaqueRawPointer",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["140423653907824", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["140423653907824", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ChristopherWolfram`ForeignFunctionInterface`OpaqueRawPointer[
  140423653907824],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.878724448963282*^9, 3.878724456697667*^9}, 
   3.878724651115843*^9, 3.878725352388691*^9, {3.87872538641527*^9, 
   3.8787253987723417`*^9}, 3.878726942591941*^9, {3.878729008101075*^9, 
   3.8787290134816*^9}, 3.878741165910447*^9, 3.8787416559497013`*^9, 
   3.8787444876727343`*^9, {3.878747535011689*^9, 3.8787475386512527`*^9}, 
   3.878748104037302*^9, 3.87875178281772*^9, 3.878752030636832*^9, 
   3.878753293396908*^9, 3.878754132506543*^9, {3.878777337342869*^9, 
   3.878777382197294*^9}, 3.878777430782362*^9, 3.878780389874424*^9, {
   3.8795565462074633`*^9, 3.879556549138378*^9}, 3.879608435754407*^9, {
   3.8796411508171883`*^9, 3.879641152658379*^9}, {3.8796412305175133`*^9, 
   3.879641233046116*^9}, 3.879641731884437*^9, 3.87964177656369*^9, 
   3.879846744793254*^9, {3.8805088373346252`*^9, 3.880508869581778*^9}, {
   3.8805089152713757`*^9, 3.880508924604351*^9}, {3.880509230981613*^9, 
   3.880509237914454*^9}, {3.880509881873211*^9, 3.8805098871029587`*^9}},
 CellLabel->"Out[40]=",ExpressionUUID->"c68d8163-a5ca-4013-a0a3-2f90755d0d64"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sqliteClose", "[", "db", "]"}]], "Input",
 CellChangeTimes->{{3.878724430584406*^9, 3.878724451287737*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"e43d5bf6-1b38-4474-9324-173092525239"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.8787244384594603`*^9, 3.878724457531036*^9}, {
   3.8787246524498663`*^9, 3.878724654427026*^9}, {3.878724718527495*^9, 
   3.878724719319118*^9}, {3.878725353388884*^9, 3.878725354429789*^9}, {
   3.878725387479227*^9, 3.878725399622691*^9}, 3.8787269431764812`*^9, {
   3.878729008909502*^9, 3.878729014814268*^9}, 3.878741166227364*^9, 
   3.878741655992099*^9, 3.878744487717103*^9, {3.878747536228153*^9, 
   3.87874753921964*^9}, 3.8787517841378107`*^9, 3.8787520317975407`*^9, 
   3.878753293419736*^9, 3.878754132551737*^9, 3.878777432331196*^9, 
   3.8787803907058287`*^9, {3.879556547757359*^9, 3.8795565496087027`*^9}, 
   3.879608440853382*^9, {3.879641151353551*^9, 3.879641151824029*^9}, 
   3.879641231524302*^9, {3.880509232831015*^9, 3.88050923517763*^9}, {
   3.880509882698708*^9, 3.8805098853371267`*^9}},
 CellLabel->"Out[39]=",ExpressionUUID->"08cf6869-e344-48d5-8103-694d15439ab0"]
}, Open  ]],

Cell["\<\
int sqlite3_exec(
  sqlite3*,                                  /* An open database */
  const char *sql,                           /* SQL to be evaluated */
  int (*callback)(void*,int,char**,char**),  /* Callback function */
  void *,                                    /* 1st argument to callback */
  char **errmsg                              /* Error msg written here */
);\
\>", "Program",
 CellID->891380682,ExpressionUUID->"5de9782f-deff-4ed3-a141-830de8d3c222"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sqliteExecC", "=", 
  RowBox[{"CreateForeignFunction", "[", 
   RowBox[{"\"\<sqlite3_exec\>\"", ",", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
      "\"\<OpaqueRawPointer\>\"", ",", "\[IndentingNewLine]", 
       "\"\<OpaqueRawPointer\>\"", ",", "\[IndentingNewLine]", 
       "\"\<OpaqueRawPointer\>\"", ",", "\[IndentingNewLine]", 
       "\"\<OpaqueRawPointer\>\"", ",", "\[IndentingNewLine]", 
       "\"\<OpaqueRawPointer\>\""}], "\[IndentingNewLine]", "}"}], "->", 
     "\"\<CInt\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.87872429733038*^9, 3.8787243289321136`*^9}, {
  3.878726150119156*^9, 3.878726156711125*^9}, {3.879641184417412*^9, 
  3.87964121202703*^9}, {3.880509241024858*^9, 3.880509249178721*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"e0fd7d0f-6479-4035-bd32-b061c343b93b"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TypeProduct", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"], 
       DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "DataStructure[ForeignFunctionObject, $Failed]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.879641203852983*^9, 3.879641212417931*^9}, 
   3.879641731975766*^9, 3.879641837401092*^9, 3.87984680357137*^9, 
   3.880509249637472*^9, 3.880509887750864*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"614ffd15-736f-489b-84e3-cb3c7d36e9d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CallForeignFunction", "[", 
  RowBox[{"sqliteExecC", ",", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"db", ",", "\[IndentingNewLine]", 
     RowBox[{"CreateManagedExpression", "[", 
      RowBox[{
       RowBox[{
       "StringToBuffer", "[", 
        "\"\<SELECT * FROM customers WHERE creditLimit > 200000;\>\"", "]"}], 
       ",", "DeleteBuffer"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"CreateCallback", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Echo", "[", 
           RowBox[{"{", "##", "}"}], "]"}], ";", "0"}], ")"}], "&"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<OpaqueRawPointer\>\"", ",", "\"\<CInt\>\"", ",", 
          "\"\<OpaqueRawPointer\>\"", ",", "\"\<OpaqueRawPointer\>\""}], 
         "}"}], "->", "\"\<CInt\>\""}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"OpaqueRawPointer", "[", "0", "]"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"OpaqueRawPointer", "[", "0", "]"}]}], "\[IndentingNewLine]", 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8798468225387287`*^9, 3.879846850236191*^9}, {
   3.880509252816044*^9, 3.880509262327445*^9}, 3.8805098898280287`*^9},
 CellLabel->"In[42]:=",ExpressionUUID->"6af83ecd-a850-47a6-ba78-c0a5038ced9d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    RowBox[{
     TagBox["OpaqueRawPointer",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              GridBox[{{
                 TagBox["\"address: \"", "SummaryItem"]}, {
                 TagBox["0", "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              GridBox[{{
                 TagBox["\"address: \"", "SummaryItem"]}, {
                 TagBox["0", "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    ChristopherWolfram`ForeignFunctionInterface`OpaqueRawPointer[0],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", "13", ",", 
   InterpretationBox[
    RowBox[{
     TagBox["OpaqueRawPointer",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              GridBox[{{
                 TagBox["\"address: \"", "SummaryItem"]}, {
                 TagBox["140423702373544", "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              GridBox[{{
                 TagBox["\"address: \"", "SummaryItem"]}, {
                 TagBox["140423702373544", "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    ChristopherWolfram`ForeignFunctionInterface`OpaqueRawPointer[
    140423702373544],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["OpaqueRawPointer",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              GridBox[{{
                 TagBox["\"address: \"", "SummaryItem"]}, {
                 TagBox["140423702373440", "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              GridBox[{{
                 TagBox["\"address: \"", "SummaryItem"]}, {
                 TagBox["140423702373440", "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    ChristopherWolfram`ForeignFunctionInterface`OpaqueRawPointer[
    140423702373440],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Echo",
 CellChangeTimes->{
  3.880509890796836*^9},ExpressionUUID->"ff8c599b-d66a-4e48-a5d0-\
f1073916e9a4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    RowBox[{
     TagBox["OpaqueRawPointer",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              GridBox[{{
                 TagBox["\"address: \"", "SummaryItem"]}, {
                 TagBox["0", "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              GridBox[{{
                 TagBox["\"address: \"", "SummaryItem"]}, {
                 TagBox["0", "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    ChristopherWolfram`ForeignFunctionInterface`OpaqueRawPointer[0],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", "13", ",", 
   InterpretationBox[
    RowBox[{
     TagBox["OpaqueRawPointer",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              GridBox[{{
                 TagBox["\"address: \"", "SummaryItem"]}, {
                 TagBox["140423702373544", "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              GridBox[{{
                 TagBox["\"address: \"", "SummaryItem"]}, {
                 TagBox["140423702373544", "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    ChristopherWolfram`ForeignFunctionInterface`OpaqueRawPointer[
    140423702373544],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["OpaqueRawPointer",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              GridBox[{{
                 TagBox["\"address: \"", "SummaryItem"]}, {
                 TagBox["140423702373440", "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              GridBox[{{
                 TagBox["\"address: \"", "SummaryItem"]}, {
                 TagBox["140423702373440", "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    ChristopherWolfram`ForeignFunctionInterface`OpaqueRawPointer[
    140423702373440],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Echo",
 CellChangeTimes->{
  3.880509890852468*^9},ExpressionUUID->"a9b92687-4560-472a-b1a6-\
4388503ad882"]
}, Open  ]],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.879846832132374*^9, 3.879846850939502*^9}, {
   3.8805092630515537`*^9, 3.8805092658623247`*^9}, 3.8805098908819733`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"231e000d-5b4b-40fb-9781-824ace68fd5d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CallForeignFunction", "[", 
  RowBox[{"sqliteExecC", ",", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"db", ",", "\[IndentingNewLine]", 
     RowBox[{"CreateManagedExpression", "[", 
      RowBox[{
       RowBox[{
       "StringToBuffer", "[", 
        "\"\<SELECT * FROM customers WHERE creditLimit > 200000;\>\"", "]"}], 
       ",", "DeleteBuffer"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"CreateCallback", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Echo", "[", 
           RowBox[{"{", 
            RowBox[{"#1", ",", "#2", ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"With", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"ptr", "=", 
                   RowBox[{"DereferenceBuffer", "[", 
                    RowBox[{"#3", ",", "\"\<OpaqueRawPointer\>\"", ",", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}], ",", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"ptr", "=!=", 
                    RowBox[{"OpaqueRawPointer", "[", "0", "]"}]}], ",", 
                   RowBox[{"BufferToString", "[", "ptr", "]"}], ",", "Null"}],
                   "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "#2"}], "}"}]}], "]"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"With", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"ptr", "=", 
                   RowBox[{"DereferenceBuffer", "[", 
                    RowBox[{"#4", ",", "\"\<OpaqueRawPointer\>\"", ",", 
                    RowBox[{"i", "-", "1"}]}], "]"}]}], "}"}], ",", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"ptr", "=!=", 
                    RowBox[{"OpaqueRawPointer", "[", "0", "]"}]}], ",", 
                   RowBox[{"BufferToString", "[", "ptr", "]"}], ",", "Null"}],
                   "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "#2"}], "}"}]}], "]"}]}], "}"}], "]"}], ";",
           "0"}], ")"}], "&"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<OpaqueRawPointer\>\"", ",", "\"\<CInt\>\"", ",", 
          "\"\<OpaqueRawPointer\>\"", ",", "\"\<OpaqueRawPointer\>\""}], 
         "}"}], "->", "\"\<CInt\>\""}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"OpaqueRawPointer", "[", "0", "]"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"OpaqueRawPointer", "[", "0", "]"}]}], "\[IndentingNewLine]", 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.879641216659552*^9, 3.879641288477428*^9}, {
   3.879641331438551*^9, 3.8796414454485826`*^9}, {3.879641511362348*^9, 
   3.879641512342121*^9}, {3.879641649006819*^9, 3.879641701940864*^9}, {
   3.879641735656878*^9, 3.87964175524734*^9}, {3.879641807043437*^9, 
   3.87964184895509*^9}, {3.87964206165252*^9, 3.87964206746726*^9}, {
   3.879642455786765*^9, 3.879642457933469*^9}, {3.880509270499633*^9, 
   3.880509284760336*^9}, 3.880509893024022*^9},
 CellLabel->"In[43]:=",ExpressionUUID->"fc1014ee-187f-4c50-81ee-8ccbf4e8df6b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    RowBox[{
     TagBox["OpaqueRawPointer",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              GridBox[{{
                 TagBox["\"address: \"", "SummaryItem"]}, {
                 TagBox["0", "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              GridBox[{{
                 TagBox["\"address: \"", "SummaryItem"]}, {
                 TagBox["0", "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    ChristopherWolfram`ForeignFunctionInterface`OpaqueRawPointer[0],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", "13", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"124\"\>", ",", "\<\"Mini Gifts Distributors Ltd.\"\>", 
     ",", "\<\"Nelson\"\>", ",", "\<\"Susan\"\>", ",", "\<\"4155551450\"\>", 
     ",", "\<\"5677 Strong St.\"\>", ",", "Null", ",", "\<\"San Rafael\"\>", 
     ",", "\<\"CA\"\>", ",", "\<\"97562\"\>", ",", "\<\"USA\"\>", 
     ",", "\<\"1165\"\>", ",", "\<\"210500\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"customerNumber\"\>", ",", "\<\"customerName\"\>", 
     ",", "\<\"contactLastName\"\>", ",", "\<\"contactFirstName\"\>", 
     ",", "\<\"phone\"\>", ",", "\<\"addressLine1\"\>", 
     ",", "\<\"addressLine2\"\>", ",", "\<\"city\"\>", ",", "\<\"state\"\>", 
     ",", "\<\"postalCode\"\>", ",", "\<\"country\"\>", 
     ",", "\<\"salesRepEmployeeNumber\"\>", ",", "\<\"creditLimit\"\>"}], 
    "}"}]}], "}"}]], "Echo",
 CellChangeTimes->{
  3.880509893737483*^9},ExpressionUUID->"d199eb23-3172-42d4-bbba-\
40909a81763a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    RowBox[{
     TagBox["OpaqueRawPointer",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              GridBox[{{
                 TagBox["\"address: \"", "SummaryItem"]}, {
                 TagBox["0", "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              GridBox[{{
                 TagBox["\"address: \"", "SummaryItem"]}, {
                 TagBox["0", "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    ChristopherWolfram`ForeignFunctionInterface`OpaqueRawPointer[0],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", "13", ",", 
   RowBox[{"{", 
    RowBox[{"\<\"141\"\>", ",", "\<\"Euro+ Shopping Channel\"\>", 
     ",", "\<\"Freyre\"\>", ",", "\<\"Diego \"\>", 
     ",", "\<\"(91) 555 94 44\"\>", ",", "\<\"C/ Moralzarzal, 86\"\>", ",", 
     "Null", ",", "\<\"Madrid\"\>", ",", "Null", ",", "\<\"28034\"\>", 
     ",", "\<\"Spain\"\>", ",", "\<\"1370\"\>", ",", "\<\"227600\"\>"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"customerNumber\"\>", ",", "\<\"customerName\"\>", 
     ",", "\<\"contactLastName\"\>", ",", "\<\"contactFirstName\"\>", 
     ",", "\<\"phone\"\>", ",", "\<\"addressLine1\"\>", 
     ",", "\<\"addressLine2\"\>", ",", "\<\"city\"\>", ",", "\<\"state\"\>", 
     ",", "\<\"postalCode\"\>", ",", "\<\"country\"\>", 
     ",", "\<\"salesRepEmployeeNumber\"\>", ",", "\<\"creditLimit\"\>"}], 
    "}"}]}], "}"}]], "Echo",
 CellChangeTimes->{
  3.880509893790386*^9},ExpressionUUID->"07ddd0cd-3b36-44e5-8e99-\
fb32aa297001"]
}, Open  ]],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.87964137498627*^9, {3.879641419368209*^9, 3.8796414500841627`*^9}, 
   3.879641512861768*^9, {3.879641664052483*^9, 3.879641682079775*^9}, {
   3.8796417409827757`*^9, 3.879641744517005*^9}, {3.8796418294566593`*^9, 
   3.8796418497092876`*^9}, 3.879642068934217*^9, {3.8796424563908052`*^9, 
   3.879642458300844*^9}, 3.8798468597843437`*^9, {3.880509285404519*^9, 
   3.880509287636629*^9}, 3.8805098938141108`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"a5815560-2032-4e14-8f0b-6e2388d7a097"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sqlitePrepareC", "=", 
  RowBox[{"CreateForeignFunction", "[", 
   RowBox[{"\"\<sqlite3_prepare\>\"", ",", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
      "\"\<OpaqueRawPointer\>\"", ",", "\[IndentingNewLine]", 
       "\"\<OpaqueRawPointer\>\"", ",", "\[IndentingNewLine]", "\"\<CInt\>\"",
        ",", "\[IndentingNewLine]", "\"\<OpaqueRawPointer\>\"", ",", 
       "\[IndentingNewLine]", "\"\<OpaqueRawPointer\>\""}], 
      "\[IndentingNewLine]", "}"}], "->", "\"\<CInt\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.87872429733038*^9, 3.8787243289321136`*^9}, {
  3.878726150119156*^9, 3.878726156711125*^9}, {3.880509290431128*^9, 
  3.8805092965488462`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"17d88015-d0bf-40bf-bc0e-1743a838bbc6"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TypeProduct", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"], 
       DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "DataStructure[ForeignFunctionObject, $Failed]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8787243243273373`*^9, 3.878724329279785*^9}, 
   3.87872541113325*^9, 3.87872694498481*^9, 3.878729018401115*^9, 
   3.8787411666969557`*^9, 3.8787416560691977`*^9, 3.878744487794696*^9, 
   3.878747540038816*^9, 3.87875178556714*^9, 3.8787520324397182`*^9, 
   3.878753293453302*^9, 3.8787541326108017`*^9, 3.878777436039431*^9, 
   3.878780393151005*^9, 3.879556550895459*^9, 3.8796084413148623`*^9, 
   3.880509296822536*^9, 3.880509895562523*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"b7fda679-1814-4016-9a8b-8458961fded5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sqliteFinalizeC", "=", 
  RowBox[{"CreateForeignFunction", "[", 
   RowBox[{"\"\<sqlite3_finalize\>\"", ",", 
    RowBox[{
     RowBox[{
     "{", "\[IndentingNewLine]", "\"\<OpaqueRawPointer\>\"", 
      "\[IndentingNewLine]", "}"}], "->", "\"\<CInt\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.878725898269553*^9, 3.878725906845842*^9}, {
  3.8787261618557997`*^9, 3.8787261631510878`*^9}, {3.880509299814739*^9, 
  3.880509302290152*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"76cf0346-393e-46c0-bd21-9d1f2af65669"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TypeProduct", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"], 
       DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "DataStructure[ForeignFunctionObject, $Failed]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.878725912251355*^9, 3.878726945432959*^9, 
  3.878729020519352*^9, 3.878741168066543*^9, 3.878741656153269*^9, 
  3.878744487878819*^9, 3.878747541485746*^9, 3.87875178614793*^9, 
  3.878752037655273*^9, 3.8787532934967937`*^9, 3.878754132665964*^9, 
  3.8787774367967052`*^9, 3.8787803941418743`*^9, 3.879556551601843*^9, 
  3.879608442431657*^9, 3.880509302560144*^9, 3.880509896243596*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"64f2f704-5b1c-4432-be8a-4a075898e1e7"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"sqliteFinalize", "[", "statement_", "]"}], ":=", 
  RowBox[{"CallForeignFunction", "[", 
   RowBox[{"sqliteFinalizeC", ",", 
    RowBox[{"{", "statement", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8787259183837357`*^9, 3.8787259460477533`*^9}, 
   3.880509898220187*^9},
 CellLabel->"In[46]:=",ExpressionUUID->"98325666-6cf6-430a-8149-391368797413"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sqlitePrepare", "[", 
   RowBox[{"database_", ",", "query_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"statementArr", ",", "queryC", ",", "errorCode"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"statementArr", "=", 
      RowBox[{"CreateManagedExpression", "[", 
       RowBox[{
        RowBox[{"CreateBuffer", "[", "\"\<OpaqueRawPointer\>\"", "]"}], ",", 
        "DeleteBuffer"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"queryC", "=", 
      RowBox[{"CreateManagedExpression", "[", 
       RowBox[{
        RowBox[{"StringToBuffer", "[", "query", "]"}], ",", "DeleteBuffer"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"errorCode", "=", 
      RowBox[{"CallForeignFunction", "[", 
       RowBox[{"sqlitePrepareC", ",", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
         "database", ",", "\[IndentingNewLine]", "queryC", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"StringLength", "[", "query", "]"}], ",", 
          "\[IndentingNewLine]", "statementArr", ",", "\[IndentingNewLine]", 
          RowBox[{"OpaqueRawPointer", "[", "0", "]"}]}], 
         "\[IndentingNewLine]", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"errorCode", "===", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"CreateManagedExpression", "[", 
        RowBox[{
         RowBox[{"DereferenceBuffer", "[", 
          RowBox[{"statementArr", ",", "\"\<OpaqueRawPointer\>\""}], "]"}], 
         ",", "sqliteFinalize"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Failure", "[", 
        RowBox[{"\"\<FailedCreateStatement\>\"", ",", 
         RowBox[{"<|", 
          RowBox[{
           RowBox[{"\"\<ErrorCode\>\"", "->", "errorCode"}], ",", 
           RowBox[{"\"\<Query\>\"", "->", "query"}]}], "|>"}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8787235096623497`*^9, 3.878723546950807*^9}, {
  3.878723614249161*^9, 3.8787238969084682`*^9}, {3.8787241049321938`*^9, 
  3.878724109956058*^9}, {3.878724288458991*^9, 3.878724289162558*^9}, {
  3.87872433542063*^9, 3.878724345780273*^9}, {3.878725436253014*^9, 
  3.8787255867308197`*^9}, {3.878725631724326*^9, 3.878725659598205*^9}, {
  3.8787257304646673`*^9, 3.878725730744844*^9}, {3.8787257611053743`*^9, 
  3.878725766201399*^9}, {3.878725803475935*^9, 3.8787258191323*^9}, {
  3.878725968529066*^9, 3.878725980225472*^9}, {3.878777443466984*^9, 
  3.87877746337941*^9}, {3.8787803986162863`*^9, 3.878780399272204*^9}, {
  3.8795565591985807`*^9, 3.879556562750557*^9}, {3.8805093064883213`*^9, 
  3.8805093153440437`*^9}, {3.8805099007058372`*^9, 3.880509901612722*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"825a0ead-5663-4f50-a075-4f96f2060ef6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"db", "=", 
  RowBox[{"sqliteOpen", "[", 
   RowBox[{
   "FindFile", "[", "\"\<ExampleData/ecommerce-database.sqlite\>\"", "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.878724447096733*^9, 3.878724448719523*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"4942ab63-3712-4809-a635-f9c765a713cf"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["OpaqueRawPointer",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["140423099084896", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["140423099084896", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ChristopherWolfram`ForeignFunctionInterface`OpaqueRawPointer[
  140423099084896],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.878724448963282*^9, 3.878724456697667*^9}, 
   3.878724651115843*^9, 3.878725352388691*^9, {3.87872538641527*^9, 
   3.8787253987723417`*^9}, 3.878725601947315*^9, 3.878725641260551*^9, 
   3.8787257328571663`*^9, {3.87872580666928*^9, 3.878725811985902*^9}, 
   3.8787269511825323`*^9, 3.878729037065591*^9, 3.878741173098535*^9, 
   3.878741659959763*^9, 3.878744491710022*^9, 3.8787475806284933`*^9, 
   3.8787517916500397`*^9, 3.878752043328167*^9, 3.878753293548974*^9, 
   3.878754132758997*^9, 3.878777466252914*^9, 3.878780401338214*^9, 
   3.879556568120854*^9, 3.879608444771387*^9, 3.8805093183630753`*^9, 
   3.880509903490185*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"84913d62-b7d3-4ac9-9e56-b6737c9f1621"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sqlitePrepare", "[", 
  RowBox[{"db", ",", "\"\<SELECT * FROM blah;\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8787256041080236`*^9, 3.87872561390924*^9}, {
  3.8787258255075417`*^9, 3.8787258315071697`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"85da601e-cbaf-4c92-a1a6-c985575ce44f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Failure",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"ErrorCode\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox["1", HoldForm], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Query\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox["\"SELECT * FROM blah;\"", HoldForm], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox["\"FailedCreateStatement\"", HoldForm], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"ErrorCode\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox["1", HoldForm], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Query\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox["\"SELECT * FROM blah;\"", HoldForm], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox["\"FailedCreateStatement\"", HoldForm], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Failure[
  "FailedCreateStatement", <|
   "ErrorCode" -> 1, "Query" -> "SELECT * FROM blah;"|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.878725617807053*^9, 3.8787256620193033`*^9}, 
   3.878725733512362*^9, {3.8787258074677763`*^9, 3.8787258318684072`*^9}, 
   3.878725982923143*^9, 3.878726951764031*^9, 3.878729038879553*^9, 
   3.878741173554003*^9, 3.878741660029851*^9, 3.878744491770752*^9, 
   3.878747581756262*^9, 3.878751793588777*^9, 3.878752044090309*^9, 
   3.878753293579713*^9, 3.878754132805612*^9, 3.878777467085257*^9, 
   3.878780402045671*^9, 3.8795565691167603`*^9, 3.879608445666133*^9, 
   3.880509319437233*^9, 3.880509904338395*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"c43e13bd-3e82-479c-9e3f-4b0e9df2511f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sqlitePrepare", "[", 
  RowBox[{"db", ",", "\"\<SELECT * FROM customers;\>\""}], "]"}]], "Input",
 CellChangeTimes->{3.878725833491146*^9},
 CellLabel->"In[50]:=",ExpressionUUID->"cd6619c0-3343-47ca-a5e3-47d4c81bb559"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TypeProduct", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ManagedExpression\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ManagedExpression\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"], 
       DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("DataStructure[ManagedExpression, $Failed]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8787258338051577`*^9, {3.878725985142023*^9, 3.878725988125525*^9}, 
   3.878726952305799*^9, 3.878729047112661*^9, 3.878741174305002*^9, 
   3.8787416600981903`*^9, 3.878744491818132*^9, 3.878747582829919*^9, 
   3.878751794431698*^9, 3.878752044916148*^9, 3.878753293650732*^9, 
   3.878754132855592*^9, 3.878777467920204*^9, 3.8787804028305883`*^9, 
   3.8795565707696238`*^9, 3.8796084463337183`*^9, 3.8805093203275414`*^9, 
   3.880509905926118*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"a8f69cbe-09ba-4600-90cd-1dc31e8199d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sqliteStepC", "=", 
  RowBox[{"CreateForeignFunction", "[", 
   RowBox[{"\"\<sqlite3_step\>\"", ",", 
    RowBox[{
     RowBox[{
     "{", "\[IndentingNewLine]", "\"\<OpaqueRawPointer\>\"", 
      "\[IndentingNewLine]", "}"}], "->", "\"\<CInt\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.87872429733038*^9, 3.8787243289321136`*^9}, {
  3.8787258691488647`*^9, 3.878725874884891*^9}, {3.878726169896111*^9, 
  3.878726171343873*^9}, {3.880509323687705*^9, 3.8805093263968897`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"188b5938-2ca8-4b49-8f7b-e7985ab53ae1"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TypeProduct", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"], 
       DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "DataStructure[ForeignFunctionObject, $Failed]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.878725888796122*^9, 3.8787269536769543`*^9, 
  3.878729050825716*^9, 3.878741176157773*^9, 3.8787416601815023`*^9, 
  3.878744491862259*^9, 3.878747584333434*^9, 3.8787517958644648`*^9, 
  3.878752046387594*^9, 3.878753293698303*^9, 3.878754132910668*^9, 
  3.878777469304714*^9, 3.8787804037468557`*^9, 3.879556571777322*^9, 
  3.879608446904934*^9, 3.8805093266796083`*^9, 3.8805099066083803`*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"ff26175a-0b4e-4d9d-8556-ac9d64c1f999"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"sqliteStep", "[", "statement_", "]"}], ":=", 
  RowBox[{"CallForeignFunction", "[", 
   RowBox[{"sqliteStepC", ",", 
    RowBox[{"{", "statement", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.878726005771246*^9, 3.8787260280345917`*^9}, 
   3.879556575494235*^9},
 CellLabel->"In[52]:=",ExpressionUUID->"bc39e143-f5dd-48f4-a135-b2da64a0423b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"statement", ",", "n"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"statement", "=", 
     RowBox[{"sqlitePrepare", "[", 
      RowBox[{"db", ",", "\"\<SELECT * FROM customers;\>\""}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"n", "=", "0"}], ";", "\[IndentingNewLine]", 
    RowBox[{"While", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"sqliteStep", "[", "statement", "]"}], "===", "100"}], ",", 
      RowBox[{"n", "++"}]}], "]"}], ";", "\[IndentingNewLine]", "n"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.878726029939157*^9, 3.878726085692665*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"3f4c7504-3eff-4730-806c-a12df326f533"],

Cell[BoxData["122"], "Output",
 CellChangeTimes->{
  3.878726045759199*^9, {3.878726086453545*^9, 3.878726087810615*^9}, 
   3.878726956604533*^9, 3.878729058715735*^9, 3.8787411778772907`*^9, 
   3.878741660261045*^9, 3.878744491921241*^9, 3.878747586439426*^9, 
   3.878751797646275*^9, 3.878752053207114*^9, 3.878753293744525*^9, 
   3.878754132978978*^9, 3.87877747038479*^9, 3.878780405722453*^9, 
   3.879556577715252*^9, 3.8805093291311617`*^9, 3.880509909373743*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"2b434b27-9078-435d-8357-0e984f80a45b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sqliteColumnCountC", "=", 
  RowBox[{"CreateForeignFunction", "[", 
   RowBox[{"\"\<sqlite3_column_count\>\"", ",", 
    RowBox[{
     RowBox[{
     "{", "\[IndentingNewLine]", "\"\<OpaqueRawPointer\>\"", 
      "\[IndentingNewLine]", "}"}], "->", "\"\<CInt\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8787262109299107`*^9, 3.8787262407304907`*^9}, {
  3.8805093321546307`*^9, 3.880509334679556*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"10c0e08f-2a96-47d6-80f1-ca1fea67359b"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TypeProduct", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"], 
       DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "DataStructure[ForeignFunctionObject, $Failed]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.878726241003808*^9, 3.878726957343799*^9, 
  3.878729064668561*^9, 3.878741178370596*^9, 3.878741660311227*^9, 
  3.8787444919639997`*^9, 3.878747587432029*^9, 3.878751798987245*^9, 
  3.8787520540236263`*^9, 3.878753293776782*^9, 3.878754133031621*^9, 
  3.878777471963831*^9, 3.878780406968129*^9, 3.879556579399323*^9, 
  3.880509334963135*^9, 3.880509914573449*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"021d3bb7-982b-4afa-b419-93d6cd68fa7f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"sqliteColumnCount", "[", "statement_", "]"}], ":=", 
  RowBox[{"CallForeignFunction", "[", 
   RowBox[{"sqliteColumnCountC", ",", 
    RowBox[{"{", "statement", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.878726187034272*^9, 3.87872620332908*^9}, {
   3.878726242474098*^9, 3.878726251067219*^9}, 3.87955658177428*^9},
 CellLabel->"In[55]:=",ExpressionUUID->"d2661487-504d-4a5a-815f-cb90b0b9e079"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sqliteColumnCount", "[", 
  RowBox[{"sqlitePrepare", "[", 
   RowBox[{"db", ",", "\"\<SELECT * FROM customers;\>\""}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.878726252052*^9, 3.878726258571433*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"56005263-6780-4975-b210-a9db14cbddd9"],

Cell[BoxData["13"], "Output",
 CellChangeTimes->{{3.878726259118384*^9, 3.878726261814908*^9}, 
   3.878726959013651*^9, 3.878729069504046*^9, 3.878741180580311*^9, 
   3.87874166037913*^9, 3.878744492021577*^9, 3.8787475891976624`*^9, 
   3.8787518000364237`*^9, 3.87875205641586*^9, 3.878753293822394*^9, 
   3.87875413310185*^9, 3.878777473067934*^9, 3.8787804085849*^9, 
   3.879556583980568*^9, 3.880509337264571*^9, 3.880509916615365*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"6f4d2459-103a-4419-8716-42107012459c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sqliteColumnNameC", "=", 
  RowBox[{"CreateForeignFunction", "[", 
   RowBox[{"\"\<sqlite3_column_name\>\"", ",", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
      "\"\<OpaqueRawPointer\>\"", ",", "\[IndentingNewLine]", 
       "\"\<CInt\>\""}], "\[IndentingNewLine]", "}"}], "->", 
     "\"\<OpaqueRawPointer\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8787262109299107`*^9, 3.8787262407304907`*^9}, {
  3.8787262798282213`*^9, 3.878726297284232*^9}, {3.880509339924087*^9, 
  3.880509344263405*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"f7bac357-39d0-4a6e-bebd-ff29fca92235"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TypeProduct", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"], 
       DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "DataStructure[ForeignFunctionObject, $Failed]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.878726299130666*^9, 3.8787269602902813`*^9, 
  3.878729070935377*^9, 3.878741181044827*^9, 3.878741660428981*^9, 
  3.87874449206637*^9, 3.878747590222906*^9, 3.878751801283308*^9, 
  3.878752056864032*^9, 3.878753293854615*^9, 3.878754133144492*^9, 
  3.878777473729023*^9, 3.878780409327898*^9, 3.879556585040018*^9, 
  3.8805093444930887`*^9, 3.88050991725834*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"d565cfc8-8d00-4299-9f09-db1d8173f52e"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sqliteColumnName", "[", 
   RowBox[{"statement_", ",", "index_"}], "]"}], ":=", "\[IndentingNewLine]", 
  
  RowBox[{"BufferToString", "@", 
   RowBox[{"CallForeignFunction", "[", 
    RowBox[{"sqliteColumnNameC", ",", 
     RowBox[{"{", 
      RowBox[{"statement", ",", "index"}], "}"}]}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"sqliteColumnName", "[", "statement_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"sqliteColumnName", "[", 
     RowBox[{"statement", ",", 
      RowBox[{"#", "-", "1"}]}], "]"}], "&"}], "/@", 
   RowBox[{"Range", "[", 
    RowBox[{"sqliteColumnCount", "[", "statement", "]"}], "]"}]}]}]}], "Input",\

 CellChangeTimes->{{3.878726187034272*^9, 3.87872620332908*^9}, {
   3.878726242474098*^9, 3.878726251067219*^9}, {3.8787263024687*^9, 
   3.878726379415827*^9}, {3.878726963773551*^9, 3.878726976493516*^9}, 
   3.8787305125859623`*^9, {3.878780413392187*^9, 3.8787804145599747`*^9}, 
   3.879556588311017*^9},
 CellLabel->"In[58]:=",ExpressionUUID->"431705ef-57fb-4afe-8586-4d231b6ad035"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sqliteColumnTypeC", "=", 
  RowBox[{"CreateForeignFunction", "[", 
   RowBox[{"\"\<sqlite3_column_type\>\"", ",", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
      "\"\<OpaqueRawPointer\>\"", ",", "\[IndentingNewLine]", 
       "\"\<CInt\>\""}], "\[IndentingNewLine]", "}"}], "->", 
     "\"\<CInt\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8787262109299107`*^9, 3.8787262407304907`*^9}, {
  3.8787262798282213`*^9, 3.878726297284232*^9}, {3.878730492551899*^9, 
  3.878730501790666*^9}, {3.878732208076178*^9, 3.878732210231242*^9}, {
  3.880509413198226*^9, 3.880509416532649*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"ae68a6d5-a489-40fb-a125-fb1fc6907076"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TypeProduct", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"], 
       DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "DataStructure[ForeignFunctionObject, $Failed]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.878730502499879*^9, {3.878732208355103*^9, 3.8787322108206453`*^9}, 
   3.878741184597053*^9, 3.878741660651621*^9, 3.87874449221343*^9, 
   3.878753294005251*^9, 3.8787541332213793`*^9, 3.878777475778817*^9, 
   3.8787804162122707`*^9, 3.879556593811311*^9, 3.88050941675694*^9, 
   3.880509919691868*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"8a1178f4-b3bf-4bb8-8de1-390267d10733"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sqliteColumnType", "[", 
   RowBox[{"statement_", ",", "index_"}], "]"}], ":=", "\[IndentingNewLine]", 
  
  RowBox[{"CallForeignFunction", "[", 
   RowBox[{"sqliteColumnTypeC", ",", 
    RowBox[{"{", 
     RowBox[{"statement", ",", "index"}], "}"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"sqliteColumnType", "[", "statement_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"sqliteColumnType", "[", 
     RowBox[{"statement", ",", 
      RowBox[{"#", "-", "1"}]}], "]"}], "&"}], "/@", 
   RowBox[{"Range", "[", 
    RowBox[{"sqliteColumnCount", "[", "statement", "]"}], "]"}]}]}]}], "Input",\

 CellChangeTimes->{{3.878726187034272*^9, 3.87872620332908*^9}, {
  3.878726242474098*^9, 3.878726251067219*^9}, {3.8787263024687*^9, 
  3.878726379415827*^9}, {3.878726963773551*^9, 3.878726976493516*^9}, {
  3.878730516519608*^9, 3.878730533602624*^9}, {3.879556596247102*^9, 
  3.879556597799204*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"33cd2016-ad2a-478a-aa29-f748542c8dae"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sqliteGetColumnDoubleC", "=", 
   RowBox[{"CreateForeignFunction", "[", 
    RowBox[{"\"\<sqlite3_column_double\>\"", ",", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
       "\"\<OpaqueRawPointer\>\"", ",", "\[IndentingNewLine]", 
        "\"\<CInt\>\""}], "\[IndentingNewLine]", "}"}], "->", 
      "\"\<CDouble\>\""}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sqliteGetColumnIntC", "=", 
   RowBox[{"CreateForeignFunction", "[", 
    RowBox[{"\"\<sqlite3_column_int64\>\"", ",", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
       "\"\<OpaqueRawPointer\>\"", ",", "\[IndentingNewLine]", 
        "\"\<CInt\>\""}], "\[IndentingNewLine]", "}"}], "->", 
      "\"\<Integer64\>\""}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sqliteGetColumnTextC", "=", 
   RowBox[{"CreateForeignFunction", "[", 
    RowBox[{"\"\<sqlite3_column_text\>\"", ",", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
       "\"\<OpaqueRawPointer\>\"", ",", "\[IndentingNewLine]", 
        "\"\<CInt\>\""}], "\[IndentingNewLine]", "}"}], "->", 
      "\"\<OpaqueRawPointer\>\""}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.878730578058999*^9, 3.8787306533485126`*^9}, {
  3.880509420777644*^9, 3.880509439445043*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"314b6928-9b6b-4a79-8d15-93c81cf0f2be"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sqliteColumnValue", "[", 
   RowBox[{"statement_", ",", "index_", ",", "type_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Switch", "[", 
   RowBox[{"type", ",", "\[IndentingNewLine]", "1", ",", 
    RowBox[{"CallForeignFunction", "[", 
     RowBox[{"sqliteGetColumnIntC", ",", 
      RowBox[{"{", 
       RowBox[{"statement", ",", "index"}], "}"}]}], "]"}], ",", 
    "\[IndentingNewLine]", "2", ",", 
    RowBox[{"CallForeignFunction", "[", 
     RowBox[{"sqliteGetColumnDoubleC", ",", 
      RowBox[{"{", 
       RowBox[{"statement", ",", "index"}], "}"}]}], "]"}], ",", 
    "\[IndentingNewLine]", "3", ",", 
    RowBox[{"BufferToString", "@", 
     RowBox[{"CallForeignFunction", "[", 
      RowBox[{"sqliteGetColumnTextC", ",", 
       RowBox[{"{", 
        RowBox[{"statement", ",", "index"}], "}"}]}], "]"}]}], ",", 
    "\[IndentingNewLine]", "5", ",", 
    RowBox[{"Missing", "[", "\"\<NullValue\>\"", "]"}], ",", 
    "\[IndentingNewLine]", "_", ",", 
    RowBox[{"Missing", "[", "\"\<UnsupportedType\>\"", "]"}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sqliteColumnValue", "[", 
   RowBox[{"statement_", ",", "index_"}], "]"}], ":=", "\[IndentingNewLine]", 
  
  RowBox[{"sqliteColumnValue", "[", 
   RowBox[{"statement", ",", "index", ",", 
    RowBox[{"sqliteColumnType", "[", 
     RowBox[{"statement", ",", "index"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sqliteColumnValue", "[", "statement_", "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"sqliteColumnValue", "[", 
     RowBox[{"statement", ",", 
      RowBox[{"#", "-", "1"}]}], "]"}], "&"}], "/@", 
   RowBox[{"Range", "[", 
    RowBox[{"sqliteColumnCount", "[", "statement", "]"}], "]"}]}]}]}], "Input",\

 CellChangeTimes->{{3.878730706222344*^9, 3.878730882277*^9}, {
  3.878732710906047*^9, 3.878732720977981*^9}, {3.878735819207983*^9, 
  3.8787358192794323`*^9}, {3.8787804220653477`*^9, 3.87878042280905*^9}, {
  3.879556603376231*^9, 3.879556606527871*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"5f8fbf24-1f7e-4fd7-b801-abea87cd60b7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sqliteQuery", "[", 
   RowBox[{"db_", ",", "query_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"statement", ",", "columnNames", ",", "tag", ",", "res"}], "}"}],
     ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"statement", "=", 
      RowBox[{"sqlitePrepare", "[", 
       RowBox[{"db", ",", "query"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"columnNames", "=", 
      RowBox[{"sqliteColumnName", "[", "statement", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"res", "=", 
      RowBox[{"Reap", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"sqliteStep", "[", "statement", "]"}], "===", "100"}], ",",
           "\[IndentingNewLine]", 
          RowBox[{"Sow", "[", 
           RowBox[{
            RowBox[{"AssociationThread", "[", 
             RowBox[{"columnNames", ",", 
              RowBox[{"sqliteColumnValue", "[", "statement", "]"}]}], "]"}], 
            ",", "tag"}], "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
        "\[IndentingNewLine]", "tag"}], "\[IndentingNewLine]", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"First", "@", 
      RowBox[{"Replace", "[", 
       RowBox[{
        RowBox[{"res", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"{", "}"}], "->", 
         RowBox[{"{", 
          RowBox[{"{", "}"}], "}"}]}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.878730534616651*^9, 3.8787305424889793`*^9}, {
  3.8787322240003233`*^9, 3.8787322376951027`*^9}, {3.878732667600132*^9, 
  3.878732696192134*^9}, {3.8787327438286133`*^9, 3.878732864255022*^9}, {
  3.878732911778027*^9, 3.8787329760756607`*^9}, {3.878733224621714*^9, 
  3.8787332403184423`*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"b7f39feb-7e9b-42e2-aff7-f52da1c61fc6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RepeatedTiming", "@", 
  RowBox[{"sqliteQuery", "[", 
   RowBox[{
   "db", ",", "\"\<SELECT * FROM customers WHERE creditLimit > 200000;\>\""}],
    "]"}]}]], "Input",
 CellChangeTimes->{{3.878732977756353*^9, 3.878732999788457*^9}, {
  3.878733227775041*^9, 3.878733243094204*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"43497f8c-580c-4bc4-9cac-a6110eee566a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.0002813212890625`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\<\"customerNumber\"\>", "\[Rule]", "124"}], ",", 
       RowBox[{"\<\"customerName\"\>", 
        "\[Rule]", "\<\"Mini Gifts Distributors Ltd.\"\>"}], ",", 
       RowBox[{"\<\"contactLastName\"\>", "\[Rule]", "\<\"Nelson\"\>"}], ",", 
       
       RowBox[{"\<\"contactFirstName\"\>", "\[Rule]", "\<\"Susan\"\>"}], ",", 
       
       RowBox[{"\<\"phone\"\>", "\[Rule]", "\<\"4155551450\"\>"}], ",", 
       RowBox[{"\<\"addressLine1\"\>", "\[Rule]", "\<\"5677 Strong St.\"\>"}],
        ",", 
       RowBox[{"\<\"addressLine2\"\>", "\[Rule]", 
        RowBox[{"Missing", "[", "\<\"NullValue\"\>", "]"}]}], ",", 
       RowBox[{"\<\"city\"\>", "\[Rule]", "\<\"San Rafael\"\>"}], ",", 
       RowBox[{"\<\"state\"\>", "\[Rule]", "\<\"CA\"\>"}], ",", 
       RowBox[{"\<\"postalCode\"\>", "\[Rule]", "\<\"97562\"\>"}], ",", 
       RowBox[{"\<\"country\"\>", "\[Rule]", "\<\"USA\"\>"}], ",", 
       RowBox[{"\<\"salesRepEmployeeNumber\"\>", "\[Rule]", "1165"}], ",", 
       RowBox[{"\<\"creditLimit\"\>", "\[Rule]", "210500"}]}], 
      "\[RightAssociation]"}], ",", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\<\"customerNumber\"\>", "\[Rule]", "141"}], ",", 
       RowBox[{"\<\"customerName\"\>", 
        "\[Rule]", "\<\"Euro+ Shopping Channel\"\>"}], ",", 
       RowBox[{"\<\"contactLastName\"\>", "\[Rule]", "\<\"Freyre\"\>"}], ",", 
       
       RowBox[{"\<\"contactFirstName\"\>", "\[Rule]", "\<\"Diego \"\>"}], ",", 
       RowBox[{"\<\"phone\"\>", "\[Rule]", "\<\"(91) 555 94 44\"\>"}], ",", 
       RowBox[{"\<\"addressLine1\"\>", 
        "\[Rule]", "\<\"C/ Moralzarzal, 86\"\>"}], ",", 
       RowBox[{"\<\"addressLine2\"\>", "\[Rule]", 
        RowBox[{"Missing", "[", "\<\"NullValue\"\>", "]"}]}], ",", 
       RowBox[{"\<\"city\"\>", "\[Rule]", "\<\"Madrid\"\>"}], ",", 
       RowBox[{"\<\"state\"\>", "\[Rule]", 
        RowBox[{"Missing", "[", "\<\"NullValue\"\>", "]"}]}], ",", 
       RowBox[{"\<\"postalCode\"\>", "\[Rule]", "\<\"28034\"\>"}], ",", 
       RowBox[{"\<\"country\"\>", "\[Rule]", "\<\"Spain\"\>"}], ",", 
       RowBox[{"\<\"salesRepEmployeeNumber\"\>", "\[Rule]", "1370"}], ",", 
       RowBox[{"\<\"creditLimit\"\>", "\[Rule]", "227600"}]}], 
      "\[RightAssociation]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.878732995972864*^9, 3.878733001949975*^9}, 
   3.878733121633977*^9, 3.878733245177553*^9, 3.878735827548888*^9, 
   3.8787411918526897`*^9, {3.878741662562167*^9, 3.878741669649106*^9}, 
   3.8787444942396183`*^9, {3.8787532959273043`*^9, 3.8787533066425343`*^9}, 
   3.878754135169479*^9, 3.87877748512988*^9, {3.878780429542933*^9, 
   3.878780447841654*^9}, 3.879556614779331*^9, 3.88050944943512*^9, 
   3.880509940378636*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"954c1332-09be-4b50-9274-5cdcc58c8135"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RepeatedTiming", "[", 
  RowBox[{
   RowBox[{"sqliteQuery", "[", 
    RowBox[{"db", ",", "\"\<SELECT * FROM customers;\>\""}], "]"}], ";"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.878733145442239*^9, 3.878733149233244*^9}, 
   3.8787332491594963`*^9},
 CellLabel->"In[76]:=",ExpressionUUID->"053efb08-b3a1-4269-8882-c292d56a1931"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.0079569375`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{
  3.878733150534913*^9, 3.878733251517085*^9, {3.878735834837178*^9, 
   3.878735846369729*^9}, 3.878741663730938*^9, 3.878744495429181*^9, 
   3.878753297083837*^9, 3.878754136350828*^9, 3.8787804489578457`*^9, 
   3.879556619617455*^9, 3.880509452122504*^9, 3.88050995068813*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"f91885c5-0c9f-4f7f-a486-307def302d0e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simplified error", "Subsection",
 CellChangeTimes->{{3.87865885949402*^9, 
  3.8786588611659727`*^9}},ExpressionUUID->"41ea61a3-054e-4610-aaad-\
7ad03d1debf0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cf", " ", "=", " ", 
  RowBox[{"FunctionCompile", "[", "\n", "\t", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "\t\t", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "array", "}"}], ",", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"array", " ", "=", " ", 
         RowBox[{"Native`StackArray", "[", "3", "]"}]}], ";", "\n", "\t\t\t", 
        
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"ToRawPointer", "[", 
           RowBox[{"array", ",", 
            RowBox[{"i", "-", "1"}], ",", 
            RowBox[{"ToRawPointer", "[", "i", "]"}]}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", "3"}], "}"}]}], "]"}], ";", "\n", "\t\t\t", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"FromRawPointer", "@", 
           RowBox[{"FromRawPointer", "[", 
            RowBox[{"array", ",", 
             RowBox[{"i", "-", "1"}]}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "3"}], "}"}]}], "]"}]}]}], "\n", "\t\t", "]"}]}],
     "\n", "\t", "]"}], "\n", "]"}]}]], "Code",
 CellChangeTimes->{{3.878658863086062*^9, 3.878658945250408*^9}, {
  3.878659021068959*^9, 3.8786590592462273`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"780b3482-a4ad-4c30-b4d7-aa6c36e9c136"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledCodeFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GraphicsBox[
             InsetBox[
              FormBox[
               StyleBox["\"Code\"", 
                GrayLevel[0.7], Bold, 7.62890625, StripOnInput -> False], 
               TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], Axes -> 
             False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {27., {0., 10.}}], Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Signature: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", "}"}], "\[Rule]", 
                    RowBox[{"\"PackedArray\"", "::[", 
                    RowBox[{"\"Integer64\"", ",", "1"}], "]"}]}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GraphicsBox[
             InsetBox[
              FormBox[
               StyleBox["\"Code\"", 
                GrayLevel[0.7], Bold, 7.62890625, StripOnInput -> False], 
               TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], Axes -> 
             False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {27., {0., 10.}}], Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Signature: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", "}"}], "\[Rule]", 
                    RowBox[{"\"PackedArray\"", "::[", 
                    RowBox[{"\"Integer64\"", ",", "1"}], "]"}]}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledCodeFunction[<|
   "Signature" -> TypeSpecifier[{} -> "PackedArray"["Integer64", 
        LiteralType[1, "Integer64"]]], "Input" -> Compile`Program[{}, 
      Function[{}, 
       Module[{$CellContext`array}, $CellContext`array = Native`StackArray[3]; 
        Do[
          ToRawPointer[$CellContext`array, $CellContext`i - 1, 
           ToRawPointer[$CellContext`i]], {$CellContext`i, 3}]; Table[
          FromRawPointer[
           
           FromRawPointer[$CellContext`array, $CellContext`i - 
            1]], {$CellContext`i, 3}]]]], "ErrorFunction" -> Automatic, 
    "InitializationName" -> 
    "Initialization_e397949c_fc9f_45fa_ae39_03ea4cd94691", "ExpressionName" -> 
    "Main_ExprInvocation", "CName" -> "Main_CInvocation", "FunctionName" -> 
    "Main", "SystemID" -> "Linux-x86-64", "VersionData" -> {13.2, 0, 0}, 
    "CompiledIR" -> <|"Linux-x86-64" -> ByteArray[CompressedData["
1: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
        "]]|>, "orcInstance" -> 54514080, "orcModuleId" -> 54483136, 
    "targetMachineId" -> 48936320|>, 140438058156608, 140438058156432, 
   140438058156544, 140438058156032, 
   "{} -> \"PackedArray\"[\"Integer64\", LiteralType[1, \"Integer64\"]]"],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.878658947736842*^9, 3.8786590224005623`*^9, 
  3.878659061789143*^9, 3.878726596904175*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"031e42ba-625c-487b-93a0-23d5036eaaaf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cf", "[", "]"}]], "Input",
 CellChangeTimes->{{3.878658947523096*^9, 3.878658947713564*^9}, {
  3.8786590635737743`*^9, 3.8786590636054688`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"5a8fdd1f-30d5-45c3-94f5-c21f5749e288"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "3", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.878659063838472*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"f67dbf6d-e7c1-42ec-b41e-283da2513396"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Diagnosis", "Subsubsection",
 CellChangeTimes->{{3.878659348743752*^9, 
  3.8786593527439632`*^9}},ExpressionUUID->"ca33c122-9b32-4c32-abac-\
bd18744e2f51"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Compile`CompileToIR", "[", "\n", "\t", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "\t\t", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "array", "}"}], ",", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"array", " ", "=", " ", 
         RowBox[{"Native`AllocateArray", "[", "3", "]"}]}], ";", "\n", 
        "\t\t\t", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"ToRawPointer", "[", 
           RowBox[{"array", ",", 
            RowBox[{"i", "-", "1"}], ",", 
            RowBox[{"ToRawPointer", "[", "i", "]"}]}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"i", ",", "3"}], "}"}]}], "]"}], ";"}]}], "\n", "\t\t", 
      "]"}]}], "\n", "\t", "]"}], "\n", "]"}], "[", "\"\<toString\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.878659355537333*^9, 3.878659364264771*^9}, {
  3.878659727656857*^9, 3.878659743222836*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"6f66879e-6d27-45d2-8f3a-50cabdd261e2"],

Cell[BoxData["\<\"\\!\\(\\*StyleBox[\\\"Main\\\", FontColor -> \
RGBColor[0.269, 0.538, 0.356], FontWeight -> Bold, FontVariations -> \
{}]\\)\\!\\(\\*StyleBox[\\\"::Information=\\\", FontColor -> GrayLevel[0.4], \
FontWeight -> Plain, FontVariations -> \
{}]\\){\\\"unmangledName\\\"->\\!\\(\\*RowBox[{\\\"Automatic\\\"}]\\), \
\\\"inlineInformation\\\"->{<|\\\"inlineValue\\\" -> Automatic, \\\"isTrivial\
\\\" -> False|>}, \\\"ArgumentAlias\\\"->\\!\\(\\*RowBox[{\\\"False\\\"}]\\), \
\\\"Profile\\\"->\\!\\(\\*RowBox[{\\\"False\\\"}]\\), \\\"AbortHandling\\\"->\
\\!\\(\\*RowBox[{\\\"Automatic\\\"}]\\), \
\\\"Exported\\\"->\\!\\(\\*RowBox[{\\\"True\\\"}]\\)}\\n\\!\\(\\*StyleBox[\\\"\
Main\\\", FontColor -> RGBColor[0.269, 0.538, 0.356], FontWeight -> Bold, \
FontVariations -> {}]\\) : \\!\\(\\*StyleBox[\\\"()\[Rule]Null\\\", FontColor \
-> RGBColor[0.66, 0, 0], FontWeight -> Bold, FontVariations -> \
{}]\\)\\n\\!\\(\\*StyleBox[\\\"start(1)\\\", FontColor -> RGBColor[0.9, 0.5, \
0.2], FontWeight -> Plain, FontVariations -> {}]\\):  \\n\\!\\(\\*StyleBox[\\\
\"2\\\", FontColor -> GrayLevel[0.8], FontWeight -> Plain, FontVariations -> \
{}]\\)\\!\\(\\*StyleBox[\\\" |\\\", FontColor -> GrayLevel[0.9], FontWeight \
-> Plain, FontVariations -> {}]\\)\\t\\!\\(\\*StyleBox[\\\"%146\\\", \
FontColor -> RGBColor[0.269, 0.538, 0.356], FontWeight -> Bold, \
FontVariations -> {}]\\):\\!\\(\\*StyleBox[\\\"Ptr[I64]\\\", FontColor -> \
RGBColor[0.66, 0, 0], FontWeight -> Bold, FontVariations -> {}]\\) = \
\\!\\(\\*StyleBox[\\\"StackAllocate\\\", FontColor -> RGBColor[0.6, 0.4, \
0.4], FontWeight -> Bold, FontVariations -> {\\\"Underline\\\" -> True}]\\) \
\\!\\(\\*StyleBox[\\\"1\\\", FontColor -> GrayLevel[0.4], FontWeight -> \
Plain, FontVariations -> {}]\\):\\!\\(\\*StyleBox[\\\"I64\\\", FontColor -> \
RGBColor[0.66, 0, 0], FontWeight -> Bold, FontVariations -> {}]\\) \
\\n\\!\\(\\*StyleBox[\\\"3\\\", FontColor -> GrayLevel[0.8], FontWeight -> \
Plain, FontVariations -> {}]\\)\\!\\(\\*StyleBox[\\\" |\\\", FontColor -> \
GrayLevel[0.9], FontWeight -> Plain, FontVariations -> \
{}]\\)\\t\\!\\(\\*StyleBox[\\\"%6\\\", FontColor -> RGBColor[0.269, 0.538, \
0.356], FontWeight -> Bold, FontVariations -> \
{}]\\):\\!\\(\\*StyleBox[\\\"C[Ptr[I64]]\\\", FontColor -> RGBColor[0.66, 0, \
0], FontWeight -> Bold, FontVariations -> {}]\\) = \\!\\(\\*StyleBox[\\\"Call\
\\\", FontColor -> RGBColor[0.6, 0.4, 0.4], FontWeight -> Bold, \
FontVariations -> {\\\"Underline\\\" -> True}]\\) \
\\!\\(\\*TooltipBox[TemplateBox[{\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"Native`\
AllocateArray\\\\\\\", FontColor -> RGBColor[0.269, 0.538, 0.356], FontWeight \
-> Bold, FontVariations -> {}]\\\\)\\\", ContentPadding -> False, Background \
-> GrayLevel[0.98], FrameStyle -> {GrayLevel[0.4], Directive[Dashing[{Small, \
Small}]]}}, \\\"Highlighted\\\"], \
\\\"\\\\\\\"_Native__AllocateArray_F__Integer64_CArray_RawPointer_Integer64\\\
\\\\\"\\\"]\\):\\!\\(\\*StyleBox[\\\"(I64)\[Rule]C[Ptr[I64]]\\\", FontColor \
-> RGBColor[0.66, 0, 0], FontWeight -> Bold, FontVariations -> {}]\\) [\\!\\(\
\\*StyleBox[\\\"3\\\", FontColor -> GrayLevel[0.4], FontWeight -> Plain, \
FontVariations -> {}]\\):\\!\\(\\*StyleBox[\\\"I64\\\", FontColor -> \
RGBColor[0.66, 0, 0], FontWeight -> Bold, FontVariations -> {}]\\)] \\n\\!\\(\
\\*StyleBox[\\\"4\\\", FontColor -> GrayLevel[0.8], FontWeight -> Plain, \
FontVariations -> {}]\\)\\!\\(\\*StyleBox[\\\" |\\\", FontColor -> \
GrayLevel[0.9], FontWeight -> Plain, FontVariations -> \
{}]\\)\\t\\!\\(\\*StyleBox[\\\"%91\\\", FontColor -> RGBColor[0.269, 0.538, \
0.356], FontWeight -> Bold, FontVariations -> \
{}]\\):\\!\\(\\*StyleBox[\\\"NumberIterator[I64]\\\", FontColor -> \
RGBColor[0.66, 0, 0], FontWeight -> Bold, FontVariations -> {}]\\) = \
\\!\\(\\*StyleBox[\\\"Call\\\", FontColor -> RGBColor[0.6, 0.4, 0.4], \
FontWeight -> Bold, FontVariations -> {\\\"Underline\\\" -> True}]\\) \
\\!\\(\\*TemplateBox[{TagBox[TooltipBox[StyleBox[\\\"\\\\\\\"InsertValue\\\\\\\
\"\\\",\\n\\t\\tFontColor -> GrayLevel[0.4], FontWeight -> \
Bold,\\n\\t\\tStripOnInput -> False], \
\\\"Native`PrimitiveFunction[\\\\\\\"LLVM`InsertValue\\\\\\\"]\\\",\\n\\t\\\
tLabelStyle -> \\\"TextStyling\\\"], Annotation[#, \
\\\"Native`PrimitiveFunction[\\\\\\\"LLVM`InsertValue\\\\\\\"]\\\", \
\\\"Tooltip\\\"]& ],\\n\\t\\tFrameStyle -> None, Background -> \
GrayLevel[0.94], ContentPadding -> \
False},\\\"Highlighted\\\"]\\):\\!\\(\\*StyleBox[\\\"(NumberIterator[I64],I64,\
I64)\[Rule]NumberIterator[I64]\\\", FontColor -> RGBColor[0.66, 0, 0], \
FontWeight -> Bold, FontVariations -> {}]\\) \
[\\!\\(\\*StyleBox[\\\"Compile`UndefinedValue\\\", FontColor -> \
GrayLevel[0.4], FontWeight -> Plain, FontVariations -> \
{}]\\):\\!\\(\\*StyleBox[\\\"NumberIterator[I64]\\\", FontColor -> \
RGBColor[0.66, 0, 0], FontWeight -> Bold, FontVariations -> {}]\\), \
\\!\\(\\*StyleBox[\\\"1\\\", FontColor -> GrayLevel[0.4], FontWeight -> \
Plain, FontVariations -> {}]\\):\\!\\(\\*StyleBox[\\\"I64\\\", FontColor -> \
RGBColor[0.66, 0, 0], FontWeight -> Bold, FontVariations -> {}]\\), \
\\!\\(\\*StyleBox[\\\"0\\\", FontColor -> GrayLevel[0.4], FontWeight -> \
Plain, FontVariations -> {}]\\):\\!\\(\\*StyleBox[\\\"I64\\\", FontColor -> \
RGBColor[0.66, 0, 0], FontWeight -> Bold, FontVariations -> {}]\\)] \\n\\!\\(\
\\*StyleBox[\\\"5\\\", FontColor -> GrayLevel[0.8], FontWeight -> Plain, \
FontVariations -> {}]\\)\\!\\(\\*StyleBox[\\\" |\\\", FontColor -> \
GrayLevel[0.9], FontWeight -> Plain, FontVariations -> \
{}]\\)\\t\\!\\(\\*StyleBox[\\\"%96\\\", FontColor -> RGBColor[0.269, 0.538, \
0.356], FontWeight -> Bold, FontVariations -> \
{}]\\):\\!\\(\\*StyleBox[\\\"NumberIterator[I64]\\\", FontColor -> \
RGBColor[0.66, 0, 0], FontWeight -> Bold, FontVariations -> {}]\\) = \
\\!\\(\\*StyleBox[\\\"Call\\\", FontColor -> RGBColor[0.6, 0.4, 0.4], \
FontWeight -> Bold, FontVariations -> {\\\"Underline\\\" -> True}]\\) \
\\!\\(\\*TemplateBox[{TagBox[TooltipBox[StyleBox[\\\"\\\\\\\"InsertValue\\\\\\\
\"\\\",\\n\\t\\tFontColor -> GrayLevel[0.4], FontWeight -> \
Bold,\\n\\t\\tStripOnInput -> False], \
\\\"Native`PrimitiveFunction[\\\\\\\"LLVM`InsertValue\\\\\\\"]\\\",\\n\\t\\\
tLabelStyle -> \\\"TextStyling\\\"], Annotation[#, \
\\\"Native`PrimitiveFunction[\\\\\\\"LLVM`InsertValue\\\\\\\"]\\\", \
\\\"Tooltip\\\"]& ],\\n\\t\\tFrameStyle -> None, Background -> \
GrayLevel[0.94], ContentPadding -> \
False},\\\"Highlighted\\\"]\\):\\!\\(\\*StyleBox[\\\"(NumberIterator[I64],I64,\
I64)\[Rule]NumberIterator[I64]\\\", FontColor -> RGBColor[0.66, 0, 0], \
FontWeight -> Bold, FontVariations -> {}]\\) [\\!\\(\\*StyleBox[\\\"%91\\\", \
FontColor -> RGBColor[0.269, 0.538, 0.356], FontWeight -> Bold, \
FontVariations -> {}]\\), \\!\\(\\*StyleBox[\\\"3\\\", FontColor -> \
GrayLevel[0.4], FontWeight -> Plain, FontVariations -> \
{}]\\):\\!\\(\\*StyleBox[\\\"I64\\\", FontColor -> RGBColor[0.66, 0, 0], \
FontWeight -> Bold, FontVariations -> {}]\\), \\!\\(\\*StyleBox[\\\"1\\\", \
FontColor -> GrayLevel[0.4], FontWeight -> Plain, FontVariations -> \
{}]\\):\\!\\(\\*StyleBox[\\\"I64\\\", FontColor -> RGBColor[0.66, 0, 0], \
FontWeight -> Bold, FontVariations -> {}]\\)] \\n\\!\\(\\*StyleBox[\\\"6\\\", \
FontColor -> GrayLevel[0.8], FontWeight -> Plain, FontVariations -> {}]\\)\\!\
\\(\\*StyleBox[\\\" |\\\", FontColor -> GrayLevel[0.9], FontWeight -> Plain, \
FontVariations -> {}]\\)\\t\\!\\(\\*StyleBox[\\\"%99\\\", FontColor -> \
RGBColor[0.269, 0.538, 0.356], FontWeight -> Bold, FontVariations -> \
{}]\\):\\!\\(\\*StyleBox[\\\"NumberIterator[I64]\\\", FontColor -> \
RGBColor[0.66, 0, 0], FontWeight -> Bold, FontVariations -> {}]\\) = \
\\!\\(\\*StyleBox[\\\"Call\\\", FontColor -> RGBColor[0.6, 0.4, 0.4], \
FontWeight -> Bold, FontVariations -> {\\\"Underline\\\" -> True}]\\) \
\\!\\(\\*TemplateBox[{TagBox[TooltipBox[StyleBox[\\\"\\\\\\\"InsertValue\\\\\\\
\"\\\",\\n\\t\\tFontColor -> GrayLevel[0.4], FontWeight -> \
Bold,\\n\\t\\tStripOnInput -> False], \
\\\"Native`PrimitiveFunction[\\\\\\\"LLVM`InsertValue\\\\\\\"]\\\",\\n\\t\\\
tLabelStyle -> \\\"TextStyling\\\"], Annotation[#, \
\\\"Native`PrimitiveFunction[\\\\\\\"LLVM`InsertValue\\\\\\\"]\\\", \
\\\"Tooltip\\\"]& ],\\n\\t\\tFrameStyle -> None, Background -> \
GrayLevel[0.94], ContentPadding -> \
False},\\\"Highlighted\\\"]\\):\\!\\(\\*StyleBox[\\\"(NumberIterator[I64],I64,\
I64)\[Rule]NumberIterator[I64]\\\", FontColor -> RGBColor[0.66, 0, 0], \
FontWeight -> Bold, FontVariations -> {}]\\) [\\!\\(\\*StyleBox[\\\"%96\\\", \
FontColor -> RGBColor[0.269, 0.538, 0.356], FontWeight -> Bold, \
FontVariations -> {}]\\), \\!\\(\\*StyleBox[\\\"1\\\", FontColor -> \
GrayLevel[0.4], FontWeight -> Plain, FontVariations -> \
{}]\\):\\!\\(\\*StyleBox[\\\"I64\\\", FontColor -> RGBColor[0.66, 0, 0], \
FontWeight -> Bold, FontVariations -> {}]\\), \\!\\(\\*StyleBox[\\\"2\\\", \
FontColor -> GrayLevel[0.4], FontWeight -> Plain, FontVariations -> \
{}]\\):\\!\\(\\*StyleBox[\\\"I64\\\", FontColor -> RGBColor[0.66, 0, 0], \
FontWeight -> Bold, FontVariations -> {}]\\)] \\n\\!\\(\\*StyleBox[\\\"7\\\", \
FontColor -> GrayLevel[0.8], FontWeight -> Plain, FontVariations -> {}]\\)\\!\
\\(\\*StyleBox[\\\" |\\\", FontColor -> GrayLevel[0.9], FontWeight -> Plain, \
FontVariations -> {}]\\)\\t\\!\\(\\*StyleBox[\\\"%103\\\", FontColor -> \
RGBColor[0.269, 0.538, 0.356], FontWeight -> Bold, FontVariations -> \
{}]\\):\\!\\(\\*StyleBox[\\\"NumberIterator[I64]\\\", FontColor -> \
RGBColor[0.66, 0, 0], FontWeight -> Bold, FontVariations -> {}]\\) = \
\\!\\(\\*StyleBox[\\\"Call\\\", FontColor -> RGBColor[0.6, 0.4, 0.4], \
FontWeight -> Bold, FontVariations -> {\\\"Underline\\\" -> True}]\\) \
\\!\\(\\*TemplateBox[{TagBox[TooltipBox[StyleBox[\\\"\\\\\\\"InsertValue\\\\\\\
\"\\\",\\n\\t\\tFontColor -> GrayLevel[0.4], FontWeight -> \
Bold,\\n\\t\\tStripOnInput -> False], \
\\\"Native`PrimitiveFunction[\\\\\\\"LLVM`InsertValue\\\\\\\"]\\\",\\n\\t\\\
tLabelStyle -> \\\"TextStyling\\\"], Annotation[#, \
\\\"Native`PrimitiveFunction[\\\\\\\"LLVM`InsertValue\\\\\\\"]\\\", \
\\\"Tooltip\\\"]& ],\\n\\t\\tFrameStyle -> None, Background -> \
GrayLevel[0.94], ContentPadding -> \
False},\\\"Highlighted\\\"]\\):\\!\\(\\*StyleBox[\\\"(NumberIterator[I64],I64,\
I64)\[Rule]NumberIterator[I64]\\\", FontColor -> RGBColor[0.66, 0, 0], \
FontWeight -> Bold, FontVariations -> {}]\\) [\\!\\(\\*StyleBox[\\\"%99\\\", \
FontColor -> RGBColor[0.269, 0.538, 0.356], FontWeight -> Bold, \
FontVariations -> {}]\\), \\!\\(\\*StyleBox[\\\"3\\\", FontColor -> \
GrayLevel[0.4], FontWeight -> Plain, FontVariations -> \
{}]\\):\\!\\(\\*StyleBox[\\\"I64\\\", FontColor -> RGBColor[0.66, 0, 0], \
FontWeight -> Bold, FontVariations -> {}]\\), \\!\\(\\*StyleBox[\\\"3\\\", \
FontColor -> GrayLevel[0.4], FontWeight -> Plain, FontVariations -> \
{}]\\):\\!\\(\\*StyleBox[\\\"I64\\\", FontColor -> RGBColor[0.66, 0, 0], \
FontWeight -> Bold, FontVariations -> {}]\\)] \\n\\!\\(\\*StyleBox[\\\"8\\\", \
FontColor -> GrayLevel[0.8], FontWeight -> Plain, FontVariations -> {}]\\)\\!\
\\(\\*StyleBox[\\\" |\\\", FontColor -> GrayLevel[0.9], FontWeight -> Plain, \
FontVariations -> {}]\\)\\t\\!\\(\\*StyleBox[\\\"Jump\\\", FontColor -> \
RGBColor[0.6, 0.4, 0.4], FontWeight -> Bold, FontVariations -> {\\\"Underline\
\\\" -> True}]\\) \\!\\(\\*StyleBox[\\\"whileCondition(7)\\\", FontColor -> \
RGBColor[0.9, 0.5, 0.2], FontWeight -> Plain, FontVariations -> {}]\\) \\n\\!\
\\(\\*StyleBox[\\\"whileCondition(7)\\\", FontColor -> RGBColor[0.9, 0.5, \
0.2], FontWeight -> Plain, FontVariations -> {}]\\):  \\n\\!\\(\\*StyleBox[\\\
\"2\\\", FontColor -> GrayLevel[0.8], FontWeight -> Plain, FontVariations -> \
{}]\\)\\!\\(\\*StyleBox[\\\" |\\\", FontColor -> GrayLevel[0.9], FontWeight \
-> Plain, FontVariations -> {}]\\)\\t\\!\\(\\*StyleBox[\\\"%21\\\", FontColor \
-> RGBColor[0.269, 0.538, 0.356], FontWeight -> Bold, FontVariations -> \
{}]\\):\\!\\(\\*StyleBox[\\\"I64\\\", FontColor -> RGBColor[0.66, 0, 0], \
FontWeight -> Bold, FontVariations -> {}]\\) = \\!\\(\\*StyleBox[\\\"Phi\\\", \
FontColor -> RGBColor[0.6, 0.4, 0.4], FontWeight -> Bold, FontVariations -> {\
\\\"Underline\\\" -> True}]\\) [\\!\\(\\*StyleBox[\\\"start(1)\\\", FontColor \
-> RGBColor[0.9, 0.5, 0.2], FontWeight -> Plain, FontVariations -> {}]\\), \
\\!\\(\\*StyleBox[\\\"0\\\", FontColor -> GrayLevel[0.4], FontWeight -> \
Plain, FontVariations -> {}]\\):\\!\\(\\*StyleBox[\\\"I64\\\", FontColor -> \
RGBColor[0.66, 0, 0], FontWeight -> Bold, FontVariations -> {}]\\)], \
[\\!\\(\\*StyleBox[\\\"elseif1333618724(11)\\\", FontColor -> RGBColor[0.9, \
0.5, 0.2], FontWeight -> Plain, FontVariations -> {}]\\), \
\\!\\(\\*StyleBox[\\\"%157\\\", FontColor -> RGBColor[0.269, 0.538, 0.356], \
FontWeight -> Bold, FontVariations -> {}]\\)] \\n\\!\\(\\*StyleBox[\\\"3\\\", \
FontColor -> GrayLevel[0.8], FontWeight -> Plain, FontVariations -> {}]\\)\\!\
\\(\\*StyleBox[\\\" |\\\", FontColor -> GrayLevel[0.9], FontWeight -> Plain, \
FontVariations -> {}]\\)\\t\\!\\(\\*StyleBox[\\\"%112\\\", FontColor -> \
RGBColor[0.269, 0.538, 0.356], FontWeight -> Bold, FontVariations -> \
{}]\\):\\!\\(\\*StyleBox[\\\"I64\\\", FontColor -> RGBColor[0.66, 0, 0], \
FontWeight -> Bold, FontVariations -> {}]\\) = \
\\!\\(\\*StyleBox[\\\"%103\\\", FontColor -> RGBColor[0.269, 0.538, 0.356], \
FontWeight -> Bold, FontVariations -> {}]\\)\\!\\(\\*StyleBox[\\\"\
\[LeftDoubleBracket]\\\", FontColor -> RGBColor[0.6, 0.4, 0.4], FontWeight -> \
Bold, FontVariations -> {\\\"Underline\\\" -> True}]\\)\\!\\(\\*StyleBox[\\\"\
\\\\\\\"length\\\\\\\"\\\", FontColor -> GrayLevel[0.4], FontWeight -> Plain, \
FontVariations -> {}]\\):\\!\\(\\*StyleBox[\\\"length:String\\\", FontColor \
-> RGBColor[0.66, 0, 0], FontWeight -> Bold, FontVariations -> \
{}]\\)\\!\\(\\*StyleBox[\\\"\[RightDoubleBracket]\\\", FontColor -> \
RGBColor[0.6, 0.4, 0.4], FontWeight -> Bold, FontVariations -> {\\\"Underline\
\\\" -> True}]\\)\\!\\(\\*StyleBox[\\\"\\\\t\\\\t  (* GetField *)\\\", \
FontColor -> GrayLevel[0.4], FontWeight -> Plain, FontVariations -> {}]\\) \
\\n\\!\\(\\*StyleBox[\\\"4\\\", FontColor -> GrayLevel[0.8], FontWeight -> \
Plain, FontVariations -> {}]\\)\\!\\(\\*StyleBox[\\\" |\\\", FontColor -> \
GrayLevel[0.9], FontWeight -> Plain, FontVariations -> \
{}]\\)\\t\\!\\(\\*StyleBox[\\\"%115\\\", FontColor -> RGBColor[0.269, 0.538, \
0.356], FontWeight -> Bold, FontVariations -> \
{}]\\):\\!\\(\\*StyleBox[\\\"B\\\", FontColor -> RGBColor[0.66, 0, 0], \
FontWeight -> Bold, FontVariations -> {}]\\) = \
\\!\\(\\*StyleBox[\\\"Call\\\", FontColor -> RGBColor[0.6, 0.4, 0.4], \
FontWeight -> Bold, FontVariations -> {\\\"Underline\\\" -> True}]\\) \
\\!\\(\\*TemplateBox[{TagBox[TooltipBox[StyleBox[\\\"\\\\\\\"Less\\\\\\\"\\\",\
\\n\\t\\tFontColor -> GrayLevel[0.4], FontWeight -> \
Bold,\\n\\t\\tStripOnInput -> False], \
\\\"Native`PrimitiveFunction[\\\\\\\"LLVM`Less\\\\\\\"]\\\",\\n\\t\\\
tLabelStyle -> \\\"TextStyling\\\"], Annotation[#, \
\\\"Native`PrimitiveFunction[\\\\\\\"LLVM`Less\\\\\\\"]\\\", \
\\\"Tooltip\\\"]& ],\\n\\t\\tFrameStyle -> None, Background -> \
GrayLevel[0.94], ContentPadding -> \
False},\\\"Highlighted\\\"]\\):\\!\\(\\*StyleBox[\\\"(I64,I64)\[Rule]B\\\", \
FontColor -> RGBColor[0.66, 0, 0], FontWeight -> Bold, FontVariations -> \
{}]\\) [\\!\\(\\*StyleBox[\\\"%21\\\", FontColor -> RGBColor[0.269, 0.538, \
0.356], FontWeight -> Bold, FontVariations -> {}]\\), \
\\!\\(\\*StyleBox[\\\"%112\\\", FontColor -> RGBColor[0.269, 0.538, 0.356], \
FontWeight -> Bold, FontVariations -> {}]\\)] \\n\\!\\(\\*StyleBox[\\\"5\\\", \
FontColor -> GrayLevel[0.8], FontWeight -> Plain, FontVariations -> {}]\\)\\!\
\\(\\*StyleBox[\\\" |\\\", FontColor -> GrayLevel[0.9], FontWeight -> Plain, \
FontVariations -> {}]\\)\\t\\!\\(\\*StyleBox[\\\"Branch\\\", FontColor -> \
RGBColor[0.6, 0.4, 0.4], FontWeight -> Bold, FontVariations -> {\\\"Underline\
\\\" -> True}]\\) \\!\\(\\*StyleBox[\\\"%115\\\", FontColor -> \
RGBColor[0.269, 0.538, 0.356], FontWeight -> Bold, FontVariations -> {}]\\), \
\\!\\(\\*StyleBox[\\\"whileBody(8)\\\", FontColor -> RGBColor[0.9, 0.5, 0.2], \
FontWeight -> Plain, FontVariations -> {}]\\), \
\\!\\(\\*StyleBox[\\\"whileExit(9)\\\", FontColor -> RGBColor[0.9, 0.5, 0.2], \
FontWeight -> Plain, FontVariations -> {}]\\) \
\\n\\!\\(\\*StyleBox[\\\"whileBody(8)\\\", FontColor -> RGBColor[0.9, 0.5, \
0.2], FontWeight -> Plain, FontVariations -> {}]\\):  \\n\\!\\(\\*StyleBox[\\\
\"2\\\", FontColor -> GrayLevel[0.8], FontWeight -> Plain, FontVariations -> \
{}]\\)\\!\\(\\*StyleBox[\\\" |\\\", FontColor -> GrayLevel[0.9], FontWeight \
-> Plain, FontVariations -> {}]\\)\\t\\!\\(\\*StyleBox[\\\"%120\\\", \
FontColor -> RGBColor[0.269, 0.538, 0.356], FontWeight -> Bold, \
FontVariations -> {}]\\):\\!\\(\\*StyleBox[\\\"I64\\\", FontColor -> \
RGBColor[0.66, 0, 0], FontWeight -> Bold, FontVariations -> {}]\\) = \
\\!\\(\\*StyleBox[\\\"%103\\\", FontColor -> RGBColor[0.269, 0.538, 0.356], \
FontWeight -> Bold, FontVariations -> {}]\\)\\!\\(\\*StyleBox[\\\"\
\[LeftDoubleBracket]\\\", FontColor -> RGBColor[0.6, 0.4, 0.4], FontWeight -> \
Bold, FontVariations -> {\\\"Underline\\\" -> True}]\\)\\!\\(\\*StyleBox[\\\"\
\\\\\\\"start\\\\\\\"\\\", FontColor -> GrayLevel[0.4], FontWeight -> Plain, \
FontVariations -> {}]\\):\\!\\(\\*StyleBox[\\\"start:String\\\", FontColor -> \
RGBColor[0.66, 0, 0], FontWeight -> Bold, FontVariations -> \
{}]\\)\\!\\(\\*StyleBox[\\\"\[RightDoubleBracket]\\\", FontColor -> \
RGBColor[0.6, 0.4, 0.4], FontWeight -> Bold, FontVariations -> {\\\"Underline\
\\\" -> True}]\\)\\!\\(\\*StyleBox[\\\"\\\\t\\\\t  (* GetField *)\\\", \
FontColor -> GrayLevel[0.4], FontWeight -> Plain, FontVariations -> {}]\\) \
\\n\\!\\(\\*StyleBox[\\\"3\\\", FontColor -> GrayLevel[0.8], FontWeight -> \
Plain, FontVariations -> {}]\\)\\!\\(\\*StyleBox[\\\" |\\\", FontColor -> \
GrayLevel[0.9], FontWeight -> Plain, FontVariations -> \
{}]\\)\\t\\!\\(\\*StyleBox[\\\"%123\\\", FontColor -> RGBColor[0.269, 0.538, \
0.356], FontWeight -> Bold, FontVariations -> \
{}]\\):\\!\\(\\*StyleBox[\\\"I64\\\", FontColor -> RGBColor[0.66, 0, 0], \
FontWeight -> Bold, FontVariations -> {}]\\) = \
\\!\\(\\*StyleBox[\\\"%103\\\", FontColor -> RGBColor[0.269, 0.538, 0.356], \
FontWeight -> Bold, FontVariations -> {}]\\)\\!\\(\\*StyleBox[\\\"\
\[LeftDoubleBracket]\\\", FontColor -> RGBColor[0.6, 0.4, 0.4], FontWeight -> \
Bold, FontVariations -> {\\\"Underline\\\" -> True}]\\)\\!\\(\\*StyleBox[\\\"\
\\\\\\\"step\\\\\\\"\\\", FontColor -> GrayLevel[0.4], FontWeight -> Plain, \
FontVariations -> {}]\\):\\!\\(\\*StyleBox[\\\"step:String\\\", FontColor -> \
RGBColor[0.66, 0, 0], FontWeight -> Bold, FontVariations -> \
{}]\\)\\!\\(\\*StyleBox[\\\"\[RightDoubleBracket]\\\", FontColor -> \
RGBColor[0.6, 0.4, 0.4], FontWeight -> Bold, FontVariations -> {\\\"Underline\
\\\" -> True}]\\)\\!\\(\\*StyleBox[\\\"\\\\t\\\\t  (* GetField *)\\\", \
FontColor -> GrayLevel[0.4], FontWeight -> Plain, FontVariations -> {}]\\) \
\\n\\!\\(\\*StyleBox[\\\"4\\\", FontColor -> GrayLevel[0.8], FontWeight -> \
Plain, FontVariations -> {}]\\)\\!\\(\\*StyleBox[\\\" |\\\", FontColor -> \
GrayLevel[0.9], FontWeight -> Plain, FontVariations -> \
{}]\\)\\t\\!\\(\\*StyleBox[\\\"%126\\\", FontColor -> RGBColor[0.269, 0.538, \
0.356], FontWeight -> Bold, FontVariations -> \
{}]\\):\\!\\(\\*StyleBox[\\\"I64\\\", FontColor -> RGBColor[0.66, 0, 0], \
FontWeight -> Bold, FontVariations -> {}]\\) = \
\\!\\(\\*StyleBox[\\\"Call\\\", FontColor -> RGBColor[0.6, 0.4, 0.4], \
FontWeight -> Bold, FontVariations -> {\\\"Underline\\\" -> True}]\\) \
\\!\\(\\*TemplateBox[{TagBox[TooltipBox[StyleBox[\\\"\\\\\\\"TimesNoWrap\\\\\\\
\"\\\",\\n\\t\\tFontColor -> GrayLevel[0.4], FontWeight -> \
Bold,\\n\\t\\tStripOnInput -> False], \
\\\"Native`PrimitiveFunction[\\\\\\\"LLVM`TimesNoWrap\\\\\\\"]\\\",\\n\\t\\\
tLabelStyle -> \\\"TextStyling\\\"], Annotation[#, \
\\\"Native`PrimitiveFunction[\\\\\\\"LLVM`TimesNoWrap\\\\\\\"]\\\", \
\\\"Tooltip\\\"]& ],\\n\\t\\tFrameStyle -> None, Background -> \
GrayLevel[0.94], ContentPadding -> \
False},\\\"Highlighted\\\"]\\):\\!\\(\\*StyleBox[\\\"(I64,I64)\[Rule]I64\\\", \
FontColor -> RGBColor[0.66, 0, 0], FontWeight -> Bold, FontVariations -> \
{}]\\) [\\!\\(\\*StyleBox[\\\"%21\\\", FontColor -> RGBColor[0.269, 0.538, \
0.356], FontWeight -> Bold, FontVariations -> {}]\\), \
\\!\\(\\*StyleBox[\\\"%123\\\", FontColor -> RGBColor[0.269, 0.538, 0.356], \
FontWeight -> Bold, FontVariations -> {}]\\)] \\n\\!\\(\\*StyleBox[\\\"5\\\", \
FontColor -> GrayLevel[0.8], FontWeight -> Plain, FontVariations -> {}]\\)\\!\
\\(\\*StyleBox[\\\" |\\\", FontColor -> GrayLevel[0.9], FontWeight -> Plain, \
FontVariations -> {}]\\)\\t\\!\\(\\*StyleBox[\\\"%128\\\", FontColor -> \
RGBColor[0.269, 0.538, 0.356], FontWeight -> Bold, FontVariations -> \
{}]\\):\\!\\(\\*StyleBox[\\\"I64\\\", FontColor -> RGBColor[0.66, 0, 0], \
FontWeight -> Bold, FontVariations -> {}]\\) = \
\\!\\(\\*StyleBox[\\\"Call\\\", FontColor -> RGBColor[0.6, 0.4, 0.4], \
FontWeight -> Bold, FontVariations -> {\\\"Underline\\\" -> True}]\\) \
\\!\\(\\*TemplateBox[{TagBox[TooltipBox[StyleBox[\\\"\\\\\\\"PlusNoWrap\\\\\\\
\"\\\",\\n\\t\\tFontColor -> GrayLevel[0.4], FontWeight -> \
Bold,\\n\\t\\tStripOnInput -> False], \
\\\"Native`PrimitiveFunction[\\\\\\\"LLVM`PlusNoWrap\\\\\\\"]\\\",\\n\\t\\\
tLabelStyle -> \\\"TextStyling\\\"], Annotation[#, \
\\\"Native`PrimitiveFunction[\\\\\\\"LLVM`PlusNoWrap\\\\\\\"]\\\", \
\\\"Tooltip\\\"]& ],\\n\\t\\tFrameStyle -> None, Background -> \
GrayLevel[0.94], ContentPadding -> \
False},\\\"Highlighted\\\"]\\):\\!\\(\\*StyleBox[\\\"(I64,I64)\[Rule]I64\\\", \
FontColor -> RGBColor[0.66, 0, 0], FontWeight -> Bold, FontVariations -> \
{}]\\) [\\!\\(\\*StyleBox[\\\"%120\\\", FontColor -> RGBColor[0.269, 0.538, \
0.356], FontWeight -> Bold, FontVariations -> {}]\\), \
\\!\\(\\*StyleBox[\\\"%126\\\", FontColor -> RGBColor[0.269, 0.538, 0.356], \
FontWeight -> Bold, FontVariations -> {}]\\)] \\n\\!\\(\\*StyleBox[\\\"6\\\", \
FontColor -> GrayLevel[0.8], FontWeight -> Plain, FontVariations -> {}]\\)\\!\
\\(\\*StyleBox[\\\" |\\\", FontColor -> GrayLevel[0.9], FontWeight -> Plain, \
FontVariations -> {}]\\)\\t\\!\\(\\*StyleBox[\\\"%133\\\", FontColor -> \
RGBColor[0.269, 0.538, 0.356], FontWeight -> Bold, FontVariations -> \
{}]\\):\\!\\(\\*StyleBox[\\\"Tuple[I64,B]\\\", FontColor -> RGBColor[0.66, 0, \
0], FontWeight -> Bold, FontVariations -> {}]\\) = \\!\\(\\*StyleBox[\\\"Call\
\\\", FontColor -> RGBColor[0.6, 0.4, 0.4], FontWeight -> Bold, \
FontVariations -> {\\\"Underline\\\" -> True}]\\) \
\\!\\(\\*TemplateBox[{TagBox[TooltipBox[StyleBox[\\\"\\\\\\\"ssub.with.\
overflow\\\\\\\"\\\",\\n\\t\\tFontColor -> GrayLevel[0.4], FontWeight -> \
Bold,\\n\\t\\tStripOnInput -> False], \
\\\"Native`PrimitiveFunction[\\\\\\\"LLVM`ssub.with.overflow\\\\\\\"]\\\",\\n\
\\t\\tLabelStyle -> \\\"TextStyling\\\"], Annotation[#, \
\\\"Native`PrimitiveFunction[\\\\\\\"LLVM`ssub.with.overflow\\\\\\\"]\\\", \\\
\"Tooltip\\\"]& ],\\n\\t\\tFrameStyle -> None, Background -> GrayLevel[0.94], \
ContentPadding -> \
False},\\\"Highlighted\\\"]\\):\\!\\(\\*StyleBox[\\\"(I64,I64)\[Rule]Tuple[\
I64,B]\\\", FontColor -> RGBColor[0.66, 0, 0], FontWeight -> Bold, \
FontVariations -> {}]\\) [\\!\\(\\*StyleBox[\\\"%128\\\", FontColor -> \
RGBColor[0.269, 0.538, 0.356], FontWeight -> Bold, FontVariations -> {}]\\), \
\\!\\(\\*StyleBox[\\\"1\\\", FontColor -> GrayLevel[0.4], FontWeight -> \
Plain, FontVariations -> {}]\\):\\!\\(\\*StyleBox[\\\"I64\\\", FontColor -> \
RGBColor[0.66, 0, 0], FontWeight -> Bold, FontVariations -> {}]\\)] \\n\\!\\(\
\\*StyleBox[\\\"7\\\", FontColor -> GrayLevel[0.8], FontWeight -> Plain, \
FontVariations -> {}]\\)\\!\\(\\*StyleBox[\\\" |\\\", FontColor -> \
GrayLevel[0.9], FontWeight -> Plain, FontVariations -> \
{}]\\)\\t\\!\\(\\*StyleBox[\\\"%135\\\", FontColor -> RGBColor[0.269, 0.538, \
0.356], FontWeight -> Bold, FontVariations -> \
{}]\\):\\!\\(\\*StyleBox[\\\"B\\\", FontColor -> RGBColor[0.66, 0, 0], \
FontWeight -> Bold, FontVariations -> {}]\\) = \
\\!\\(\\*StyleBox[\\\"%133\\\", FontColor -> RGBColor[0.269, 0.538, 0.356], \
FontWeight -> Bold, FontVariations -> {}]\\)\\!\\(\\*StyleBox[\\\"\
\[LeftDoubleBracket]\\\", FontColor -> RGBColor[0.6, 0.4, 0.4], FontWeight -> \
Bold, FontVariations -> {\\\"Underline\\\" -> True}]\\)\\!\\(\\*StyleBox[\\\"\
\\\\\\\"second\\\\\\\"\\\", FontColor -> GrayLevel[0.4], FontWeight -> Plain, \
FontVariations -> {}]\\):\\!\\(\\*StyleBox[\\\"second:String\\\", FontColor \
-> RGBColor[0.66, 0, 0], FontWeight -> Bold, FontVariations -> \
{}]\\)\\!\\(\\*StyleBox[\\\"\[RightDoubleBracket]\\\", FontColor -> \
RGBColor[0.6, 0.4, 0.4], FontWeight -> Bold, FontVariations -> {\\\"Underline\
\\\" -> True}]\\)\\!\\(\\*StyleBox[\\\"\\\\t\\\\t  (* GetField *)\\\", \
FontColor -> GrayLevel[0.4], FontWeight -> Plain, FontVariations -> {}]\\) \
\\n\\!\\(\\*StyleBox[\\\"8\\\", FontColor -> GrayLevel[0.8], FontWeight -> \
Plain, FontVariations -> {}]\\)\\!\\(\\*StyleBox[\\\" |\\\", FontColor -> \
GrayLevel[0.9], FontWeight -> Plain, FontVariations -> \
{}]\\)\\t\\!\\(\\*StyleBox[\\\"Branch\\\", FontColor -> RGBColor[0.6, 0.4, \
0.4], FontWeight -> Bold, FontVariations -> {\\\"Underline\\\" -> True}]\\) \
\\!\\(\\*StyleBox[\\\"%135\\\", FontColor -> RGBColor[0.269, 0.538, 0.356], \
FontWeight -> Bold, FontVariations -> {}]\\), \
\\!\\(\\*StyleBox[\\\"thenif1333518725(10)\\\", FontColor -> RGBColor[0.9, \
0.5, 0.2], FontWeight -> Plain, FontVariations -> {}]\\), \
\\!\\(\\*StyleBox[\\\"elseif1333618724(11)\\\", FontColor -> RGBColor[0.9, \
0.5, 0.2], FontWeight -> Plain, FontVariations -> {}]\\) \
\\n\\!\\(\\*StyleBox[\\\"whileExit(9)\\\", FontColor -> RGBColor[0.9, 0.5, \
0.2], FontWeight -> Plain, FontVariations -> {}]\\):  \\n\\!\\(\\*StyleBox[\\\
\"2\\\", FontColor -> GrayLevel[0.8], FontWeight -> Plain, FontVariations -> \
{}]\\)\\!\\(\\*StyleBox[\\\" |\\\", FontColor -> GrayLevel[0.9], FontWeight \
-> Plain, FontVariations -> {}]\\)\\t\\!\\(\\*StyleBox[\\\"Return\\\", \
FontColor -> RGBColor[0.6, 0.4, 0.4], FontWeight -> Bold, FontVariations -> {\
\\\"Underline\\\" -> True}]\\) \\!\\(\\*StyleBox[\\\"Compile`UndefinedValue\\\
\", FontColor -> GrayLevel[0.4], FontWeight -> Plain, FontVariations -> \
{}]\\):\\!\\(\\*StyleBox[\\\"Null\\\", FontColor -> RGBColor[0.66, 0, 0], \
FontWeight -> Bold, FontVariations -> {}]\\) \
\\n\\!\\(\\*StyleBox[\\\"thenif1333518725(10)\\\", FontColor -> RGBColor[0.9, \
0.5, 0.2], FontWeight -> Plain, FontVariations -> {}]\\):  \
\\n\\!\\(\\*StyleBox[\\\"2\\\", FontColor -> GrayLevel[0.8], FontWeight -> \
Plain, FontVariations -> {}]\\)\\!\\(\\*StyleBox[\\\" |\\\", FontColor -> \
GrayLevel[0.9], FontWeight -> Plain, FontVariations -> \
{}]\\)\\t\\!\\(\\*StyleBox[\\\"Throw\\\", FontColor -> RGBColor[0.66, 0, 0], \
FontWeight -> Bold, FontVariations -> {}]\\) \\\"IntegerOverflow\\\" \
\\n\\!\\(\\*StyleBox[\\\"3\\\", FontColor -> GrayLevel[0.8], FontWeight -> \
Plain, FontVariations -> {}]\\)\\!\\(\\*StyleBox[\\\" |\\\", FontColor -> \
GrayLevel[0.9], FontWeight -> Plain, FontVariations -> \
{}]\\)\\t\\!\\(\\*StyleBox[\\\"Unreachable\\\", FontColor -> RGBColor[0.6, \
0.4, 0.4], FontWeight -> Bold, FontVariations -> {\\\"Underline\\\" -> True}]\
\\) \\n\\!\\(\\*StyleBox[\\\"elseif1333618724(11)\\\", FontColor -> \
RGBColor[0.9, 0.5, 0.2], FontWeight -> Plain, FontVariations -> {}]\\):  \
\\n\\!\\(\\*StyleBox[\\\"2\\\", FontColor -> GrayLevel[0.8], FontWeight -> \
Plain, FontVariations -> {}]\\)\\!\\(\\*StyleBox[\\\" |\\\", FontColor -> \
GrayLevel[0.9], FontWeight -> Plain, FontVariations -> \
{}]\\)\\t\\!\\(\\*StyleBox[\\\"%138\\\", FontColor -> RGBColor[0.269, 0.538, \
0.356], FontWeight -> Bold, FontVariations -> \
{}]\\):\\!\\(\\*StyleBox[\\\"I64\\\", FontColor -> RGBColor[0.66, 0, 0], \
FontWeight -> Bold, FontVariations -> {}]\\) = \
\\!\\(\\*StyleBox[\\\"%133\\\", FontColor -> RGBColor[0.269, 0.538, 0.356], \
FontWeight -> Bold, FontVariations -> {}]\\)\\!\\(\\*StyleBox[\\\"\
\[LeftDoubleBracket]\\\", FontColor -> RGBColor[0.6, 0.4, 0.4], FontWeight -> \
Bold, FontVariations -> {\\\"Underline\\\" -> True}]\\)\\!\\(\\*StyleBox[\\\"\
\\\\\\\"first\\\\\\\"\\\", FontColor -> GrayLevel[0.4], FontWeight -> Plain, \
FontVariations -> {}]\\):\\!\\(\\*StyleBox[\\\"first:String\\\", FontColor -> \
RGBColor[0.66, 0, 0], FontWeight -> Bold, FontVariations -> \
{}]\\)\\!\\(\\*StyleBox[\\\"\[RightDoubleBracket]\\\", FontColor -> \
RGBColor[0.6, 0.4, 0.4], FontWeight -> Bold, FontVariations -> {\\\"Underline\
\\\" -> True}]\\)\\!\\(\\*StyleBox[\\\"\\\\t\\\\t  (* GetField *)\\\", \
FontColor -> GrayLevel[0.4], FontWeight -> Plain, FontVariations -> {}]\\) \
\\n\\!\\(\\*StyleBox[\\\"3\\\", FontColor -> GrayLevel[0.8], FontWeight -> \
Plain, FontVariations -> {}]\\)\\!\\(\\*StyleBox[\\\" |\\\", FontColor -> \
GrayLevel[0.9], FontWeight -> Plain, FontVariations -> \
{}]\\)\\t\\!\\(\\*StyleBox[\\\"Store\\\", FontColor -> RGBColor[0.6, 0.4, \
0.4], FontWeight -> Bold, FontVariations -> {\\\"Underline\\\" -> True}]\\) \
\\!\\(\\*StyleBox[\\\"%128\\\", FontColor -> RGBColor[0.269, 0.538, 0.356], \
FontWeight -> Bold, FontVariations -> {}]\\) \[Rule] \
\\!\\(\\*StyleBox[\\\"%146\\\", FontColor -> RGBColor[0.269, 0.538, 0.356], \
FontWeight -> Bold, FontVariations -> {}]\\) \\n\\!\\(\\*StyleBox[\\\"4\\\", \
FontColor -> GrayLevel[0.8], FontWeight -> Plain, FontVariations -> {}]\\)\\!\
\\(\\*StyleBox[\\\" |\\\", FontColor -> GrayLevel[0.9], FontWeight -> Plain, \
FontVariations -> {}]\\)\\t\\!\\(\\*StyleBox[\\\"%6\\\", FontColor -> \
RGBColor[0.269, 0.538, 0.356], FontWeight -> Bold, FontVariations -> \
{}]\\):\\!\\(\\*StyleBox[\\\"C[Ptr[I64]]\\\", FontColor -> RGBColor[0.66, 0, \
0], FontWeight -> Bold, FontVariations -> {}]\\)\\!\\(\\*StyleBox[\\\"\
\[LeftDoubleBracket]\\\", FontColor -> RGBColor[0.6, 0.4, 0.4], FontWeight -> \
Bold, FontVariations -> {\\\"Underline\\\" -> \
True}]\\)\\!\\(\\*StyleBox[\\\"%138\\\", FontColor -> RGBColor[0.269, 0.538, \
0.356], FontWeight -> Bold, FontVariations -> {}]\\)\\!\\(\\*StyleBox[\\\"\
\[RightDoubleBracket]\\\", FontColor -> RGBColor[0.6, 0.4, 0.4], FontWeight \
-> Bold, FontVariations -> {\\\"Underline\\\" -> True}]\\) = \
\\!\\(\\*StyleBox[\\\"%146\\\", FontColor -> RGBColor[0.269, 0.538, 0.356], \
FontWeight -> Bold, FontVariations -> {}]\\)\\!\\(\\*StyleBox[\\\"\\\\t\\\\t  \
(* Native`SetElement *)\\\", FontColor -> GrayLevel[0.4], FontWeight -> \
Plain, FontVariations -> {}]\\) \\n\\!\\(\\*StyleBox[\\\"5\\\", FontColor -> \
GrayLevel[0.8], FontWeight -> Plain, FontVariations -> \
{}]\\)\\!\\(\\*StyleBox[\\\" |\\\", FontColor -> GrayLevel[0.9], FontWeight \
-> Plain, FontVariations -> {}]\\)\\t\\!\\(\\*StyleBox[\\\"%157\\\", \
FontColor -> RGBColor[0.269, 0.538, 0.356], FontWeight -> Bold, \
FontVariations -> {}]\\):\\!\\(\\*StyleBox[\\\"I64\\\", FontColor -> \
RGBColor[0.66, 0, 0], FontWeight -> Bold, FontVariations -> {}]\\) = \
\\!\\(\\*StyleBox[\\\"Call\\\", FontColor -> RGBColor[0.6, 0.4, 0.4], \
FontWeight -> Bold, FontVariations -> {\\\"Underline\\\" -> True}]\\) \
\\!\\(\\*TemplateBox[{TagBox[TooltipBox[StyleBox[\\\"\\\\\\\"PlusNoWrap\\\\\\\
\"\\\",\\n\\t\\tFontColor -> GrayLevel[0.4], FontWeight -> \
Bold,\\n\\t\\tStripOnInput -> False], \
\\\"Native`PrimitiveFunction[\\\\\\\"LLVM`PlusNoWrap\\\\\\\"]\\\",\\n\\t\\\
tLabelStyle -> \\\"TextStyling\\\"], Annotation[#, \
\\\"Native`PrimitiveFunction[\\\\\\\"LLVM`PlusNoWrap\\\\\\\"]\\\", \
\\\"Tooltip\\\"]& ],\\n\\t\\tFrameStyle -> None, Background -> \
GrayLevel[0.94], ContentPadding -> \
False},\\\"Highlighted\\\"]\\):\\!\\(\\*StyleBox[\\\"(I64,I64)\[Rule]I64\\\", \
FontColor -> RGBColor[0.66, 0, 0], FontWeight -> Bold, FontVariations -> \
{}]\\) [\\!\\(\\*StyleBox[\\\"%21\\\", FontColor -> RGBColor[0.269, 0.538, \
0.356], FontWeight -> Bold, FontVariations -> {}]\\), \\!\\(\\*StyleBox[\\\"1\
\\\", FontColor -> GrayLevel[0.4], FontWeight -> Plain, FontVariations -> {}]\
\\):\\!\\(\\*StyleBox[\\\"I64\\\", FontColor -> RGBColor[0.66, 0, 0], \
FontWeight -> Bold, FontVariations -> {}]\\)] \\n\\!\\(\\*StyleBox[\\\"6\\\", \
FontColor -> GrayLevel[0.8], FontWeight -> Plain, FontVariations -> {}]\\)\\!\
\\(\\*StyleBox[\\\" |\\\", FontColor -> GrayLevel[0.9], FontWeight -> Plain, \
FontVariations -> {}]\\)\\t\\!\\(\\*StyleBox[\\\"Jump\\\", FontColor -> \
RGBColor[0.6, 0.4, 0.4], FontWeight -> Bold, FontVariations -> {\\\"Underline\
\\\" -> True}]\\) \\!\\(\\*StyleBox[\\\"whileCondition(7)\\\", FontColor -> \
RGBColor[0.9, 0.5, 0.2], FontWeight -> Plain, FontVariations -> {}]\\) \\n\\n\
\\!\\(\\*StyleBox[\\\"(*******************************************************\
***)\\\\n(**********************************************************)\\\\n\\\"\
, FontColor -> GrayLevel[0.4], FontWeight -> Plain, FontVariations -> \
{}]\\)\\n\\!\\(\\*StyleBox[\\\"_Native__AllocateArray_F__Integer64_CArray_\
RawPointer_Integer64\\\", FontColor -> RGBColor[0.269, 0.538, 0.356], \
FontWeight -> Bold, FontVariations -> \
{}]\\)\\!\\(\\*StyleBox[\\\"::Information=\\\", FontColor -> GrayLevel[0.4], \
FontWeight -> Plain, FontVariations -> \
{}]\\){\\\"unmangledName\\\"->\\!\\(\\*RowBox[{\\\"Native`AllocateArray\\\"}]\
\\), \\\"inlineInformation\\\"->{<|\\\"inlineValue\\\" -> Automatic, \
\\\"isTrivial\\\" -> False|>}, \
\\\"ArgumentAlias\\\"->\\!\\(\\*RowBox[{\\\"False\\\"}]\\), \\\"Profile\\\"->\
\\!\\(\\*RowBox[{\\\"False\\\"}]\\), \\\"AbortHandling\\\"->\\!\\(\\*RowBox[{\
\\\"False\\\"}]\\), \\\"LLVMAttributes\\\"->\\!\\(\\*RowBox[{\\\"\
\[LeftAssociation]\\\", RowBox[{\\\"\\\\\\\"Function\\\\\\\"\\\", \\\"\[Rule]\
\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\\\\\\\"dso_local\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"weak\\\\\\\"\\\"}], \\\"}\\\"}]}], \\\"\
\[RightAssociation]\\\"}]\\), \
\\\"Exported\\\"->\\!\\(\\*RowBox[{\\\"False\\\"}]\\)}\\n\\!\\(\\*StyleBox[\\\
\"_Native__AllocateArray_F__Integer64_CArray_RawPointer_Integer64\\\", \
FontColor -> RGBColor[0.269, 0.538, 0.356], FontWeight -> Bold, \
FontVariations -> {}]\\) : \
\\!\\(\\*StyleBox[\\\"(Integer64)\[Rule]CArray[RawPointer[Integer64]]\\\", \
FontColor -> RGBColor[0.66, 0, 0], FontWeight -> Bold, FontVariations -> \
{}]\\)\\n\\!\\(\\*StyleBox[\\\"start18708(1)\\\", FontColor -> RGBColor[0.9, \
0.5, 0.2], FontWeight -> Plain, FontVariations -> {}]\\):  \
\\n\\!\\(\\*StyleBox[\\\"2\\\", FontColor -> GrayLevel[0.8], FontWeight -> \
Plain, FontVariations -> {}]\\)\\!\\(\\*StyleBox[\\\" |\\\", FontColor -> \
GrayLevel[0.9], FontWeight -> Plain, FontVariations -> \
{}]\\)\\t\\!\\(\\*StyleBox[\\\"%63\\\", FontColor -> RGBColor[0.269, 0.538, \
0.356], FontWeight -> Bold, FontVariations -> \
{}]\\):\\!\\(\\*StyleBox[\\\"I64\\\", FontColor -> RGBColor[0.66, 0, 0], \
FontWeight -> Bold, FontVariations -> {}]\\) = \
\\!\\(\\*StyleBox[\\\"LoadArgument\\\", FontColor -> RGBColor[0.6, 0.4, 0.4], \
FontWeight -> Bold, FontVariations -> {\\\"Underline\\\" -> True}]\\) \
\\!\\(\\*StyleBox[\\\"1\\\", FontColor -> GrayLevel[0.4], FontWeight -> Bold, \
FontVariations -> {}]\\) \\n\\!\\(\\*StyleBox[\\\"3\\\", FontColor -> \
GrayLevel[0.8], FontWeight -> Plain, FontVariations -> \
{}]\\)\\!\\(\\*StyleBox[\\\" |\\\", FontColor -> GrayLevel[0.9], FontWeight \
-> Plain, FontVariations -> {}]\\)\\t\\!\\(\\*StyleBox[\\\"%64\\\", FontColor \
-> RGBColor[0.269, 0.538, 0.356], FontWeight -> Bold, FontVariations -> \
{}]\\):\\!\\(\\*StyleBox[\\\"I64\\\", FontColor -> RGBColor[0.66, 0, 0], \
FontWeight -> Bold, FontVariations -> {}]\\) = \
\\!\\(\\*StyleBox[\\\"Call\\\", FontColor -> RGBColor[0.6, 0.4, 0.4], \
FontWeight -> Bold, FontVariations -> {\\\"Underline\\\" -> True}]\\) \
\\!\\(\\*TemplateBox[{TagBox[TooltipBox[StyleBox[\\\"\\\\\\\"Times\\\\\\\"\\\"\
,\\n\\t\\tFontColor -> GrayLevel[0.4], FontWeight -> \
Bold,\\n\\t\\tStripOnInput -> False], \
\\\"Native`PrimitiveFunction[\\\\\\\"LLVM`Times\\\\\\\"]\\\",\\n\\t\\\
tLabelStyle -> \\\"TextStyling\\\"], Annotation[#, \
\\\"Native`PrimitiveFunction[\\\\\\\"LLVM`Times\\\\\\\"]\\\", \
\\\"Tooltip\\\"]& ],\\n\\t\\tFrameStyle -> None, Background -> \
GrayLevel[0.94], ContentPadding -> \
False},\\\"Highlighted\\\"]\\):\\!\\(\\*StyleBox[\\\"(I64,I64)\[Rule]I64\\\", \
FontColor -> RGBColor[0.66, 0, 0], FontWeight -> Bold, FontVariations -> \
{}]\\) [\\!\\(\\*StyleBox[\\\"%63\\\", FontColor -> RGBColor[0.269, 0.538, \
0.356], FontWeight -> Bold, FontVariations -> {}]\\), \\!\\(\\*StyleBox[\\\"8\
\\\", FontColor -> GrayLevel[0.4], FontWeight -> Plain, FontVariations -> {}]\
\\):\\!\\(\\*StyleBox[\\\"I64\\\", FontColor -> RGBColor[0.66, 0, 0], \
FontWeight -> Bold, FontVariations -> {}]\\)] \\n\\!\\(\\*StyleBox[\\\"4\\\", \
FontColor -> GrayLevel[0.8], FontWeight -> Plain, FontVariations -> {}]\\)\\!\
\\(\\*StyleBox[\\\" |\\\", FontColor -> GrayLevel[0.9], FontWeight -> Plain, \
FontVariations -> {}]\\)\\t\\!\\(\\*StyleBox[\\\"%67\\\", FontColor -> \
RGBColor[0.269, 0.538, 0.356], FontWeight -> Bold, FontVariations -> \
{}]\\):\\!\\(\\*StyleBox[\\\"C[UI8]\\\", FontColor -> RGBColor[0.66, 0, 0], \
FontWeight -> Bold, FontVariations -> {}]\\) = \
\\!\\(\\*StyleBox[\\\"Call\\\", FontColor -> RGBColor[0.6, 0.4, 0.4], \
FontWeight -> Bold, FontVariations -> {\\\"Underline\\\" -> True}]\\) \
\\!\\(\\*TooltipBox[TemplateBox[{\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"Native`\
Allocate\\\\\\\", FontColor -> RGBColor[0.269, 0.538, 0.356], FontWeight -> \
Bold, FontVariations -> {}]\\\\)\\\", ContentPadding -> False, Background -> \
GrayLevel[0.98], FrameStyle -> {GrayLevel[0.4], Directive[Dashing[{Small, \
Small}]]}}, \\\"Highlighted\\\"], \
\\\"\\\\\\\"_Native__Allocate_F__Integer64_CArray_UnsignedInteger8\\\\\\\"\\\"\
]\\):\\!\\(\\*StyleBox[\\\"(I64)\[Rule]C[UI8]\\\", FontColor -> \
RGBColor[0.66, 0, 0], FontWeight -> Bold, FontVariations -> {}]\\) \
[\\!\\(\\*StyleBox[\\\"%64\\\", FontColor -> RGBColor[0.269, 0.538, 0.356], \
FontWeight -> Bold, FontVariations -> {}]\\)] \\n\\!\\(\\*StyleBox[\\\"5\\\", \
FontColor -> GrayLevel[0.8], FontWeight -> Plain, FontVariations -> {}]\\)\\!\
\\(\\*StyleBox[\\\" |\\\", FontColor -> GrayLevel[0.9], FontWeight -> Plain, \
FontVariations -> {}]\\)\\t\\!\\(\\*StyleBox[\\\"%69\\\", FontColor -> \
RGBColor[0.269, 0.538, 0.356], FontWeight -> Bold, FontVariations -> \
{}]\\):\\!\\(\\*StyleBox[\\\"C[Ptr[I64]]\\\", FontColor -> RGBColor[0.66, 0, \
0], FontWeight -> Bold, FontVariations -> {}]\\) = \\!\\(\\*StyleBox[\\\"Call\
\\\", FontColor -> RGBColor[0.6, 0.4, 0.4], FontWeight -> Bold, \
FontVariations -> {\\\"Underline\\\" -> True}]\\) \
\\!\\(\\*StyleBox[\\\"\\\\\\\"BitCast\\\\\\\"\\\", FontColor -> \
GrayLevel[0.4], FontWeight -> Bold, FontVariations -> \
{}]\\):\\!\\(\\*StyleBox[\\\"(C[UI8])\[Rule]C[Ptr[I64]]\\\", FontColor -> \
RGBColor[0.66, 0, 0], FontWeight -> Bold, FontVariations -> {}]\\) \
[\\!\\(\\*StyleBox[\\\"%67\\\", FontColor -> RGBColor[0.269, 0.538, 0.356], \
FontWeight -> Bold, FontVariations -> {}]\\)] \\n\\!\\(\\*StyleBox[\\\"6\\\", \
FontColor -> GrayLevel[0.8], FontWeight -> Plain, FontVariations -> {}]\\)\\!\
\\(\\*StyleBox[\\\" |\\\", FontColor -> GrayLevel[0.9], FontWeight -> Plain, \
FontVariations -> {}]\\)\\t\\!\\(\\*StyleBox[\\\"Return\\\", FontColor -> \
RGBColor[0.6, 0.4, 0.4], FontWeight -> Bold, FontVariations -> {\\\"Underline\
\\\" -> True}]\\) \\!\\(\\*StyleBox[\\\"%69\\\", FontColor -> RGBColor[0.269, \
0.538, 0.356], FontWeight -> Bold, FontVariations -> {}]\\) \
\\n\\n\\!\\(\\*StyleBox[\\\"(*************************************************\
*********)\\\\n(**********************************************************)\\\
\\n\\\", FontColor -> GrayLevel[0.4], FontWeight -> Plain, FontVariations -> \
{}]\\)\\n\\!\\(\\*StyleBox[\\\"_Native__Allocate_F__Integer64_CArray_\
UnsignedInteger8\\\", FontColor -> RGBColor[0.269, 0.538, 0.356], FontWeight \
-> Bold, FontVariations -> {}]\\)\\!\\(\\*StyleBox[\\\"::Information=\\\", \
FontColor -> GrayLevel[0.4], FontWeight -> Plain, FontVariations -> {}]\\){\\\
\"unmangledName\\\"->\\!\\(\\*RowBox[{\\\"Native`Allocate\\\"}]\\), \
\\\"inlineInformation\\\"->{<|\\\"inlineValue\\\" -> \\\"LLVMAlways\\\", \
\\\"isTrivial\\\" -> False|>}, \
\\\"ArgumentAlias\\\"->\\!\\(\\*RowBox[{\\\"False\\\"}]\\), \\\"Profile\\\"->\
\\!\\(\\*RowBox[{\\\"False\\\"}]\\), \\\"AbortHandling\\\"->\\!\\(\\*RowBox[{\
\\\"Automatic\\\"}]\\), \\\"LLVMAttributes\\\"->\\!\\(\\*RowBox[{\\\"\
\[LeftAssociation]\\\", RowBox[{RowBox[{\\\"\\\\\\\"Return\\\\\\\"\\\", \\\"\
\[Rule]\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\\\\\\\"noalias\\\\\\\"\\\", \
\\\",\\\", \\\"\\\\\\\"dereferenceable\\\\\\\"\\\"}], \\\"}\\\"}]}], \
\\\",\\\", RowBox[{\\\"\\\\\\\"Function\\\\\\\"\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"\\\\\\\"dso_local\\\\\\\"\\\", \\\",\\\", \\\"\
\\\\\\\"weak\\\\\\\"\\\"}], \\\"}\\\"}]}]}], \
\\\"\[RightAssociation]\\\"}]\\), \
\\\"Exported\\\"->\\!\\(\\*RowBox[{\\\"False\\\"}]\\)}\\n\\!\\(\\*StyleBox[\\\
\"_Native__Allocate_F__Integer64_CArray_UnsignedInteger8\\\", FontColor -> \
RGBColor[0.269, 0.538, 0.356], FontWeight -> Bold, FontVariations -> {}]\\) : \
\\!\\(\\*StyleBox[\\\"(Integer64)\[Rule]CArray[UnsignedInteger8]\\\", \
FontColor -> RGBColor[0.66, 0, 0], FontWeight -> Bold, FontVariations -> \
{}]\\)\\n\\!\\(\\*StyleBox[\\\"start18709(1)\\\", FontColor -> RGBColor[0.9, \
0.5, 0.2], FontWeight -> Plain, FontVariations -> {}]\\):  \
\\n\\!\\(\\*StyleBox[\\\"2\\\", FontColor -> GrayLevel[0.8], FontWeight -> \
Plain, FontVariations -> {}]\\)\\!\\(\\*StyleBox[\\\" |\\\", FontColor -> \
GrayLevel[0.9], FontWeight -> Plain, FontVariations -> \
{}]\\)\\t\\!\\(\\*StyleBox[\\\"%72\\\", FontColor -> RGBColor[0.269, 0.538, \
0.356], FontWeight -> Bold, FontVariations -> \
{}]\\):\\!\\(\\*StyleBox[\\\"I64\\\", FontColor -> RGBColor[0.66, 0, 0], \
FontWeight -> Bold, FontVariations -> {}]\\) = \
\\!\\(\\*StyleBox[\\\"LoadArgument\\\", FontColor -> RGBColor[0.6, 0.4, 0.4], \
FontWeight -> Bold, FontVariations -> {\\\"Underline\\\" -> True}]\\) \
\\!\\(\\*StyleBox[\\\"1\\\", FontColor -> GrayLevel[0.4], FontWeight -> Bold, \
FontVariations -> {}]\\) \\n\\!\\(\\*StyleBox[\\\"3\\\", FontColor -> \
GrayLevel[0.8], FontWeight -> Plain, FontVariations -> \
{}]\\)\\!\\(\\*StyleBox[\\\" |\\\", FontColor -> GrayLevel[0.9], FontWeight \
-> Plain, FontVariations -> {}]\\)\\t\\!\\(\\*StyleBox[\\\"%73\\\", FontColor \
-> RGBColor[0.269, 0.538, 0.356], FontWeight -> Bold, FontVariations -> \
{}]\\):\\!\\(\\*StyleBox[\\\"UI64\\\", FontColor -> RGBColor[0.66, 0, 0], \
FontWeight -> Bold, FontVariations -> {}]\\) = \
\\!\\(\\*StyleBox[\\\"Call\\\", FontColor -> RGBColor[0.6, 0.4, 0.4], \
FontWeight -> Bold, FontVariations -> {\\\"Underline\\\" -> True}]\\) \
\\!\\(\\*TemplateBox[{TagBox[TooltipBox[StyleBox[\\\"\\\\\\\"ReinterpretCast\\\
\\\\\"\\\",\\n\\t\\tFontColor -> GrayLevel[0.4], FontWeight -> \
Bold,\\n\\t\\tStripOnInput -> False], \
\\\"Native`PrimitiveFunction[\\\\\\\"LLVM`ReinterpretCast\\\\\\\"]\\\",\\n\\t\
\\tLabelStyle -> \\\"TextStyling\\\"], Annotation[#, \
\\\"Native`PrimitiveFunction[\\\\\\\"LLVM`ReinterpretCast\\\\\\\"]\\\", \
\\\"Tooltip\\\"]& ],\\n\\t\\tFrameStyle -> None, Background -> \
GrayLevel[0.94], ContentPadding -> \
False},\\\"Highlighted\\\"]\\):\\!\\(\\*StyleBox[\\\"(I64)\[Rule]UI64\\\", \
FontColor -> RGBColor[0.66, 0, 0], FontWeight -> Bold, FontVariations -> \
{}]\\) [\\!\\(\\*StyleBox[\\\"%72\\\", FontColor -> RGBColor[0.269, 0.538, \
0.356], FontWeight -> Bold, FontVariations -> {}]\\)] \\n\\!\\(\\*StyleBox[\\\
\"4\\\", FontColor -> GrayLevel[0.8], FontWeight -> Plain, FontVariations -> \
{}]\\)\\!\\(\\*StyleBox[\\\" |\\\", FontColor -> GrayLevel[0.9], FontWeight \
-> Plain, FontVariations -> {}]\\)\\t\\!\\(\\*StyleBox[\\\"%71\\\", FontColor \
-> RGBColor[0.269, 0.538, 0.356], FontWeight -> Bold, FontVariations -> \
{}]\\):\\!\\(\\*StyleBox[\\\"C[UI8]\\\", FontColor -> RGBColor[0.66, 0, 0], \
FontWeight -> Bold, FontVariations -> {}]\\) = \
\\!\\(\\*StyleBox[\\\"Call\\\", FontColor -> RGBColor[0.6, 0.4, 0.4], \
FontWeight -> Bold, FontVariations -> {\\\"Underline\\\" -> True}]\\) \
\\!\\(\\*StyleBox[\\\"\\\\\\\"RuntimeAllocate\\\\\\\"\\\", FontColor -> \
GrayLevel[0.4], FontWeight -> Bold, FontVariations -> \
{}]\\):\\!\\(\\*StyleBox[\\\"(UI64)\[Rule]C[UI8]\\\", FontColor -> \
RGBColor[0.66, 0, 0], FontWeight -> Bold, FontVariations -> {}]\\) \
[\\!\\(\\*StyleBox[\\\"%73\\\", FontColor -> RGBColor[0.269, 0.538, 0.356], \
FontWeight -> Bold, FontVariations -> {}]\\)] \\n\\!\\(\\*StyleBox[\\\"5\\\", \
FontColor -> GrayLevel[0.8], FontWeight -> Plain, FontVariations -> {}]\\)\\!\
\\(\\*StyleBox[\\\" |\\\", FontColor -> GrayLevel[0.9], FontWeight -> Plain, \
FontVariations -> {}]\\)\\t\\!\\(\\*StyleBox[\\\"Return\\\", FontColor -> \
RGBColor[0.6, 0.4, 0.4], FontWeight -> Bold, FontVariations -> {\\\"Underline\
\\\" -> True}]\\) \\!\\(\\*StyleBox[\\\"%71\\\", FontColor -> RGBColor[0.269, \
0.538, 0.356], FontWeight -> Bold, FontVariations -> {}]\\) \\n\"\>"], \
"Output",
 CellChangeTimes->{
  3.878659365462126*^9, {3.878659728329769*^9, 3.878659743744491*^9}},
 CellLabel->"Out[25]=",ExpressionUUID->"6f1854b3-70aa-4c87-be7d-6ab51015111e"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["TODO", "Section",
 CellChangeTimes->{{3.878167686523612*^9, 
  3.878167686947464*^9}},ExpressionUUID->"2678c1c2-9699-4775-b3f7-\
c754d1d32482"],

Cell["Make a version of CreateCallback that works on CCFs", "Item",
 CellChangeTimes->{{3.879848424416587*^9, 3.87984844356883*^9}, {
  3.883235598007255*^9, 
  3.883235598061735*^9}},ExpressionUUID->"9636e6e1-043e-4935-928e-\
76f4678f8bdf"],

Cell[CellGroupData[{

Cell["Notes from meeting", "Item",
 CellChangeTimes->{{3.879848424416587*^9, 3.87984844356883*^9}, {
  3.8832355985992403`*^9, 
  3.883235600878273*^9}},ExpressionUUID->"8d23f82d-b708-4710-b4ab-\
1b1d1a59632b"],

Cell[CellGroupData[{

Cell["\<\
Create a ForeignFunction head that replaces CreateForeignFunction and can be \
called as a subvalue.\
\>", "Subitem",
 CellChangeTimes->{{3.879848424416587*^9, 3.87984844356883*^9}, {
  3.8832355985992403`*^9, 
  3.883235635048236*^9}},ExpressionUUID->"25d83b8e-52f8-4a49-8e5f-\
a646f37c95bf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ForeignFunction", "[", 
   RowBox[{"name_String", ",", "type_"}], "]"}], ":=", 
  RowBox[{"ForeignFunction", "[", 
   RowBox[{"CreateForeignFunction", "[", 
    RowBox[{"name", ",", "type"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.883235797543989*^9, 3.883235829456024*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"13edd955-c3d8-42d7-bae3-a323e0c2e6b2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ForeignFunction", "[", "ff_", "]"}], "[", "args___", "]"}], ":=", 
  
  RowBox[{"CallForeignFunction", "[", 
   RowBox[{"ff", ",", 
    RowBox[{"{", "args", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8832358316652*^9, 3.883235852761982*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"8187abd4-7072-42fd-a4be-5551444c1da0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ForeignFunction", "[", 
   RowBox[{"\"\<addone\>\"", ",", 
    RowBox[{
     RowBox[{"{", "\"\<CInt\>\"", "}"}], "->", "\"\<CInt\>\""}]}], "]"}], "[",
   "5", "]"}]], "Input",
 CellChangeTimes->{{3.8832358540655737`*^9, 3.883235866665283*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"d45c97e3-b145-4895-a5a8-b9125b4037fc"],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{{3.8832358644000387`*^9, 3.883235867006468*^9}},
 CellLabel->"Out[67]=",ExpressionUUID->"ee4ee495-c28f-4d0f-9c3e-7d023d41ad18"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Experiments", "Section",
 CellChangeTimes->{{3.8751116222225924`*^9, 
  3.875111623373744*^9}},ExpressionUUID->"e7ee7826-7806-4fd7-bc58-\
187f528d57cd"],

Cell[CellGroupData[{

Cell["dlsym", "Subsection",
 CellChangeTimes->{{3.883156405304681*^9, 3.8831564067338867`*^9}, {
  3.883156440116651*^9, 
  3.883156441610445*^9}},ExpressionUUID->"e32804c5-5345-49e5-8ae5-\
b27e4ad90791"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cf", "=", 
  RowBox[{"FunctionCompile", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "CompiledComponent", "[", "\"\<ForeignFunctionInterface\>\"", "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Cast", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"LibraryFunction", "[", "\"\<dlsym\>\"", "]"}], "[", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"LibraryFunction", "[", "\"\<get_RTLD_DEFAULT\>\"", "]"}], 
           "[", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Typed", "[", 
           RowBox[{"\"\<ffi_type_uint8\>\"", ",", "\"\<CString\>\""}], 
           "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
        "\"\<UnsignedInteger64\>\"", ",", "\"\<BitCast\>\""}], "]"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",\

 CellChangeTimes->{{3.883156478028866*^9, 3.883156572135289*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"3c0d1402-4094-47a3-b244-129bc2fa7f0f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledCodeFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GraphicsBox[
             InsetBox[
              FormBox[
               StyleBox["\"Code\"", 
                GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
               TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], Axes -> 
             False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {27., {0., 10.}}], Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Signature: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", "}"}], "\[Rule]", "\"UnsignedInteger64\""}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GraphicsBox[
             InsetBox[
              FormBox[
               StyleBox["\"Code\"", 
                GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
               TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], Axes -> 
             False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {27., {0., 10.}}], Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Signature: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", "}"}], "\[Rule]", "\"UnsignedInteger64\""}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledCodeFunction[<|
   "Signature" -> TypeSpecifier[{} -> "UnsignedInteger64"], "Input" -> 
    Compile`Program[
      CompiledComponent["ForeignFunctionInterface"], 
      Function[{}, 
       Cast[
        LibraryFunction["dlsym"][
         LibraryFunction["get_RTLD_DEFAULT"][], 
         Typed["ffi_type_uint8", "CString"]], "UnsignedInteger64", 
        "BitCast"]]], "ErrorFunction" -> Automatic, "InitializationName" -> 
    "Initialization_9969dff7_b54d_403e_a829_ff9696551ed0", "ExpressionName" -> 
    "Main_ExprInvocation", "CName" -> "Main_CInvocation", "FunctionName" -> 
    "Main", "SystemID" -> "Linux-x86-64", "VersionData" -> {13.2, 0, 0}, 
    "CompiledIR" -> <|"Linux-x86-64" -> ByteArray[CompressedData["
1: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
        "]]|>, "ExternalLibraryPaths" -> {"libffi", "ffiConstants"}, 
    "orcInstance" -> 55549408, "orcModuleId" -> 35642912, "targetMachineId" -> 
    54893088|>, 140164121739488, 140164121739312, 140164121739376, 
   140164121739264, "{} -> \"UnsignedInteger64\""],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.883156542310499*^9, 3.8831565730217943`*^9}, 
   3.883156692528529*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"876ac938-4c21-478e-a0ac-322674c4fa3e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cf2", "=", 
  RowBox[{"FunctionCompile", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "CompiledComponent", "[", "\"\<ForeignFunctionInterface\>\"", "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Cast", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
         "ChristopherWolfram`ForeignFunctionInterface`LibFFI`RawFFIType", 
          "[", "\"\<UnsignedInteger8\>\"", "]"}], "[", "]"}], ",", 
        "\"\<UnsignedInteger64\>\"", ",", "\"\<BitCast\>\""}], "]"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",\

 CellChangeTimes->{{3.88315668365027*^9, 3.883156727604043*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"27c72b6b-f6fc-4e4d-b3d2-1b14f6a05bb3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledCodeFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GraphicsBox[
             InsetBox[
              FormBox[
               StyleBox["\"Code\"", 
                GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
               TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], Axes -> 
             False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {27., {0., 10.}}], Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Signature: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", "}"}], "\[Rule]", "\"UnsignedInteger64\""}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GraphicsBox[
             InsetBox[
              FormBox[
               StyleBox["\"Code\"", 
                GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
               TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], Axes -> 
             False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {27., {0., 10.}}], Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Signature: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", "}"}], "\[Rule]", "\"UnsignedInteger64\""}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledCodeFunction[<|
   "Signature" -> TypeSpecifier[{} -> "UnsignedInteger64"], "Input" -> 
    Compile`Program[
      CompiledComponent["ForeignFunctionInterface"], 
      Function[{}, 
       Cast[
        ChristopherWolfram`ForeignFunctionInterface`LibFFI`RawFFIType[
        "UnsignedInteger8"][], "UnsignedInteger64", "BitCast"]]], 
    "ErrorFunction" -> Automatic, "InitializationName" -> 
    "Initialization_6d36564c_3c4e_45bc_9c1d_edf43145a5a7", "ExpressionName" -> 
    "Main_ExprInvocation", "CName" -> "Main_CInvocation", "FunctionName" -> 
    "Main", "SystemID" -> "Linux-x86-64", "VersionData" -> {13.2, 0, 0}, 
    "CompiledIR" -> <|"Linux-x86-64" -> ByteArray[CompressedData["
1:eJyVVn1QU1cWvy955D0gvrwAxVCS+CLgxkrx5QOaGJgmBDEoupEyI521k7yQ
pKYihBD50roJQROV1qi0xa7didTptLt/LE5x1rbOTiBIWaUdtJ0t2zouFLRu
l1pa2Y67dT/uewnadv/azLx73j3vd88953fOvScKR0udAwEADKwAoNIcv1Ga
A0AanDuEdOHmp//gfuH74d9lbg/UshiFEIAYD4BMngJAAXLhgwULjpsm0BoB
qdafQHqFRWl4nhw96ghINvIqT2RWjpHqHB0u2ZKhdkQs3jFFQVVWuI80neA5
J/BzOZS5OkL9EVE7eiWPKR+LqvYP7TxOjU9Au4cpAFRQqldH0ilHNVCsKxyQ
KIrgkPcz4cGzUbvDuZMqdPfMrLiF83i3cOMIylvRhpIK58w3zzuOVlSt7h3U
1dqt6k1A0Ibiqo8lTOtt1aVr+DbzVTyQ98YlRcZ6zxEl860+3BU9GLmo9A3a
Xj0xVOxUFG0VF9U+2Vpxdb3ugyrtyX4eUsQBD//t8AH2ZfOlOlpYnedxXxh+
QafZeaXy1+I3Dho1O4+aBxXDbiQixQd4VNA6Wh8789Jjz7G8bZcAsAbK/MjM
f+APo4RlulH2TRRYCw6AOLKIBdClEYETD6AN4LmQCY3zrPl9DpAb+NQuQYeA
fwjRoxSSG/vUSIFok/EEsATS3iyjjoDCOG9qRND4D9YaQqdBy2QtiI4KBsWg
bprSs+onwRvgHgKw+CqQRQqMq6C1YCc6A5FWcJp1D9RA/3Aos3vsPZQwWzBI
r0Hf70Vq+tMTo9psNHyKLM/mQUC2fH+cb7iXZoiFygLh1l38dgvW8Sa2f9qe
cXNK8FUMg+MihXUArJvGfDGsjcL2AJHPi7Vy76wyCYDvdswfw9qN2J4oAUd2
OiW4FcC8MayVwjqnBHcCWDeJtScXcl/fJjFfANsswsVZxkN9/QDRVg6c/vfI
ef3+38962p8mjnywU71S6DxwxTQ5/N6L2GxrGXm5evfhj5Zy8Jv7P7uypxVC
ZhuovNo1W965syDLohCeBgaNwieICt8qdAAAaw6QgOUkGlC8VFRkZNnhSh2A
LPpsZUjfyQLgIu5Lod1yPtOKgjhgl7IwCjH/Zm9ECSyQrQALwUG6pO6bxBgC
rOyM01ni0S+LVotwwAcguYORd6jeLg4iJMBS60AAuvT5YBafAvDQcS4B1tSp
6irBj7yizpli3jehiVycO7dq+QCZJ66N9qWv2TSOmnnVUHcO5vc1KDV4QDo2
K3XnIBURs6430VcZwLo6sbaBVuEtIPqKJJYChEZYKR8dkX14Ruqm0zhYKH+S
XzFhrujjV0x29vm92D4c67KEvV6s28tv7wx7qXDepJhYiBKztKiZFs0tEotW
QkOOyW4opNMK2Sgjd9OHDRdDhimzfphffjFU3ss3TC7mtNuxfbuwJ3aFfXAM
hL3RsNeOtSux9ntp0GxHIGzDw62SsG8g3DUQLL6zSNyZIf4eJxZovmPijHT+
jHSSG68z0ssK6VhQdpkR/Clq1k+Y9QPceCGh6zfrInxDf2I93PR+j+FjvmEo
IXzfE/Y2hH3ekH8X1mkP+yVhfyyc9+FTojtA9K2VmI8Sc0bRLEUswCgopez6
iHzUJL+mkF4Pyq/PSOdnZV8icrdku27IvOF0yDBpLUwFYg93dGKdA9trl6Ii
lgH5c/LLjPS2QnZjRHYAkbMOK2SLjKD+YEg3mTAMmSsgIfdHy+fNhgicJvou
ZcBIwx3QHxzrVmK+geDOOZJYiBM3rcRdumDkmkk+P7tyelZ2AzpgyTMMhSqG
Q/m9CV2fWT+ZKL8wop9IwBjLJy3DrTgGvWqFBDaE8z4bJxbsoq9m4NkT3aRF
NynRd1aimSTmaAJO784I/jpDzFuJe3TB5wuMdDQom55duaCQ3VLIxhQymMHb
ilVu6jXDRXPFBb6+P6SfbLgIsw+D7YZ+WsIdXshemLhJEouct1/TxN0osWQl
2ALtgmdKDaVPbqHMEWFeuk9toQqCfcePX62KkUpnuUpd+WJU8bqOnAFPSe1g
R0uT28fsocwte7yeJpePUpeoNCXqEppyt/ioWk/z3k6qU1dGKcu0jzs8/rWU
cltLu2uPAyJVumJKTavVa+t37aVUemoz08zONZSqbINGt0Gr06AjwiBtpics
9p46pvHt3W01BevaXs8vknz7zr5GzcnM3W3n1p381ZZ9bflFVN27KZX4t1sa
C74f3LJ7XX6RErwFz5ICxpOZ4VPCGsW6G7wDkJcErAb9VKLnlnT8zIrbJvYI
3WKJY3Ofq52zE19YYUmJ5tnCEn1hJZaGAkGsS8lVfGe4NZnvBu/phG4YMZwN
VfQneLvh4ZFen5Vep6TzDDveDspHGenUGelEMknIVXgVCdgePFl+NmQ4DQud
XxELlcOijybYG4OB3LO3RzY6EkGQXkpSuFlQCfPOXnnsXTFurDc6V8UVW43a
f50vzXmEnC3lLhV2nZxbZy4mU1cN+jF4vAAUARRhXlaQPcEjl0jcHhKHeLiJ
BvyDkjLq7GrgTu/xwrVs4nOv4kRC98Iq8cmvy1fGUu8fpVNpQ5axY3cxLw2u
3b/QTGZdo7J5xRZBbeQj/zYzAA/2z+H2N3H7s7EM9wFQIEDJHnu0PA8/hb6b
EFRRZDxr1pjsXbkMjOX7SI0URnH+2HTVanBt6efTZml8BFju/sXwwG72T+wW
9j+wq83D/5wflKgtr/D6hfkkYgKPEijL73d2zrYpaTtlsvyhr3WczU2cTRZf
2AdyTOlTdbwCcNCKpkmMn+Ac1g+5YyB3J3aTj/bQ7zpCYj4f0rdYOD9QhFcL
Myh0BAgLz7pCCemKfN6aM0YqsWKEL3hbmCbuk0iMeE+wY+1ksYnOPifYUpWh
EY9mHa+0Ycyr/9wg7O83sYwYyXht1fmqs9FD7yX5GUIUvQgCV+NwtcRfr7pO
VtnpK3YUUfBOHSZfjuQcWhExUgHhqzKVLotE+Wo8FOeFGP7nmbj9ZQrH2Nzn
sTXGZazjl6gFKc76Zu67NGVPgt42t2nMz38/Z/vYsU92eGvFG+/fe17ATedy
K+9lPXIaUnO06r5uz8of53ngSCo904d+UCYcR61UkkM1Qa7uRZb4OsoSQAfR
hsCWgOADNMm5Cxb1L9jmx++fYf2DfRR8Ap/18KlN5bUhVUuszISPPdlCgQBK
EZSPQPkkayOFW/4OUniQ+ob+QLL/pkBh8n8vq1uWrB6HeiXbY8FDuYxnfWVr
Y1ku6+uRZD3uho94Wa8DYD9I6pflMv5YCnfsB3h231hqHvuJ/hwbJ3gol/Xj
Kdz4T/DLMS9Lbl8yOX8Gcv5MkvMvWM49zR6/h2nydDN+T0tzVUuzayvjaX7W
5be53R6bv8vrsu31NPt1NT/C2cqcmrLSMm2jTdOoddm0pY5Gm75R5bS5nG6t
RqUtZUqZJ1hDNnNNc3tLI7eIm+/wMV6vy2czM01NnGJjp9f3ELPN1WFbbhkb
fb4WX5vLv7Gz0eVlPz7l72pyQVzjrgcqC9PshFCzz8X4XTXNftezcB20qNKW
0CVl1BNuNVPqcNK6RrdORWuYUpe+1MnQZS5NqVajY9w6rd6pVzl0sBPZYCPy
Nj7exHamHVsftK3/u2mVdDSV1P5PqBz3/wXe7Bo1
        "]]|>, "ExternalLibraryPaths" -> {"libffi", "ffiConstants"}, 
    "orcInstance" -> 56634304, "orcModuleId" -> 55708256, "targetMachineId" -> 
    54796976|>, 140164121731216, 140164121731088, 140164121731152, 
   140164121731072, "{} -> \"UnsignedInteger64\""],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.883156689018909*^9, 3.8831567288942833`*^9}},
 CellLabel->"Out[15]=",ExpressionUUID->"42f10064-62d5-434f-8edb-07e729d4a7a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RepeatedTiming", "@", 
  RowBox[{"cf", "[", "]"}]}]], "Input",
 CellChangeTimes->{{3.8831565374549513`*^9, 3.883156538021603*^9}, {
  3.8831566661632957`*^9, 3.8831566676745453`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"238f80e2-06cf-4f70-b441-5178749f2a1a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.0234260559082031`*^-6", ",", "140157035856224"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.883156559070857*^9, 3.8831565750965347`*^9}, 
   3.883156669012274*^9, {3.883156731752904*^9, 3.883156746478264*^9}},
 CellLabel->"Out[19]=",ExpressionUUID->"fb837e40-43f3-4205-9390-74968dc19f8a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RepeatedTiming", "@", 
  RowBox[{"cf2", "[", "]"}]}]], "Input",
 CellChangeTimes->{3.8831567342771597`*^9},
 CellLabel->"In[18]:=",ExpressionUUID->"4e83bce8-80dc-472d-ba8c-639979cd7f1f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.6812252998352052`*^-7", ",", "140157035856224"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8831567360446653`*^9, 3.883156744750019*^9}},
 CellLabel->"Out[18]=",ExpressionUUID->"51ab3398-04ac-4eac-a7a7-6758daaf2f6e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"CreateForeignFunction", "[", 
   RowBox[{"\"\<addone\>\"", ",", 
    RowBox[{
     RowBox[{"{", "\"\<CInt\>\"", "}"}], "->", "\"\<CInt\>\""}]}], "]"}], "//",
   "RepeatedTiming"}]], "Input",
 CellChangeTimes->{{3.880382398196877*^9, 3.8803824135347967`*^9}, {
  3.880502347255947*^9, 3.880502347694785*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"15016f83-4ca6-4fc7-802c-0e0a95df773b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.3462867736816405`*^-6", ",", 
   TagBox[
    TemplateBox[{
      RowBox[{
        StyleBox[
         TagBox["TypeProduct", "SummaryHead"], "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{
         Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 GraphicsBox[
                  InsetBox[
                   FormBox[
                    StyleBox["\"BasicF\"", 
                    GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
                    TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], 
                  Axes -> False, AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                  Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 GraphicsBox[
                  InsetBox[
                   FormBox[
                    StyleBox["\"BasicF\"", 
                    GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
                    TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], 
                  Axes -> False, AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                  Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
          "SummaryPanel"], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->(
      "DataStructure[ForeignFunctionObject, $Failed]"& )],
    False,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.883156777887188*^9, 3.883156780570595*^9}},
 CellLabel->"Out[22]=",ExpressionUUID->"7b138d4b-941a-471a-9719-c0bea0c23243"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ListToBuffer / BufferToList", "Subsection",
 CellChangeTimes->{{3.881716802566779*^9, 
  3.8817168089833107`*^9}},ExpressionUUID->"2aff3fb6-9ae6-45b2-8d22-\
f2e3736fb34f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LibraryLoad", "[", "\"\<compilerDemoBase\>\"", "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.878160315790765*^9, 3.878160321206682*^9}, 
   3.8787404597394238`*^9},
 CellLabel->"In[8]:=",ExpressionUUID->"7272336c-0a9b-474a-be3c-916170615a14"],

Cell[CellGroupData[{

Cell["populateArray", "Subsubsection",
 CellChangeTimes->{{3.87839937060256*^9, 
  3.8783993832348337`*^9}},ExpressionUUID->"826d099d-b3ce-4648-a74f-\
7fa69f383666"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"populateArray", "=", 
  RowBox[{"CreateForeignFunction", "[", 
   RowBox[{"\"\<populateArray\>\"", ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<OpaqueRawPointer\>\"", ",", "\"\<CLong\>\""}], "}"}], 
     "->", "\"\<CInt\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.878160323454307*^9, 3.878160326494378*^9}, {
  3.878230171119422*^9, 3.87823017186165*^9}, {3.87839938500382*^9, 
  3.8783994038919897`*^9}, {3.880508225791162*^9, 3.8805082318567953`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"564a49b8-33fa-40b7-9620-36ef8d15e314"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TypeProduct", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
                  TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
                  TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"], 
       DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "DataStructure[ForeignFunctionObject, $Failed]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8781603277206373`*^9, 3.8781653695197*^9, 3.8781656458589478`*^9, 
   3.878168122523356*^9, 3.878223176780526*^9, 3.8782301729002953`*^9, 
   3.8783495469097137`*^9, 3.8783994066098747`*^9, 3.8786523988890543`*^9, 
   3.878746673706753*^9, 3.878747370582423*^9, 3.87875166702433*^9, 
   3.878754001449292*^9, 3.8787772452732964`*^9, 3.878779165753319*^9, 
   3.878779435721386*^9, {3.879555529466498*^9, 3.879555546228342*^9}, 
   3.879555964304117*^9, 3.879556445952958*^9, 3.879561965695459*^9, 
   3.8796027018234243`*^9, 3.879608409071542*^9, {3.880508223559552*^9, 
   3.880508232208712*^9}, 3.8805086675647078`*^9, 3.8805098260753717`*^9, 
   3.881716813802404*^9, 3.881717427982291*^9, 3.88171772157563*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"d5dcbbb9-aafc-4f11-a8ac-65cc2998b8b7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"array", "=", 
  RowBox[{"CreateManagedExpression", "[", 
   RowBox[{
    RowBox[{"CreateBuffer", "[", 
     RowBox[{"\"\<CLong\>\"", ",", "100"}], "]"}], ",", "DeleteBuffer"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.878399408813304*^9, 3.878399432780897*^9}, {
   3.87877724677135*^9, 3.8787772484904327`*^9}, {3.87955554958391*^9, 
   3.879555556620393*^9}, 3.8805082357665358`*^9, {3.880509805912488*^9, 
   3.8805098065251226`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"7a3757ff-210e-4367-a4c0-0e160cabf8ff"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TypeProduct", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
                  TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ManagedExpression\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
                  TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ManagedExpression\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"], 
       DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("DataStructure[ManagedExpression, $Failed]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8783994334371367`*^9, 3.878652399709537*^9, {3.878747371145557*^9, 
   3.878747373272717*^9}, {3.878747411424608*^9, 3.878747419684375*^9}, 
   3.878751668330263*^9, 3.878751748039283*^9, 3.8787540023039103`*^9, 
   3.878777248929564*^9, 3.8787791668724813`*^9, 3.878779436559739*^9, 
   3.87955555684929*^9, 3.879555965126411*^9, 3.87955644672745*^9, 
   3.87956196626367*^9, 3.879602702553514*^9, 3.879608409873424*^9, 
   3.8805082367250357`*^9, 3.880508668469553*^9, {3.8805098086707773`*^9, 
   3.880509827795372*^9}, 3.881716814632028*^9, 3.881717428753901*^9, 
   3.881717722110407*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"4797d711-6d65-461d-93eb-dfcb15158eec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CallForeignFunction", "[", 
  RowBox[{"populateArray", ",", 
   RowBox[{"{", 
    RowBox[{"array", ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8783994369497423`*^9, 3.878399441141177*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"a6fe7918-d87b-4de1-8c7a-27aca59f9936"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.878165373104856*^9, 3.8781656465694103`*^9, 3.878168123294882*^9, 
   3.8782231776541357`*^9, 3.878230173447999*^9, 3.878349547635021*^9, {
   3.87839944239183*^9, 3.8783994440621233`*^9}, 3.878652400407364*^9, 
   3.878747374409772*^9, 3.878747420665948*^9, 3.8787516710263567`*^9, 
   3.878751750212598*^9, 3.8787540065291557`*^9, 3.878777250254043*^9, 
   3.878779167899413*^9, 3.87877943723949*^9, 3.879555558419228*^9, {
   3.879555966930622*^9, 3.879555974845799*^9}, 3.879556448142111*^9, 
   3.879561966923608*^9, 3.879602703320919*^9, 3.879608410597583*^9, 
   3.8805082421242647`*^9, 3.880508669287651*^9, 3.880509828361354*^9, 
   3.88171681813834*^9, 3.881717429456818*^9, 3.881717722772225*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"677e9944-5b87-44d4-a7a2-edbbc56a5321"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BufferToList", "[", 
  RowBox[{"array", ",", "\"\<CLong\>\"", ",", "100"}], "]"}]], "Input",
 CellChangeTimes->{{3.881716819297098*^9, 3.881716824663677*^9}, {
  3.88171743484021*^9, 3.881717442159074*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"a70788af-5dac-40b4-aecd-f48f06befc46"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "4", ",", "9", ",", "16", ",", "25", ",", "36", ",", 
   "49", ",", "64", ",", "81", ",", "100", ",", "121", ",", "144", ",", "169",
    ",", "196", ",", "225", ",", "256", ",", "289", ",", "324", ",", "361", 
   ",", "400", ",", "441", ",", "484", ",", "529", ",", "576", ",", "625", 
   ",", "676", ",", "729", ",", "784", ",", "841", ",", "900", ",", "961", 
   ",", "1024", ",", "1089", ",", "1156", ",", "1225", ",", "1296", ",", 
   "1369", ",", "1444", ",", "1521", ",", "1600", ",", "1681", ",", "1764", 
   ",", "1849", ",", "1936", ",", "2025", ",", "2116", ",", "2209", ",", 
   "2304", ",", "2401", ",", "2500", ",", "2601", ",", "2704", ",", "2809", 
   ",", "2916", ",", "3025", ",", "3136", ",", "3249", ",", "3364", ",", 
   "3481", ",", "3600", ",", "3721", ",", "3844", ",", "3969", ",", "4096", 
   ",", "4225", ",", "4356", ",", "4489", ",", "4624", ",", "4761", ",", 
   "4900", ",", "5041", ",", "5184", ",", "5329", ",", "5476", ",", "5625", 
   ",", "5776", ",", "5929", ",", "6084", ",", "6241", ",", "6400", ",", 
   "6561", ",", "6724", ",", "6889", ",", "7056", ",", "7225", ",", "7396", 
   ",", "7569", ",", "7744", ",", "7921", ",", "8100", ",", "8281", ",", 
   "8464", ",", "8649", ",", "8836", ",", "9025", ",", "9216", ",", "9409", 
   ",", "9604", ",", "9801"}], "}"}]], "Output",
 CellChangeTimes->{
  3.881716824906704*^9, {3.881717430776792*^9, 3.8817174430243883`*^9}, 
   3.881717723780251*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"24aa19f5-f03b-4cb5-abc8-2932d24a6446"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "@", 
  RowBox[{"BufferToNumericArray", "[", 
   RowBox[{"array", ",", "\"\<CLong\>\"", ",", "100"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.878399446446816*^9, 3.8783994662380943`*^9}, {
   3.878779171698395*^9, 3.878779172481444*^9}, {3.87955597729585*^9, 
   3.879555980727894*^9}, 3.880508246509198*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"836e4113-f533-47f2-9fb9-da43ce12defa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "4", ",", "9", ",", "16", ",", "25", ",", "36", ",", 
   "49", ",", "64", ",", "81", ",", "100", ",", "121", ",", "144", ",", "169",
    ",", "196", ",", "225", ",", "256", ",", "289", ",", "324", ",", "361", 
   ",", "400", ",", "441", ",", "484", ",", "529", ",", "576", ",", "625", 
   ",", "676", ",", "729", ",", "784", ",", "841", ",", "900", ",", "961", 
   ",", "1024", ",", "1089", ",", "1156", ",", "1225", ",", "1296", ",", 
   "1369", ",", "1444", ",", "1521", ",", "1600", ",", "1681", ",", "1764", 
   ",", "1849", ",", "1936", ",", "2025", ",", "2116", ",", "2209", ",", 
   "2304", ",", "2401", ",", "2500", ",", "2601", ",", "2704", ",", "2809", 
   ",", "2916", ",", "3025", ",", "3136", ",", "3249", ",", "3364", ",", 
   "3481", ",", "3600", ",", "3721", ",", "3844", ",", "3969", ",", "4096", 
   ",", "4225", ",", "4356", ",", "4489", ",", "4624", ",", "4761", ",", 
   "4900", ",", "5041", ",", "5184", ",", "5329", ",", "5476", ",", "5625", 
   ",", "5776", ",", "5929", ",", "6084", ",", "6241", ",", "6400", ",", 
   "6561", ",", "6724", ",", "6889", ",", "7056", ",", "7225", ",", "7396", 
   ",", "7569", ",", "7744", ",", "7921", ",", "8100", ",", "8281", ",", 
   "8464", ",", "8649", ",", "8836", ",", "9025", ",", "9216", ",", "9409", 
   ",", "9604", ",", "9801"}], "}"}]], "Output",
 CellChangeTimes->{{3.878399451274138*^9, 3.878399467823148*^9}, 
   3.878652401224923*^9, 3.878747375513054*^9, 3.878751671898891*^9, 
   3.878751750975716*^9, 3.8787772511180353`*^9, 3.878779174310328*^9, 
   3.878779437976334*^9, 3.8795559787003393`*^9, 3.87955644878776*^9, 
   3.87956196750008*^9, 3.879602703819291*^9, 3.879608411214704*^9, 
   3.880508246825837*^9, 3.8805086701152563`*^9, 3.880509830434992*^9, 
   3.881717725187307*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"eb428e5e-92f1-41de-9d50-54ba8c1cf9bd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["sumArray", "Subsubsection",
 CellChangeTimes->{{3.878399477758609*^9, 
  3.878399479446335*^9}},ExpressionUUID->"3d075ca6-7cde-40bc-a160-\
19f7dc4bd878"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sumArray", "=", 
  RowBox[{"CreateForeignFunction", "[", 
   RowBox[{"\"\<sumArray\>\"", ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<OpaqueRawPointer\>\"", ",", "\"\<CLong\>\""}], "}"}], 
     "->", "\"\<CLong\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.878160323454307*^9, 3.878160326494378*^9}, {
  3.878230171119422*^9, 3.87823017186165*^9}, {3.87839938500382*^9, 
  3.8783994038919897`*^9}, {3.8783994870796337`*^9, 3.878399504448016*^9}, {
  3.880508676913781*^9, 3.880508682672234*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"bde46fbb-2816-421f-9129-51a029a052ed"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TypeProduct", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
                  TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
                  TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"], 
       DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "DataStructure[ForeignFunctionObject, $Failed]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8781603277206373`*^9, 3.8781653695197*^9, 3.8781656458589478`*^9, 
   3.878168122523356*^9, 3.878223176780526*^9, 3.8782301729002953`*^9, 
   3.8783495469097137`*^9, 3.8783994066098747`*^9, 3.878399504708488*^9, 
   3.878652403835967*^9, {3.878747403052347*^9, 3.878747409778862*^9}, 
   3.878751752500966*^9, 3.87875401230505*^9, 3.878777253764864*^9, 
   3.878779175897537*^9, 3.8787794396464653`*^9, 3.879556450705558*^9, {
   3.879561852247593*^9, 3.879561860002016*^9}, 3.8796027064352293`*^9, 
   3.879608413122732*^9, 3.880508682927547*^9, 3.8805098353057957`*^9, 
   3.88171750767555*^9, 3.8817177267749434`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"026faffe-2d59-4e15-9dcb-e42bea0bdd95"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"array2", "=", 
  RowBox[{"ListToBuffer", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0", ",", "1", ",", "4", ",", "9", ",", "16", ",", "25", ",", "36", ",", 
      "49", ",", "64", ",", "81", ",", "100", ",", "121", ",", "144", ",", 
      "169", ",", "196", ",", "225", ",", "256", ",", "289", ",", "324", ",", 
      "361", ",", "400", ",", "441", ",", "484", ",", "529", ",", "576", ",", 
      "625", ",", "676", ",", "729", ",", "784", ",", "841", ",", "900", ",", 
      "961", ",", "1024", ",", "1089", ",", "1156", ",", "1225", ",", "1296", 
      ",", "1369", ",", "1444", ",", "1521", ",", "1600", ",", "1681", ",", 
      "1764", ",", "1849", ",", "1936", ",", "2025", ",", "2116", ",", "2209",
       ",", "2304", ",", "2401", ",", "2500", ",", "2601", ",", "2704", ",", 
      "2809", ",", "2916", ",", "3025", ",", "3136", ",", "3249", ",", "3364",
       ",", "3481", ",", "3600", ",", "3721", ",", "3844", ",", "3969", ",", 
      "4096", ",", "4225", ",", "4356", ",", "4489", ",", "4624", ",", "4761",
       ",", "4900", ",", "5041", ",", "5184", ",", "5329", ",", "5476", ",", 
      "5625", ",", "5776", ",", "5929", ",", "6084", ",", "6241", ",", "6400",
       ",", "6561", ",", "6724", ",", "6889", ",", "7056", ",", "7225", ",", 
      "7396", ",", "7569", ",", "7744", ",", "7921", ",", "8100", ",", "8281",
       ",", "8464", ",", "8649", ",", "8836", ",", "9025", ",", "9216", ",", 
      "9409", ",", "9604", ",", "9801"}], "}"}], ",", "\"\<CLong\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.881717510851191*^9, 3.8817175275787783`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"2b01c57b-81a3-476e-9f65-711bd9ead6c3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["OpaqueRawPointer",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["140081074485056", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["140081074485056", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ChristopherWolfram`ForeignFunctionInterface`OpaqueRawPointer[
  140081074485056],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.881717523647073*^9, 3.881717527790847*^9}, 
   3.881717727304439*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"348e80d5-bfe4-4c35-b617-4a3bb58bf746"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CallForeignFunction", "[", 
  RowBox[{"sumArray", ",", 
   RowBox[{"{", 
    RowBox[{"array", ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8783994369497423`*^9, 3.878399441141177*^9}, {
   3.878399512624567*^9, 3.878399513568123*^9}, {3.878652411097744*^9, 
   3.878652415513442*^9}, 3.881717530043084*^9},
 CellLabel->"In[16]:=",ExpressionUUID->"8f20dc1c-c057-4b86-8eb1-bc224bbef830"],

Cell[BoxData["328350"], "Output",
 CellChangeTimes->{
  3.878165373104856*^9, 3.8781656465694103`*^9, 3.878168123294882*^9, 
   3.8782231776541357`*^9, 3.878230173447999*^9, 3.878349547635021*^9, {
   3.87839944239183*^9, 3.8783994440621233`*^9}, {3.8783995139274883`*^9, 
   3.878399515116658*^9}, {3.878652404486779*^9, 3.878652415903687*^9}, 
   3.8787474220164337`*^9, 3.8787517530838423`*^9, 3.878777254396837*^9, 
   3.8787791765423317`*^9, 3.878779440214058*^9, 3.879556451382465*^9, 
   3.879561972554782*^9, 3.879602707057417*^9, 3.879608413654044*^9, 
   3.880508684444847*^9, {3.881717508483917*^9, 3.881717531503145*^9}, 
   3.881717728902528*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"4c055d29-b863-4279-830f-bcae603aa326"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CallForeignFunction", "[", 
  RowBox[{"sumArray", ",", 
   RowBox[{"{", 
    RowBox[{"array2", ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.881717534026813*^9},
 CellLabel->"In[17]:=",ExpressionUUID->"bb207708-2e33-4f58-b59f-d2aada94c550"],

Cell[BoxData["328350"], "Output",
 CellChangeTimes->{3.88171753467581*^9, 3.881717729603764*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"ad151c6e-97e0-4907-9241-f6bac67556c1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["PopulateBuffer", "Subsubsection",
 CellChangeTimes->{{3.881713842877748*^9, 
  3.8817138446411877`*^9}},ExpressionUUID->"bd3414da-025a-45bb-9b27-\
aa9003e9a9e2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"buf", "=", 
  RowBox[{"CreateBuffer", "[", "\"\<CInt\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.881713845642106*^9, 3.8817138556660423`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"3c52a8c8-e20f-4ec3-8a8c-009767c6faab"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["OpaqueRawPointer",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["139991132935216", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["139991132935216", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ChristopherWolfram`ForeignFunctionInterface`OpaqueRawPointer[
  139991132935216],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.881714023878162*^9, 3.88171426351346*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"bd933eee-ef53-42d2-bad8-ffdaf1620f4e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PopulateBuffer", "[", 
  RowBox[{"buf", ",", "\"\<CInt\>\"", ",", "12"}], "]"}]], "Input",
 CellChangeTimes->{{3.881714049483086*^9, 3.8817140565296297`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"7b1e8e9a-e111-47db-83af-eed00e102002"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["OpaqueRawPointer",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["139991132935216", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["139991132935216", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ChristopherWolfram`ForeignFunctionInterface`OpaqueRawPointer[
  139991132935216],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.881714264291431*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"bc90faea-8010-4057-81ce-434007580e63"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DereferenceBuffer", "[", 
  RowBox[{"buf", ",", "\"\<CInt\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8817140702109013`*^9, 3.881714075898435*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"f6597706-7913-4760-9b14-5e6abf8b161b"],

Cell[BoxData["12"], "Output",
 CellChangeTimes->{3.8817140761369543`*^9, 3.8817142655556383`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"d999382b-6537-48e0-b249-e90499acfe46"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Structs", "Subsubsection",
 CellChangeTimes->{{3.881717754346706*^9, 
  3.881717756970702*^9}},ExpressionUUID->"ad563fc7-3f8d-47c4-a417-\
78864e64b8c2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"buf", "=", 
  RowBox[{"ListToBuffer", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"3", ",", "4.5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5", ",", "7.8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "5"}], "}"}]}], "}"}], ",", 
    RowBox[{"\"\<ListTuple\>\"", "::[", 
     RowBox[{"\"\<CInt\>\"", ",", "\"\<CDouble\>\""}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.881717761412097*^9, 3.881717811118533*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"3f5e01ad-b0a9-44a3-9dc0-2ba989d1fdf9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["OpaqueRawPointer",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["140081634160832", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["140081634160832", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ChristopherWolfram`ForeignFunctionInterface`OpaqueRawPointer[
  140081634160832],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8817177869176207`*^9, 3.881717811833775*^9}},
 CellLabel->"Out[23]=",ExpressionUUID->"9fdc68fc-d1e4-4e26-a204-1e4f2e597277"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BufferToList", "[", 
  RowBox[{"buf", ",", 
   RowBox[{"\"\<ListTuple\>\"", "::[", 
    RowBox[{"\"\<CInt\>\"", ",", "\"\<CDouble\>\""}], "]"}], ",", "3"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.881717790245255*^9, 3.881717805190339*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"9d134b55-c77f-49a8-b9c6-15f168ff169e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "4.5`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "7.8`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "5.`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8817177953821993`*^9, 3.881717812632842*^9}},
 CellLabel->"Out[24]=",ExpressionUUID->"39762100-f593-447d-a100-e009dca54c1e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Structs", "Subsection",
 CellChangeTimes->{{3.8804647480808983`*^9, 
  3.880464750289105*^9}},ExpressionUUID->"708b3ce7-d1cf-41dd-876a-\
53f9376f19d6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ldiv", "=", 
  RowBox[{"CreateForeignFunction", "[", 
   RowBox[{"\"\<ldiv\>\"", ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<CLong\>\"", ",", "\"\<CLong\>\""}], "}"}], "->", 
     RowBox[{"\"\<ListTuple\>\"", "::[", 
      RowBox[{"\"\<CLong\>\"", ",", "\"\<CLong\>\""}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.880464773765046*^9, 3.880464796097618*^9}, {
  3.880464838477479*^9, 3.880464851943266*^9}, {3.880470867063139*^9, 
  3.880470871798008*^9}, {3.881155164065385*^9, 3.8811551644723053`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"94b2c50c-af6a-4eeb-8c2a-ae625c856568"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TypeProduct", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"], 
       DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "DataStructure[ForeignFunctionObject, $Failed]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.880464783731385*^9, 3.880464796508972*^9}, {
   3.880464843010414*^9, 3.880464844869919*^9}, 3.880469036193499*^9, {
   3.8804708541316547`*^9, 3.880470872130686*^9}, 3.8804840418234863`*^9, 
   3.8811551648538837`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"a2fa5871-db87-4517-a7c2-ce8873c2e59d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CallForeignFunction", "[", 
  RowBox[{"ldiv", ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.880464803613106*^9, 3.880464808628798*^9}, {
  3.880471005441235*^9, 3.8804710257144833`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"299de88b-98b8-450a-b1b9-7899f2dc2857"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{
  3.880464808966731*^9, {3.8804708555066442`*^9, 3.880470873390829*^9}, {
   3.880471007302816*^9, 3.880471026319149*^9}, 3.880484042266687*^9, 
   3.88115516605717*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"cfd056e9-3658-4288-969a-279a7df74551"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LibraryLoad", "[", 
  "\"\<~/git/ForeignFunctionInterface/CExperiments/testlib\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.88048387046017*^9, 3.880483910579458*^9}, {
  3.880484889669269*^9, 3.880484893072098*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"239ea184-a2a2-4c6c-b3fd-6a344163b29a"],

Cell[BoxData["\<\"/Users/christopher/git/ForeignFunctionInterface/\
CExperiments/testlib\"\>"], "Output",
 CellChangeTimes->{
  3.8804848933811913`*^9, 3.880484996393364*^9, {3.880538966125267*^9, 
   3.8805389728146257`*^9}, {3.880551109695813*^9, 3.880551117265294*^9}, 
   3.8805524790181503`*^9, 3.881155119399418*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"b6335396-1624-4aaf-8cb7-30e94d8d8380"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"createStruct", "=", 
  RowBox[{"CreateForeignFunction", "[", 
   RowBox[{"\"\<create_struct\>\"", ",", 
    RowBox[{
     RowBox[{"{", "}"}], "->", 
     RowBox[{"\"\<ListTuple\>\"", "::[", 
      RowBox[{"\"\<CInt\>\"", ",", "\"\<CDouble\>\""}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.880484048210409*^9, 3.8804840587133913`*^9}, {
  3.880538975586234*^9, 3.880538976086926*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"a83c29f5-15e7-4c4f-90c8-5c83e29b8045"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TypeProduct", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"], 
       DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "DataStructure[ForeignFunctionObject, $Failed]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.880484059028227*^9, 3.880484096281974*^9, 
  3.8804844194029284`*^9, 3.880484614597248*^9, 3.880484894880559*^9, 
  3.880538976527978*^9, 3.8805511180066557`*^9, 3.880552482597167*^9, 
  3.881155120402256*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"3aee0039-c43c-4ce8-94c7-93646335cb82"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CallForeignFunction", "[", 
  RowBox[{"createStruct", ",", 
   RowBox[{"{", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.880484068594124*^9, 3.8804840753535767`*^9}, {
  3.8804846478893948`*^9, 3.8804846522714243`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"84a5b1b5-2b75-41d6-b48c-1273331943e1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"56", ",", "3.14159`"}], "}"}]], "Output",
 CellChangeTimes->{{3.8804840756717453`*^9, 3.8804840776868134`*^9}, 
   3.880484420135599*^9, 3.8804846166324997`*^9, {3.880484650231371*^9, 
   3.880484652554308*^9}, 3.880484896027232*^9, 3.880538984250684*^9, 
   3.880551119733221*^9, 3.881155123335449*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"baa9a69a-6a46-4637-baf8-6b9064e7f144"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"takeStruct", "=", 
  RowBox[{"CreateForeignFunction", "[", 
   RowBox[{"\"\<take_struct\>\"", ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<ListTuple\>\"", "::[", 
       RowBox[{"\"\<CInt\>\"", ",", "\"\<CDouble\>\""}], "]"}], "}"}], "->", 
     "\"\<CInt\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.880484048210409*^9, 3.880484098729867*^9}, {
  3.880538979436343*^9, 3.880538980869885*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"c93653a7-3bc3-49f7-aafd-e81671e9112e"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TypeProduct", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"], 
       DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "DataStructure[ForeignFunctionObject, $Failed]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.880484059028227*^9, {3.880484094313397*^9, 3.880484099196046*^9}, 
   3.880484199005702*^9, 3.880484421298832*^9, 3.880484617579523*^9, 
   3.880538981312387*^9, 3.880551120722962*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"1d7dd750-249b-4260-b824-fdf483c0ab6f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CallForeignFunction", "[", 
  RowBox[{"takeStruct", ",", 
   RowBox[{"{", 
    RowBox[{"f", "[", 
     RowBox[{"3", ",", "4"}], "]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.880484199936687*^9, 3.880484200977961*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"c273a76e-eb17-45f5-8ac2-aabfeeb758de"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.880484204388236*^9, 3.88048442215716*^9, 
  3.880484618449024*^9, 3.8805389875266743`*^9},
 CellLabel->
  "Out[126]=",ExpressionUUID->"f38b2842-bc14-4761-9e5a-807b5b683411"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CallForeignFunction", "[", 
  RowBox[{"takeStruct", ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"56", ",", "3.14159", ",", "3"}], "}"}], "}"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.880484208134276*^9, 3.8804842135782957`*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"98d27d03-e823-451c-92df-9df9cc2877ba"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.880484214194482*^9, 3.8804844228429947`*^9, 
  3.8805389867032757`*^9},
 CellLabel->
  "Out[125]=",ExpressionUUID->"6ca6ee57-5c6f-4428-8d88-4aa3ce965f7e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CallForeignFunction", "[", 
  RowBox[{"takeStruct", ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"56", ",", "3.14159"}], "}"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.880484068594124*^9, 3.8804841143033867`*^9}, {
  3.880484635189954*^9, 3.8804846450542192`*^9}, {3.880551128499186*^9, 
  3.880551130569954*^9}, {3.880551572961857*^9, 3.8805515781956244`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"2ad9b863-c736-416f-9a66-664d3855c89b"],

Cell[BoxData["0"], "Echo",
 CellChangeTimes->{
  3.8805515788712807`*^9},ExpressionUUID->"99b026f3-3fa1-4a30-985f-\
2b6dc187785e"],

Cell[BoxData["56"], "Output",
 CellChangeTimes->{{3.8804846195310783`*^9, 3.880484645387197*^9}, 
   3.880538985850243*^9, {3.880551123506214*^9, 3.880551130866405*^9}, {
   3.880551575643778*^9, 3.880551578924449*^9}},
 CellLabel->"Out[26]=",ExpressionUUID->"9fbfbfb2-fd5d-410f-9786-90eb20042183"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"reverseStruct", "=", 
  RowBox[{"CreateForeignFunction", "[", 
   RowBox[{"\"\<reverse_struct\>\"", ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<ListTuple\>\"", "::[", 
       RowBox[{"\"\<CInt\>\"", ",", "\"\<CDouble\>\""}], "]"}], "}"}], "->", 
     RowBox[{"\"\<ListTuple\>\"", "::[", 
      RowBox[{"\"\<CDouble\>\"", ",", "\"\<CInt\>\""}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8804648593047*^9, 3.880464915411796*^9}, {
  3.880483921976923*^9, 3.880483942180059*^9}, {3.880484061285651*^9, 
  3.88048406446043*^9}, {3.880538989868844*^9, 3.880538990293714*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"d236d586-d21f-4e33-ad15-ea9b0e78e786"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TypeProduct", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"], 
       DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "DataStructure[ForeignFunctionObject, $Failed]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.880464886056031*^9, 3.880464915956326*^9}, 
   3.880483942439974*^9, 3.880484621782112*^9, 3.880538990640813*^9},
 CellLabel->
  "Out[127]=",ExpressionUUID->"bb153c28-6d30-4cad-b11b-a9c330ffaabd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CallForeignFunction", "[", 
  RowBox[{"reverseStruct", ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5.6"}], "}"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.880464919868428*^9, 3.880464921340272*^9}, {
   3.880483944831791*^9, 3.880483949028287*^9}, 3.880484066474743*^9, {
   3.880484625332971*^9, 3.880484629984524*^9}},
 CellLabel->
  "In[128]:=",ExpressionUUID->"0eb0b646-3229-4385-8c93-c2bd980fc9c6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5.6`", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{{3.880484622526739*^9, 3.8804846304850492`*^9}, 
   3.88053899316994*^9},
 CellLabel->
  "Out[128]=",ExpressionUUID->"cdafdac3-1ae8-4472-af78-471577f89728"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"createNestedStruct", "=", 
  RowBox[{"CreateForeignFunction", "[", 
   RowBox[{"\"\<create_nested_struct\>\"", ",", 
    RowBox[{
     RowBox[{"{", "}"}], "->", 
     RowBox[{"\"\<ListTuple\>\"", "::[", 
      RowBox[{"\"\<CInt\>\"", ",", 
       RowBox[{"\"\<ListTuple\>\"", "::[", 
        RowBox[{"\"\<CInt\>\"", ",", "\"\<CDouble\>\""}], "]"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.880484901304824*^9, 3.880484934690381*^9}, {
  3.880538998644309*^9, 3.880538999163121*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"1a0820f0-ad14-42cb-8c2a-eb1ed04adfc5"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TypeProduct", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"], 
       DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "DataStructure[ForeignFunctionObject, $Failed]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.880484935141047*^9, 3.8805389995566587`*^9, 
  3.880552484968645*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"56b3f4e4-bee0-4370-bd5f-7908f263e164"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CallForeignFunction", "[", 
  RowBox[{"createNestedStruct", ",", 
   RowBox[{"{", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.880484940249215*^9, 3.880484941914372*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"5f41c49b-8e1d-419e-8c36-926c12ff8c21"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", 
   RowBox[{"{", 
    RowBox[{"56", ",", "3.14159`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.880484942256157*^9, 3.880539000739006*^9, {3.8805524858613253`*^9, 
   3.880552486304206*^9}},
 CellLabel->"Out[10]=",ExpressionUUID->"c43ca2cb-847a-4186-8013-5d581c38afd0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"takeNestedStruct", "=", 
  RowBox[{"CreateForeignFunction", "[", 
   RowBox[{"\"\<take_nested_struct\>\"", ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<ListTuple\>\"", "::[", 
       RowBox[{"\"\<CInt\>\"", ",", 
        RowBox[{"\"\<ListTuple\>\"", "::[", 
         RowBox[{"\"\<CInt\>\"", ",", "\"\<CDouble\>\""}], "]"}]}], "]"}], 
      "}"}], "->", 
     RowBox[{"\"\<ListTuple\>\"", "::[", 
      RowBox[{"\"\<CInt\>\"", ",", "\"\<CDouble\>\""}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.880484901304824*^9, 3.880484960331918*^9}, {
  3.880539006405787*^9, 3.880539008440593*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"57b225be-54a3-406c-973a-171b9b986716"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TypeProduct", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"], 
       DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "DataStructure[ForeignFunctionObject, $Failed]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.880484935141047*^9, 3.880484960601201*^9}, 
   3.880485002305529*^9, 3.880539008742694*^9, 3.88055248765923*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"32b117bf-1ea2-4703-bc2c-923ae3f8e1fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CallForeignFunction", "[", 
  RowBox[{"takeNestedStruct", ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"4", ",", 
      RowBox[{"{", 
       RowBox[{"56", ",", "5.6"}], "}"}]}], "}"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.880484940249215*^9, 3.880485003093339*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"45755ca8-f1af-416f-9a88-f8e414829128"],

Cell[CellGroupData[{

Cell[BoxData["0"], "Echo",
 CellChangeTimes->{
  3.8805524886247997`*^9},ExpressionUUID->"5dd65a63-c3e3-4e94-821b-\
46c199a4cd64"],

Cell[BoxData["0"], "Echo",
 CellChangeTimes->{
  3.8805524886820803`*^9},ExpressionUUID->"bc48dbea-28fa-4f7a-951f-\
3b291851de5a"],

Cell[BoxData["8"], "Echo",
 CellChangeTimes->{
  3.8805524887041283`*^9},ExpressionUUID->"05717694-5897-4f90-9542-\
411a95ae987c"],

Cell[BoxData["0"], "Echo",
 CellChangeTimes->{
  3.880552488760364*^9},ExpressionUUID->"3f821e15-8695-4825-9ae8-\
0cd914111dd8"],

Cell[BoxData["0"], "Echo",
 CellChangeTimes->{
  3.8805524887798567`*^9},ExpressionUUID->"1c11b184-f9f8-4a98-b296-\
7990655a817c"],

Cell[BoxData["8"], "Echo",
 CellChangeTimes->{
  3.880552488799754*^9},ExpressionUUID->"ce937458-d676-41f6-8fd4-\
d48bb8380dc5"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"56", ",", "5.6`"}], "}"}]], "Output",
 CellChangeTimes->{{3.880484942256157*^9, 3.880484965432111*^9}, 
   3.880485003567952*^9, 3.8805390099486094`*^9, 3.8805524888390627`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"881ef3ee-6dc1-4de5-a071-22eca7b2d2cc"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"CallForeignFunction", "[", 
  RowBox[{"takeNestedStruct", ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"4", ",", 
      RowBox[{"{", 
       RowBox[{"56", ",", "x"}], "}"}]}], "}"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.880485025316999*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"88d0b182-cb64-4291-9262-364490420480"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cf", "=", 
  RowBox[{"FunctionCompile", "[", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"Typed", "[", 
      RowBox[{"arg", ",", "\"\<CDouble\>\""}], "]"}], ",", "arg"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.880485006072708*^9, 3.8804850169406223`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"ed57d46c-bcf2-4d29-a56d-dca45f273f80"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledCodeFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GraphicsBox[
             InsetBox[
              FormBox[
               StyleBox["\"Code\"", 
                GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                False], TraditionalForm], {0, 0}], Background -> 
             GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {27., {0., 10.}}], Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Signature: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", "\"Real64\"", "}"}], "\[Rule]", 
                    "\"Real64\""}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GraphicsBox[
             InsetBox[
              FormBox[
               StyleBox["\"Code\"", 
                GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                False], TraditionalForm], {0, 0}], Background -> 
             GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {27., {0., 10.}}], Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Signature: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", "\"Real64\"", "}"}], "\[Rule]", 
                    "\"Real64\""}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledCodeFunction[<|
   "Signature" -> TypeSpecifier[{"Real64"} -> "Real64"], "Input" -> 
    Compile`Program[{}, 
      Function[
       Typed[$CellContext`arg, "CDouble"], $CellContext`arg]], 
    "ErrorFunction" -> Automatic, "InitializationName" -> 
    "Initialization_bc867341_237c_4904_94d9_cdfaf5d76ca7", "ExpressionName" -> 
    "Main_ExprInvocation", "CName" -> "Main_CInvocation", "FunctionName" -> 
    "Main", "SystemID" -> "MacOSX-x86-64", "VersionData" -> {13.2, 0, 0}, 
    "CompiledIR" -> <|"MacOSX-x86-64" -> ByteArray[CompressedData["
1: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
rXcwaf0FldZf5dJ6G5nWO7ODy6H/A+qEgII=
        "]]|>, "orcInstance" -> 140169276591792, "orcModuleId" -> 
    105553121790624, "targetMachineId" -> 140169278833664|>, 4463284336, 
   4463284240, 4463284288, 4463284224, "{\"Real64\"} -> \"Real64\""],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8804850172797527`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"558a91a1-bd54-4eaf-88ea-acf0f5084bcb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cf", "[", "Pi", "]"}]], "Input",
 CellChangeTimes->{{3.8804850174751263`*^9, 3.880485018487751*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"2bf4d68f-d66b-4c73-9aa6-295bd93a4c27"],

Cell[BoxData[
 TemplateBox[{
  "CompiledCodeFunction", "argtype", 
   "\"Argument type at position \\!\\(\\*RowBox[{\\\"1\\\"}]\\) does not \
match function signature.\"", 2, 8, 1, 19212429432235718770, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.880485018781476*^9},
 CellLabel->
  "During evaluation of \
In[8]:=",ExpressionUUID->"13d531ce-faeb-4600-a1c3-5ee3bd0075b4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Failure",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"Argument type at position \\!\\(\\*TagBox[\\\"1\\\", \
Function[Short[Slot[1], 5]]]\\) does not match function signature.\"", 
                    "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"ArgumentType\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Function: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["CompiledCodeFunction", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"Argument type at position \\!\\(\\*TagBox[\\\"1\\\", \
Function[Short[Slot[1], 5]]]\\) does not match function signature.\"", 
                    "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"ArgumentType\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Function: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["CompiledCodeFunction", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Failure[
  "ArgumentType", <|
   "MessageTemplate" -> MessageName[CompiledCodeFunction, "argtype"], 
    "MessageParameters" -> {1}, "Function" -> CompiledCodeFunction|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.880485018880115*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"43cc20ff-5fde-4ad3-a730-30c8e493dadf"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CCompilerDriver`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.88055032187578*^9, 3.880550325826027*^9}},
 CellLabel->"In[10]:=",
 CellID->914026889,ExpressionUUID->"7ebb6b92-0cd7-4040-bed8-1644d349ae3d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CreateLibrary", "[", 
   RowBox[{
   "\"\<\ntypedef struct {\n\tint a;\n\tdouble b;\n} my_struct;\n\ndouble \
accept_struct(my_struct in) {\n\treturn in.b;\n}\n\nint take_num(double in) {\
\n\treturn 2;\n}\n\>\"", ",", "\"\<structTaker\>\""}], "]"}], ";"}]], "Input",\

 CellChangeTimes->{{3.8805503166715117`*^9, 3.880550418479988*^9}, {
  3.880550600476536*^9, 3.880550619581896*^9}, {3.880550746109309*^9, 
  3.8805507475211153`*^9}, {3.880552531927084*^9, 3.880552562537709*^9}},
 CellLabel->"In[8]:=",
 CellID->1099396432,ExpressionUUID->"58037b69-9891-4c2e-869a-bca191e375f8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LibraryLoad", "[", "\"\<structTaker\>\"", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.880552567566547*^9, 3.880552576304587*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"9ec39f21-5fb6-4be2-8e07-75b94063f0e4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"takeStruct", "=", 
  RowBox[{"CreateForeignFunction", "[", 
   RowBox[{"\"\<accept_struct\>\"", ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"\"\<CInt\>\"", ",", "\"\<CDouble\>\""}], "}"}], "}"}], "->", 
     "\"\<CDouble\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8805531730389967`*^9, 3.880553200880673*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"6c9db8e5-ef9f-441f-8d15-b29da4db632c"],

Cell[BoxData["16"], "Echo",
 CellChangeTimes->{
  3.8805537525360527`*^9},ExpressionUUID->"a5ff8f34-df4d-489a-ab38-\
8fca2caf5a20"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TypeProduct", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"], 
       DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "DataStructure[ForeignFunctionObject, $Failed]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.88055320165112*^9, 3.880553752573689*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"0d1b6de9-c699-4b14-8e05-708cabd35267"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CallForeignFunction", "[", 
  RowBox[{"takeStruct", ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5.6"}], "}"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.880553203027904*^9, 3.8805532203296967`*^9}, {
  3.880553340964497*^9, 3.88055334596402*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"72388b54-070e-4a98-8de5-57ebe770f347"],

Cell[CellGroupData[{

Cell[BoxData["0"], "Echo",
 CellChangeTimes->{
  3.880553757390767*^9},ExpressionUUID->"9c6162ed-f044-499f-9427-\
28f60809683b"],

Cell[BoxData["0"], "Echo",
 CellChangeTimes->{
  3.8805537574283533`*^9},ExpressionUUID->"04f5100c-0ae0-4b7b-bdc5-\
5005662d4918"],

Cell[BoxData["8"], "Echo",
 CellChangeTimes->{
  3.880553757452589*^9},ExpressionUUID->"421220fc-2b81-4052-8e5d-\
8fbbab0e1cfb"]
}, Open  ]],

Cell[BoxData["5.6`"], "Output",
 CellChangeTimes->{{3.880553217499258*^9, 3.88055322349127*^9}, {
  3.880553343908105*^9, 3.880553346373869*^9}, {3.880553754448887*^9, 
  3.880553757498563*^9}},
 CellLabel->"Out[13]=",ExpressionUUID->"fc04aa34-4ed8-4819-b79d-3d55237259f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"takeNum", "=", 
  RowBox[{"CreateForeignFunction", "[", 
   RowBox[{"\"\<take_num\>\"", ",", 
    RowBox[{
     RowBox[{"{", "\"\<CDouble\>\"", "}"}], "->", "\"\<CInt\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.880552579582818*^9, 3.880552610754366*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"29058056-a567-4bc3-9850-dccb34bc605a"],

Cell[BoxData["8"], "Echo",
 CellChangeTimes->{
  3.880553761115003*^9},ExpressionUUID->"ec1f78cb-5d11-4fb8-8c02-\
43530061d652"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TypeProduct", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"], 
       DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "DataStructure[ForeignFunctionObject, $Failed]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.880552597881751*^9, 3.880552611038704*^9}, 
   3.8805537611814127`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"5b6d8fc7-0dbe-447a-b882-07c87fbea69b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CallForeignFunction", "[", 
  RowBox[{"takeNum", ",", 
   RowBox[{"{", "4.5", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.88055259656563*^9, 3.880552619714617*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"6e9376b6-0a4d-461a-a924-0f6bf637ef04"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{{3.8805526052457438`*^9, 3.880552620105398*^9}, 
   3.8805537622412157`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"a0544858-b865-463b-8711-c10cc4a1119b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"8", "+", "8", "+", "4"}]], "Input",
 CellChangeTimes->{{3.880554109061212*^9, 3.8805541111567707`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"fda2a2e9-ee3a-4cf6-ac09-91a41553b99f"],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{3.880554111720008*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"28c2f25c-3993-4430-8fd4-40a33d17553d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["$CCompiler"], "Input",
 CellChangeTimes->{{3.8805586285500383`*^9, 3.880558629523798*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"950761e3-5b88-41c2-850b-a5d9afd51e8f"],

Cell[BoxData["Automatic"], "Output",
 CellChangeTimes->{3.880558629716055*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"277eaf06-c06e-4ef2-a42c-fa00c53474c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CCompilers", "[", "Full", "]"}]], "Input",
 CellChangeTimes->{{3.880558630635159*^9, 3.8805586541188097`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"c84d9dd0-5584-4eb8-b841-fcc9d8b420a6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"Name\"\>", "\[Rule]", "\<\"Clang\"\>"}], ",", 
     RowBox[{"\<\"Compiler\"\>", "\[Rule]", 
      "CCompilerDriver`ClangCompiler`ClangCompiler"}], ",", 
     RowBox[{"\<\"CompilerInstallation\"\>", "\[Rule]", "\<\"/usr/bin\"\>"}], 
     ",", 
     RowBox[{"\<\"CompilerName\"\>", "\[Rule]", "Automatic"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"Name\"\>", "\[Rule]", "\<\"GCC\"\>"}], ",", 
     RowBox[{"\<\"Compiler\"\>", "\[Rule]", 
      "CCompilerDriver`GCCCompiler`GCCCompiler"}], ",", 
     RowBox[{"\<\"CompilerInstallation\"\>", "\[Rule]", "\<\"/usr/bin\"\>"}], 
     ",", 
     RowBox[{"\<\"CompilerName\"\>", "\[Rule]", "Automatic"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"Name\"\>", "\[Rule]", "\<\"Intel Compiler\"\>"}], ",", 
     RowBox[{"\<\"Compiler\"\>", "\[Rule]", 
      "CCompilerDriver`IntelCompiler`IntelCompiler"}], ",", 
     RowBox[{"\<\"CompilerInstallation\"\>", "\[Rule]", "None"}], ",", 
     RowBox[{"\<\"CompilerName\"\>", "\[Rule]", "Automatic"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\<\"Name\"\>", "\[Rule]", "\<\"Generic C Compiler\"\>"}], ",", 
     RowBox[{"\<\"Compiler\"\>", "\[Rule]", 
      "CCompilerDriver`GenericCCompiler`GenericCCompiler"}], ",", 
     RowBox[{"\<\"CompilerInstallation\"\>", "\[Rule]", "None"}], ",", 
     RowBox[{"\<\"CompilerName\"\>", "\[Rule]", "Automatic"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.880558639540468*^9, 3.880558654297274*^9}},
 CellLabel->"Out[8]=",ExpressionUUID->"8b5426b8-406c-40de-bed7-4a6322030b4e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"CreateLibrary", "[", 
   RowBox[{
   "\"\<\ntypedef struct {\n\tint a;\n\tlong b;\n\tdouble c;\n} my_struct;\n\n\
double accept_struct2(my_struct in) {\n\treturn in.c;\n}\n\nunsigned long \
struct_size() {\n\treturn sizeof(my_struct);\n}\n\>\"", ",", 
    "\"\<structTaker2\>\""}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.8805503166715117`*^9, 3.880550418479988*^9}, {
   3.880550600476536*^9, 3.880550619581896*^9}, {3.880550746109309*^9, 
   3.8805507475211153`*^9}, {3.880553375230371*^9, 3.880553386820705*^9}, {
   3.880553768429674*^9, 3.88055376853533*^9}, {3.8805539903189983`*^9, 
   3.880554010844303*^9}, {3.880554041395835*^9, 3.880554043241851*^9}, {
   3.8805540766338387`*^9, 3.880554077946761*^9}, {3.8805586270681953`*^9, 
   3.880558661394582*^9}, {3.880639805053952*^9, 3.880639805214826*^9}, {
   3.880640380195272*^9, 3.880640382171508*^9}, {3.880640414433918*^9, 
   3.880640423356275*^9}, 3.880640472139925*^9, {3.8806406354051123`*^9, 
   3.880640635552537*^9}},
 CellLabel->"In[19]:=",
 CellID->322383571,ExpressionUUID->"bce46687-2005-40a4-8a19-118bf1957ae9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dir", "=", 
  RowBox[{"CreateDirectory", "[", "]"}]}]], "Input",
 CellChangeTimes->{{3.88064064549327*^9, 3.880640649090907*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"86144e0a-8e92-4f37-9e3c-e824ea8b34e0"],

Cell[BoxData["\<\"/private/var/folders/tz/hpyqywfd5n13zsbg6btzb31r0000gn/T/\
m0000117541\"\>"], "Output",
 CellChangeTimes->{3.880640649500875*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"bd9a8d97-6a52-4619-8384-30f339c3f808"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"WriteString", "[", 
  RowBox[{
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"dir", ",", "\"\<structTaker2.c\>\""}], "}"}], "]"}], ",", 
   "\"\<\ntypedef struct {\n\tint a;\n\tlong b;\n\tdouble c;\n} my_struct;\n\n\
double accept_struct2(my_struct in) {\n\treturn in.c;\n}\n\nunsigned long \
struct_size() {\n\treturn sizeof(my_struct);\n}\n\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.880640655119886*^9, 3.880640703578808*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"3f63b2b2-709a-4d5c-b983-e3d9b98b189d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RunProcess", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<clang\>\"", ",", "\"\<-o\>\"", ",", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{"dir", ",", "\"\<structTaker2.dylib\>\""}], "}"}], "]"}], ",", 
    "\"\<--shared\>\"", ",", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{"dir", ",", "\"\<structTaker2.c\>\""}], "}"}], "]"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.880640709625503*^9, 3.8806407133832073`*^9}, {
  3.880640823780168*^9, 3.8806408538795433`*^9}, {3.880640884702218*^9, 
  3.880640885761569*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"99e5b59d-66e3-49da-88ea-9795fc0dc0e9"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"ExitCode\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"StandardOutput\"\>", "\[Rule]", "\<\"\"\>"}], ",", 
   RowBox[{"\<\"StandardError\"\>", "\[Rule]", "\<\"\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.880640859591511*^9, 3.880640887964748*^9}},
 CellLabel->"Out[24]=",ExpressionUUID->"a48cbef6-396e-4d5a-ab8f-cbc99fa051e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FileNameJoin", "[", 
  RowBox[{"{", 
   RowBox[{"dir", ",", "\"\<structTaker2.dylib\>\""}], "}"}], "]"}]], "Input",\

 CellChangeTimes->{{3.88064089056921*^9, 3.8806408913736*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"488a3b0a-6b15-477d-be83-70dcfcaa93d3"],

Cell[BoxData["\<\"/private/var/folders/tz/hpyqywfd5n13zsbg6btzb31r0000gn/T/\
m0000117541/structTaker2.dylib\"\>"], "Output",
 CellChangeTimes->{{3.880640871215044*^9, 3.88064089160194*^9}},
 CellLabel->"Out[25]=",ExpressionUUID->"8e713880-1a78-41ae-8d06-f387999418cf"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"LibraryLoad", "[", "\"\<structTaker2\>\"", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.880550408999756*^9, 3.880550420051674*^9}, {
   3.880550634242694*^9, 3.880550635643497*^9}, {3.880550749396418*^9, 
   3.880550750583802*^9}, {3.880550826744362*^9, 3.880550827824533*^9}, {
   3.8805533776513443`*^9, 3.880553388834672*^9}, {3.880553771188178*^9, 
   3.8805537712605247`*^9}, {3.88055401229102*^9, 3.8805540123627234`*^9}, {
   3.880554044675578*^9, 3.880554044803355*^9}, 3.880641001441955*^9},
 CellLabel->"In[12]:=",
 CellID->1830551293,ExpressionUUID->"1babd20d-bbfc-46be-8c5c-73ee85b54015"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LibraryLoad", "[", 
  "\"\</private/var/folders/tz/hpyqywfd5n13zsbg6btzb31r0000gn/T/m0000117541/\
structTaker2.dylib\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.880638656251956*^9, 3.880638658572482*^9}, {
  3.880638725051773*^9, 3.8806387264194*^9}, {3.880641005700066*^9, 
  3.8806410078751793`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"7c7f3bf8-4af6-4f07-994d-2ea63da1e6c4"],

Cell[BoxData["\<\"/private/var/folders/tz/hpyqywfd5n13zsbg6btzb31r0000gn/T/\
m0000117541/structTaker2.dylib\"\>"], "Output",
 CellChangeTimes->{3.880641010768762*^9, 3.880806401414267*^9, 
  3.880849547159699*^9, 3.880849983717663*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"969ebdd2-a96f-4962-8bcc-b71906536305"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"takeStruct2", "=", 
  RowBox[{"CreateForeignFunction", "[", 
   RowBox[{"\"\<accept_struct2\>\"", ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"\"\<CInt\>\"", ",", "\"\<CLong\>\"", ",", "\"\<CDouble\>\""}],
        "}"}], "}"}], "->", "\"\<CDouble\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8805531730389967`*^9, 3.880553200880673*^9}, {
  3.880553400800756*^9, 3.880553412300701*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"8cc7bb05-b300-464b-94bf-99531593f44e"],

Cell[BoxData["\<\"ArgumentPointers: CreateForeignFunctionWithLibrary\"\>"], \
"Echo",
 CellChangeTimes->{
  3.8808499854381123`*^9},ExpressionUUID->"c463f426-51c6-4007-915b-\
db397f04bf23"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TypeProduct", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"], 
       DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "DataStructure[ForeignFunctionObject, $Failed]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.88055320165112*^9, 3.8805534126878443`*^9, 3.880553774786972*^9, {
   3.880553904112402*^9, 3.8805539090843277`*^9}, 3.880553940083375*^9, 
   3.880554014942149*^9, {3.880558317634656*^9, 3.88055833035675*^9}, {
   3.880558575019539*^9, 3.8805585764873743`*^9}, 3.8805586697641*^9, 
   3.8805601522150173`*^9, 3.8805604526811867`*^9, 3.880560546112966*^9, 
   3.880560806655455*^9, 3.880561528150344*^9, 3.880561994445554*^9, 
   3.880563741135869*^9, 3.880641016271531*^9, 3.880709200907323*^9, 
   3.880709253352594*^9, 3.880709350446623*^9, 3.880806405788261*^9, 
   3.880849985475334*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"408173f1-f2bf-4093-a927-a5b04c463ca3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"takeStruct2v2", "=", 
  RowBox[{"CreateForeignFunction", "[", 
   RowBox[{"\"\<accept_struct2\>\"", ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Integer32\>\"", ",", "\"\<Integer64\>\"", ",", 
        "\"\<CDouble\>\""}], "}"}], "}"}], "->", "\"\<CDouble\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.880553938533568*^9, 3.880553947409308*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"23d8cbb3-e489-4ea7-8b8d-229772d19f7b"],

Cell[BoxData["\<\"ArgumentPointers: CreateForeignFunctionWithLibrary\"\>"], \
"Echo",
 CellChangeTimes->{
  3.880806409713069*^9},ExpressionUUID->"82912cc8-a52b-4564-a473-\
4ee079f3c644"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TypeProduct", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"], 
       DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "DataStructure[ForeignFunctionObject, $Failed]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8805539439122257`*^9, 3.8805539477963467`*^9}, 
   3.8805583222837887`*^9, 3.880558575331521*^9, 3.8808064097751083`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"ae427b66-3f12-4a1e-b373-1f3e912aed38"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"structSize", "=", 
  RowBox[{"CreateForeignFunction", "[", 
   RowBox[{"\"\<struct_size\>\"", ",", 
    RowBox[{
     RowBox[{"{", "}"}], "->", "\"\<CUnsignedLong\>\""}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.880554022064926*^9, 3.8805540314563*^9}, {
  3.880554084228529*^9, 3.880554090335237*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"ee730658-7544-4f5a-bf15-f01ba777e761"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TypeProduct", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"], 
       DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "DataStructure[ForeignFunctionObject, $Failed]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8805540280495777`*^9, 3.8805540379385757`*^9}, {
  3.8805540888367157`*^9, 3.8805540906238937`*^9}},
 CellLabel->"Out[9]=",ExpressionUUID->"07a5f3b9-3c76-4f46-b500-525d0fd115c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CallForeignFunction", "[", 
  RowBox[{"structSize", ",", 
   RowBox[{"{", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.880554091161316*^9, 3.880554094596546*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"e2e2f00b-ac15-4fb7-ad5d-836231f9db29"],

Cell[BoxData["24"], "Output",
 CellChangeTimes->{3.880554094885253*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"702cd334-64b8-4fa1-9409-12974d0f6dd6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"8", "+", "8", "+", "4"}]], "Input",
 CellChangeTimes->{{3.880553787237368*^9, 3.880553789953211*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"5f27daa4-99f3-49c5-95eb-065f85039e4b"],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{3.880553790207067*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"94cc9537-8dae-4389-8ff8-2c9302a6220a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"printTypeInfo", "=", 
  RowBox[{"FunctionCompile", "[", 
   RowBox[{
    RowBox[{
    "CompiledComponent", "[", "\"\<ForeignFunctionInterface\>\"", "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"Typed", "[", 
       RowBox[{"ff", ",", "\"\<ForeignFunctionObject\>\""}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", "ty", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ty", "=", 
          RowBox[{"FromRawPointer", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ff", "[", "\"\<CallInterface\>\"", "]"}], "[", 
             "\"\<ArgumentTypes\>\"", "]"}], ",", "0"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Echo", "[", 
          RowBox[{"ty", "[", "\"\<Size\>\"", "]"}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Echo", "[", 
          RowBox[{"ty", "[", "\"\<Alignment\>\"", "]"}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Echo", "[", 
          RowBox[{"ty", "[", "\"\<Type\>\"", "]"}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Echo", "[", 
          RowBox[{"Cast", "[", 
           RowBox[{
            RowBox[{"FromRawPointer", "[", 
             RowBox[{
              RowBox[{"ty", "[", "\"\<Elements\>\"", "]"}], ",", "0"}], "]"}],
             ",", "\"\<UnsignedInteger64\>\"", ",", "\"\<BitCast\>\""}], 
           "]"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Echo", "[", 
          RowBox[{
           RowBox[{"FromRawPointer", "[", 
            RowBox[{
             RowBox[{"ty", "[", "\"\<Elements\>\"", "]"}], ",", "0"}], "]"}], 
           "[", "\"\<Size\>\"", "]"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Echo", "[", 
          RowBox[{
           RowBox[{"FromRawPointer", "[", 
            RowBox[{
             RowBox[{"ty", "[", "\"\<Elements\>\"", "]"}], ",", "0"}], "]"}], 
           "[", "\"\<Alignment\>\"", "]"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Echo", "[", 
          RowBox[{
           RowBox[{"FromRawPointer", "[", 
            RowBox[{
             RowBox[{"ty", "[", "\"\<Elements\>\"", "]"}], ",", "0"}], "]"}], 
           "[", "\"\<Type\>\"", "]"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Echo", "[", 
          RowBox[{"Cast", "[", 
           RowBox[{
            RowBox[{"FromRawPointer", "[", 
             RowBox[{
              RowBox[{"ty", "[", "\"\<Elements\>\"", "]"}], ",", "1"}], "]"}],
             ",", "\"\<UnsignedInteger64\>\"", ",", "\"\<BitCast\>\""}], 
           "]"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Echo", "[", 
          RowBox[{
           RowBox[{"FromRawPointer", "[", 
            RowBox[{
             RowBox[{"ty", "[", "\"\<Elements\>\"", "]"}], ",", "1"}], "]"}], 
           "[", "\"\<Size\>\"", "]"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Echo", "[", 
          RowBox[{
           RowBox[{"FromRawPointer", "[", 
            RowBox[{
             RowBox[{"ty", "[", "\"\<Elements\>\"", "]"}], ",", "1"}], "]"}], 
           "[", "\"\<Alignment\>\"", "]"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Echo", "[", 
          RowBox[{
           RowBox[{"FromRawPointer", "[", 
            RowBox[{
             RowBox[{"ty", "[", "\"\<Elements\>\"", "]"}], ",", "1"}], "]"}], 
           "[", "\"\<Type\>\"", "]"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Echo", "[", 
          RowBox[{"Cast", "[", 
           RowBox[{
            RowBox[{"FromRawPointer", "[", 
             RowBox[{
              RowBox[{"ty", "[", "\"\<Elements\>\"", "]"}], ",", "2"}], "]"}],
             ",", "\"\<UnsignedInteger64\>\"", ",", "\"\<BitCast\>\""}], 
           "]"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Echo", "[", 
          RowBox[{
           RowBox[{"FromRawPointer", "[", 
            RowBox[{
             RowBox[{"ty", "[", "\"\<Elements\>\"", "]"}], ",", "2"}], "]"}], 
           "[", "\"\<Size\>\"", "]"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Echo", "[", 
          RowBox[{
           RowBox[{"FromRawPointer", "[", 
            RowBox[{
             RowBox[{"ty", "[", "\"\<Elements\>\"", "]"}], ",", "2"}], "]"}], 
           "[", "\"\<Alignment\>\"", "]"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Echo", "[", 
          RowBox[{
           RowBox[{"FromRawPointer", "[", 
            RowBox[{
             RowBox[{"ty", "[", "\"\<Elements\>\"", "]"}], ",", "2"}], "]"}], 
           "[", "\"\<Type\>\"", "]"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Echo", "[", 
          RowBox[{"Cast", "[", 
           RowBox[{
            RowBox[{"FromRawPointer", "[", 
             RowBox[{
              RowBox[{"ty", "[", "\"\<Elements\>\"", "]"}], ",", "3"}], "]"}],
             ",", "\"\<UnsignedInteger64\>\"", ",", "\"\<BitCast\>\""}], 
           "]"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",\

 CellChangeTimes->{{3.880709055989768*^9, 3.880709183371498*^9}, {
  3.880709229605942*^9, 3.8807092347230043`*^9}, {3.88070932103122*^9, 
  3.880709337671389*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"3fa453c0-2c87-4951-bb19-5f2a73f59286"],

Cell[BoxData[
 TemplateBox[{
  "FromRawPointer", "onlycompiled", 
   "\"\\!\\(\\*RowBox[{\\\"FromRawPointer\\\"}]\\) is only available in \
compiled code.\"", 2, 7, 1, 19214535705403254480, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.880709338376891*^9, 3.880709351542282*^9}, 
   3.880806417692629*^9},
 CellLabel->
  "During evaluation of \
In[7]:=",ExpressionUUID->"85b0407d-3bba-4d75-ba63-772e9e850533"],

Cell[BoxData[
 TemplateBox[{
  "FromRawPointer", "onlycompiled", 
   "\"\\!\\(\\*RowBox[{\\\"FromRawPointer\\\"}]\\) is only available in \
compiled code.\"", 2, 7, 2, 19214535705403254480, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.880709338376891*^9, 3.880709351542282*^9}, 
   3.8808064177108173`*^9},
 CellLabel->
  "During evaluation of \
In[7]:=",ExpressionUUID->"298bc8c5-992c-44a0-83dd-708c1126994d"],

Cell[BoxData[
 TemplateBox[{
  "FromRawPointer", "onlycompiled", 
   "\"\\!\\(\\*RowBox[{\\\"FromRawPointer\\\"}]\\) is only available in \
compiled code.\"", 2, 7, 3, 19214535705403254480, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.880709338376891*^9, 3.880709351542282*^9}, 
   3.8808064177508717`*^9},
 CellLabel->
  "During evaluation of \
In[7]:=",ExpressionUUID->"e430d40a-0d1a-4ebf-962d-bf72820a9420"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"FromRawPointer\\\", \
\\\"::\\\", \\\"onlycompiled\\\"}], \\\"MessageName\\\"]\\) will be \
suppressed during this calculation.\"", 2, 7, 4, 19214535705403254480, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.880709338376891*^9, 3.880709351542282*^9}, 
   3.880806417764296*^9},
 CellLabel->
  "During evaluation of \
In[7]:=",ExpressionUUID->"c30da044-c74f-4358-943a-e50697dcadeb"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledCodeFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GraphicsBox[
             InsetBox[
              FormBox[
               StyleBox["\"Code\"", 
                GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                False], TraditionalForm], {0, 0}], Background -> 
             GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {27., {0., 10.}}], Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Signature: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", "\"ForeignFunctionObject\"", "}"}], 
                    "\[Rule]", "\"Null\""}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GraphicsBox[
             InsetBox[
              FormBox[
               StyleBox["\"Code\"", 
                GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                False], TraditionalForm], {0, 0}], Background -> 
             GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {27., {0., 10.}}], Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Signature: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", "\"ForeignFunctionObject\"", "}"}], 
                    "\[Rule]", "\"Null\""}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledCodeFunction[<|
   "Signature" -> TypeSpecifier[{"ForeignFunctionObject"} -> "Null"], "Input" -> 
    Compile`Program[
      CompiledComponent["ForeignFunctionInterface"], 
      Function[
       Typed[$CellContext`ff, "ForeignFunctionObject"], 
       Module[{$CellContext`ty}, $CellContext`ty = FromRawPointer[
           $CellContext`ff["CallInterface"]["ArgumentTypes"], 0]; Echo[
          $CellContext`ty["Size"]]; Echo[
          $CellContext`ty["Alignment"]]; Echo[
          $CellContext`ty["Type"]]; Echo[
          Cast[
           FromRawPointer[
            $CellContext`ty["Elements"], 0], "UnsignedInteger64", "BitCast"]]; 
        Echo[
          FromRawPointer[
           $CellContext`ty["Elements"], 0]["Size"]]; Echo[
          FromRawPointer[
           $CellContext`ty["Elements"], 0]["Alignment"]]; Echo[
          FromRawPointer[
           $CellContext`ty["Elements"], 0]["Type"]]; Echo[
          Cast[
           FromRawPointer[
            $CellContext`ty["Elements"], 1], "UnsignedInteger64", "BitCast"]]; 
        Echo[
          FromRawPointer[
           $CellContext`ty["Elements"], 1]["Size"]]; Echo[
          FromRawPointer[
           $CellContext`ty["Elements"], 1]["Alignment"]]; Echo[
          FromRawPointer[
           $CellContext`ty["Elements"], 1]["Type"]]; Echo[
          Cast[
           FromRawPointer[
            $CellContext`ty["Elements"], 2], "UnsignedInteger64", "BitCast"]]; 
        Echo[
          FromRawPointer[
           $CellContext`ty["Elements"], 2]["Size"]]; Echo[
          FromRawPointer[
           $CellContext`ty["Elements"], 2]["Alignment"]]; Echo[
          FromRawPointer[
           $CellContext`ty["Elements"], 2]["Type"]]; Echo[
          Cast[
           FromRawPointer[
            $CellContext`ty["Elements"], 3], "UnsignedInteger64", "BitCast"]]; 
        Null]]], "ErrorFunction" -> Automatic, "InitializationName" -> 
    "Initialization_2e590977_4728_401a_8bd2_4c199d64f055", "ExpressionName" -> 
    "Main_ExprInvocation", "CName" -> "Main_CInvocation", "FunctionName" -> 
    "Main", "SystemID" -> "MacOSX-x86-64", "VersionData" -> {13.2, 0, 0}, 
    "CompiledIR" -> <|"MacOSX-x86-64" -> ByteArray[CompressedData["
1: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
w6a6lj5YODB1HjE7S0jmRmqNulL225uG7mvdTNV0EI+rPVnHLYffDEFP+W6T
N6tzv+WrSVMqL0+acjPiLzxcPaOcBVpX94+cOGLRs2F5Y2Rwl5OPNEGL4X7Z
Iy2Gg6pAbq0mJ97JPLIJIafLCvF8vdoZOJ2ccE71ATnhpewwSgq8/Cedr5U4
8BvhW5/4Mrj6emyw3EoypWW9S7rGZ6N6QZYBm3T/67ayn4gGIbIcfxNub+kS
orl0qKrwXjJc4YETKjpOTNN2jLT96gzZqzddfUxVrjFGdgZPhf09nosgoT9Z
WkTg66MHvZk1PrI82ptC+oastC74MPRICokmXVoDESZLLdNIWqX0Jzx3Mocv
6ZKjd7iwx9NKHC4IbxtVkKXa+SKrs5xIzBHpI8g1JhvwxAugp0p2Drf3XNsa
AsBw5kJdw+lUV2a4kmtl5evesmrcHZf3H3kO/XNeVW1tAgmvpBH9OKH1shFO
qJRGvISEmrYrHjhhfkfECE5ovTKbwZ3C/jVF+gnumI7Wqb645h3SfBokiDpj
CNvGpTch7LKzqsd4yvW/DNHt4obHByo24MaknrcxJWMToh6VluKIrg78iGqz
X6aq+cNSY0/FQtye9HOWA7jFPa9ihRpPHet51dk2tBCPm7v0L9xTmW29FK2Y
4wOLr6pe4WI6K2aaQjE7/4hIBlvGFRmt23Vh6HlZ2LqGALVT+hf6tmaTdfgF
rrDvUjTugO2yW3gEz7UOEamSKuuCeAf/UD3B8Q5UhRC+PGc5hivtGeOQprYO
nR9eEwT5BpLin+Cm7m/brKfdMWQOLK5RYXVwJW0t5xGmnlURLlCNLNFtXJLG
28ZQq9u0gFZR5ypyxyDrXbw84iluxfDQvgn709edlY+Ivn3Chk6uofvUKbIr
uNc7BlJw//WNyn7F0V3tnLoYR5cmHcCtPD6QR8xYIB3ECedUhwjCmHSIIPSm
ECzzs94hczGtWn1FFgLccylENYT7cfhFxoT9l7qz3MdiCvsPz0xz3Rbytaqs
mxE0sX9Vyv5Gb08ouo/2qz5agd6SDjywwSZW56OqJ7jvRzsihgltFWlE3tRE
vMa92H+ZY/CGaF/pHspE0a0yy4+B6IxO+uw3RD8ZsdalcZK6v3zdm3KuyMZx
N9zsvTaJsWoJRLg9fowYV21+xibCPVg9oJZ9/oZ2s+WWxSAvQ1V5c94Q8rz8
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
LiKWqX8weoi065j2wguZ+PN/ALJcryI=
        "]]|>, 
    "ExternalLibraryPaths" -> {
     "CompilerCoreRuntime", "CompilerCoreRuntime", "libffi", "ffiConstants"}, 
    "orcInstance" -> 140465395530256, "orcModuleId" -> 105553154428064, 
    "targetMachineId" -> 140465404178944|>, 4504903344, 4504903024, 
   4504903312, 4504899584, "{\"ForeignFunctionObject\"} -> \"Null\""],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.880709200743071*^9, 3.8807092532807207`*^9, 
  3.8807093408107843`*^9, 3.8807093746580563`*^9, 3.880806445524458*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"ebb2de70-f84a-4680-b9de-f8232975cfe9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Beep", "[", "]"}]], "Input",
 CellChangeTimes->{{3.880806424042942*^9, 3.8808064247771463`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"002f0fe5-7320-4a2b-a2e1-e4d9da303fb5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cf", "=", 
  RowBox[{"FunctionCompile", "[", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Echo", "@", 
       RowBox[{"Cast", "[", 
        RowBox[{
         RowBox[{"Native`StackAllocate", "[", "10", "]"}], ",", 
         "\"\<UnsignedInteger64\>\"", ",", "\"\<BitCast\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Echo", "@", 
       RowBox[{"Cast", "[", 
        RowBox[{
         RowBox[{"Native`Allocate", "[", "10", "]"}], ",", 
         "\"\<UnsignedInteger64\>\"", ",", "\"\<BitCast\>\""}], "]"}]}], 
      ";"}]}], "\[IndentingNewLine]", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.880709459036695*^9, 3.880709486462904*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"e9937d44-8939-4597-a3d6-3fbdf6253039"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledCodeFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GraphicsBox[
             InsetBox[
              FormBox[
               StyleBox["\"Code\"", 
                GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                False], TraditionalForm], {0, 0}], Background -> 
             GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {27., {0., 10.}}], Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Signature: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", "}"}], "\[Rule]", "\"Null\""}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GraphicsBox[
             InsetBox[
              FormBox[
               StyleBox["\"Code\"", 
                GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                False], TraditionalForm], {0, 0}], Background -> 
             GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {27., {0., 10.}}], Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Signature: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", "}"}], "\[Rule]", "\"Null\""}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledCodeFunction[<|
   "Signature" -> TypeSpecifier[{} -> "Null"], "Input" -> 
    Compile`Program[{}, 
      Function[{}, Echo[
         Cast[
          Native`StackAllocate[10], "UnsignedInteger64", "BitCast"]]; Echo[
         Cast[
          Native`Allocate[10], "UnsignedInteger64", "BitCast"]]; Null]], 
    "ErrorFunction" -> Automatic, "InitializationName" -> 
    "Initialization_a3da4dc5_d04b_4220_8a4f_8398b66c8a60", "ExpressionName" -> 
    "Main_ExprInvocation", "CName" -> "Main_CInvocation", "FunctionName" -> 
    "Main", "SystemID" -> "MacOSX-x86-64", "VersionData" -> {13.2, 0, 0}, 
    "CompiledIR" -> <|"MacOSX-x86-64" -> ByteArray[CompressedData["
1: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

        "]]|>, "orcInstance" -> 140170358715792, "orcModuleId" -> 
    105553125012608, "targetMachineId" -> 140170360140288|>, 4593816208, 
   4593816048, 4593816176, 4593815552, "{} -> \"Null\""],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.880709489615859*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"52a1d34a-4ead-484b-8d93-ad6d43a9929a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cf", "[", "]"}]], "Input",
 CellChangeTimes->{{3.880709488723605*^9, 3.880709489105214*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"3c6c3848-4507-45fd-b50e-a04f1678158b"],

Cell[CellGroupData[{

Cell[BoxData["140701953061336"], "Echo",
 CellChangeTimes->{
  3.8807094897061234`*^9},ExpressionUUID->"2aff851e-5a7f-497a-a8f7-\
4ec4f341b88b"],

Cell[BoxData["5441179056"], "Echo",
 CellChangeTimes->{
  3.8807094897245073`*^9},ExpressionUUID->"d1e8a1cd-e2e8-4dce-a05b-\
d2d275152bca"]
}, Open  ]]
}, Open  ]],

Cell["\<\
Type pointer: 28365280
Type size: 24
Type alignment: 8
Type type: 13
Type pointer: 283290512
Type size: 4
Type alignment: 4
Type type: 10
Type pointer: 283290560
Type size: 8
Type alignment: 8
Type type: 12
Type pointer: 283290632
Type size: 8
Type alignment: 8
Type type: 3\
\>", "Text",
 CellChangeTimes->{3.88080490923939*^9, 3.880804946618803*^9, 
  3.880805502017105*^9},ExpressionUUID->"9dd129cf-b403-4dce-84da-\
d2ec1ea364c4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"printTypeInfo", "[", "takeStruct2", "]"}]], "Input",
 CellChangeTimes->{{3.880709184485015*^9, 3.880709203600246*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"27a55342-d4f0-4ebc-8c21-6182415f612e"],

Cell[CellGroupData[{

Cell[BoxData["24"], "Echo",
 CellChangeTimes->{
  3.880806863407448*^9},ExpressionUUID->"58389271-b40e-456d-9c3c-\
bffe06b5badb"],

Cell[BoxData["8"], "Echo",
 CellChangeTimes->{
  3.880806863456959*^9},ExpressionUUID->"b0ea31f8-131b-4501-b1e8-\
80cc448480c5"],

Cell[BoxData["13"], "Echo",
 CellChangeTimes->{
  3.8808068634758453`*^9},ExpressionUUID->"5d449b54-c932-4851-9343-\
399c8cb47400"],

Cell[BoxData["5299833648"], "Echo",
 CellChangeTimes->{
  3.8808068635269814`*^9},ExpressionUUID->"c106df64-b28f-4808-b506-\
e74196bb4725"],

Cell[BoxData["4"], "Echo",
 CellChangeTimes->{
  3.880806863544705*^9},ExpressionUUID->"27aedf98-1cc2-4930-ae3c-\
b2fe7f99511d"],

Cell[BoxData["4"], "Echo",
 CellChangeTimes->{
  3.8808068635983458`*^9},ExpressionUUID->"2e175708-0fd1-4056-9c86-\
cf74d8123c8f"],

Cell[BoxData["10"], "Echo",
 CellChangeTimes->{
  3.880806863620208*^9},ExpressionUUID->"70ab2808-f6b0-4c7b-9669-\
e798cb823f65"],

Cell[BoxData["5299833696"], "Echo",
 CellChangeTimes->{
  3.880806863639572*^9},ExpressionUUID->"f774f6dc-f01a-42dc-b8ee-\
e164e2160438"],

Cell[BoxData["8"], "Echo",
 CellChangeTimes->{
  3.8808068636776257`*^9},ExpressionUUID->"38c732e3-6c9b-4a56-bfb5-\
f009274d49a0"],

Cell[BoxData["8"], "Echo",
 CellChangeTimes->{
  3.8808068636986437`*^9},ExpressionUUID->"372dbfe4-558b-494d-be0c-\
a60d679a8eb6"],

Cell[BoxData["12"], "Echo",
 CellChangeTimes->{
  3.880806863745284*^9},ExpressionUUID->"5785d09a-b284-4050-8fca-\
a930f2a47c61"],

Cell[BoxData["5299833768"], "Echo",
 CellChangeTimes->{
  3.880806863764761*^9},ExpressionUUID->"4ac10b1b-07c7-4d52-93f2-\
0ab826f49021"],

Cell[BoxData["8"], "Echo",
 CellChangeTimes->{
  3.880806863811062*^9},ExpressionUUID->"7814dc05-c7e0-4fbd-95fa-\
478283fe02d5"],

Cell[BoxData["8"], "Echo",
 CellChangeTimes->{
  3.8808068638304358`*^9},ExpressionUUID->"854de61c-8dc6-4f13-b3f5-\
f91622cbe6f0"],

Cell[BoxData["3"], "Echo",
 CellChangeTimes->{
  3.880806863876624*^9},ExpressionUUID->"2d9d7ce0-12b3-4118-8f65-\
a5d030567233"],

Cell[BoxData["0"], "Echo",
 CellChangeTimes->{
  3.880806863893242*^9},ExpressionUUID->"9e6afd3a-0415-4e5e-ad97-\
e3a9a7d5e4ee"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"printTypeInfo", "[", "takeStruct2", "]"}]], "Input",
 CellLabel->"In[24]:=",ExpressionUUID->"eafa1026-b722-40df-b58e-fb130d270f14"],

Cell[CellGroupData[{

Cell[BoxData["24"], "Echo",
 CellChangeTimes->{
  3.880709388530789*^9},ExpressionUUID->"59643d75-237a-4376-8da1-\
27485a325850"],

Cell[BoxData["8"], "Echo",
 CellChangeTimes->{
  3.880709388571547*^9},ExpressionUUID->"b1647c2d-0488-41d3-899a-\
1301cce6e911"],

Cell[BoxData["13"], "Echo",
 CellChangeTimes->{
  3.880709388591213*^9},ExpressionUUID->"028471bc-8f08-4092-989d-\
bb118292321f"],

Cell[BoxData["5380537136"], "Echo",
 CellChangeTimes->{
  3.8807093886405067`*^9},ExpressionUUID->"93b03b29-6bad-416b-8d01-\
de01ac6d16d7"],

Cell[BoxData["4"], "Echo",
 CellChangeTimes->{
  3.880709388657361*^9},ExpressionUUID->"acc5fd5a-9d5d-46fe-9762-\
c236e37a6aa9"],

Cell[BoxData["4"], "Echo",
 CellChangeTimes->{
  3.8807093887048597`*^9},ExpressionUUID->"356054e8-f880-4874-be19-\
7e3bbb85404b"],

Cell[BoxData["10"], "Echo",
 CellChangeTimes->{
  3.8807093887214527`*^9},ExpressionUUID->"8ae81d60-764d-4d50-a3e1-\
99a7f757f7b9"],

Cell[BoxData["5380537184"], "Echo",
 CellChangeTimes->{
  3.88070938873977*^9},ExpressionUUID->"b208ff98-93d3-4dbc-9064-de8ec7824f3a"],

Cell[BoxData["8"], "Echo",
 CellChangeTimes->{
  3.8807093887782307`*^9},ExpressionUUID->"94520552-b445-40a6-9187-\
72a1d42dc494"],

Cell[BoxData["8"], "Echo",
 CellChangeTimes->{
  3.8807093887950497`*^9},ExpressionUUID->"88d287cd-a7f1-4980-9d23-\
5f60427f3ef6"],

Cell[BoxData["12"], "Echo",
 CellChangeTimes->{
  3.880709388840864*^9},ExpressionUUID->"681e6827-75fa-44b5-809c-\
fb975ed12ac4"],

Cell[BoxData["5380537256"], "Echo",
 CellChangeTimes->{
  3.8807093888580923`*^9},ExpressionUUID->"7b4ece9f-c171-4fdd-a1f9-\
af7030f5137b"],

Cell[BoxData["8"], "Echo",
 CellChangeTimes->{
  3.880709388906061*^9},ExpressionUUID->"a3abc739-c23d-486d-a949-\
61a8ed166c3c"],

Cell[BoxData["8"], "Echo",
 CellChangeTimes->{
  3.880709388924466*^9},ExpressionUUID->"225aab60-ef3a-4f1b-b789-\
ffea19fe8015"],

Cell[BoxData["3"], "Echo",
 CellChangeTimes->{
  3.8807093889685497`*^9},ExpressionUUID->"42c5d034-917a-473e-b711-\
2fb1a6697a44"],

Cell[BoxData["0"], "Echo",
 CellChangeTimes->{
  3.880709388983316*^9},ExpressionUUID->"57a8353a-8b49-401b-9296-\
bc306ea340db"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Beep", "[", "]"}]], "Input",
 CellChangeTimes->{{3.880709246898327*^9, 3.880709247664947*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"efd86905-dc93-41eb-ab80-05db6edfc784"],

Cell["With cloning:", "Text",
 CellChangeTimes->{{3.880562000494879*^9, 
  3.880562002335424*^9}},ExpressionUUID->"e122fac4-fefc-4f82-8388-\
fcb3ab70fce7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CallForeignFunction", "[", 
  RowBox[{"takeStruct2", ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"4", ",", "6", ",", "5.6"}], "}"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[23]:=",ExpressionUUID->"9ba288d9-818f-44c4-8b20-80c92a494604"],

Cell[CellGroupData[{

Cell[BoxData["\<\"all arg pointers:\"\>"], "Echo",
 CellChangeTimes->{
  3.8807093862480297`*^9},ExpressionUUID->"da536479-f3b0-4de6-889e-\
3735710d3a8a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["OpaqueRawPointer",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["5392165776", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["5392165776", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ChristopherWolfram`ForeignFunctionInterface`OpaqueRawPointer[5392165776],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Echo",
 CellChangeTimes->{
  3.88070938628447*^9},ExpressionUUID->"40ec4dc3-f92b-4835-8681-794a3759624e"],

Cell[BoxData["\<\"arg pointer:\"\>"], "Echo",
 CellChangeTimes->{
  3.8807093863045063`*^9},ExpressionUUID->"fe8a3b22-e358-43b5-9d80-\
00c4b94a2bbb"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["OpaqueRawPointer",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["5369031912", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["5369031912", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ChristopherWolfram`ForeignFunctionInterface`OpaqueRawPointer[5369031912],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Echo",
 CellChangeTimes->{
  3.880709386360641*^9},ExpressionUUID->"c0c762ab-db62-4f47-ae3d-\
8fde3df8b57d"],

Cell[BoxData["\<\"arg type:\"\>"], "Echo",
 CellChangeTimes->{
  3.880709386379187*^9},ExpressionUUID->"19f5738a-89f2-454b-a081-\
6d0a1f8463d0"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TypeProduct", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"FFIType\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"FFIType\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"], 
       DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("DataStructure[FFIType, $Failed]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Echo",
 CellChangeTimes->{
  3.880709386450157*^9},ExpressionUUID->"78e91b37-c0da-412e-9e7b-\
e252cebdded7"],

Cell[BoxData["\<\"arg:\"\>"], "Echo",
 CellChangeTimes->{
  3.880709386477088*^9},ExpressionUUID->"06edf55a-2da1-4790-98e4-\
940eee51a27d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "6", ",", "5.6`"}], "}"}]], "Echo",
 CellChangeTimes->{
  3.880709386519566*^9},ExpressionUUID->"62712ddd-a1c4-44c6-b8dc-\
14a9a64525a2"],

Cell[BoxData["\<\"first arg pointer before:\"\>"], "Echo",
 CellChangeTimes->{
  3.8807093865366373`*^9},ExpressionUUID->"e170f814-cb79-42d9-9891-\
01b5bde3b757"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["OpaqueRawPointer",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["5369031912", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["5369031912", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ChristopherWolfram`ForeignFunctionInterface`OpaqueRawPointer[5369031912],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Echo",
 CellChangeTimes->{
  3.8807093865782633`*^9},ExpressionUUID->"b3873d8c-b961-4fd6-a430-\
727f08d7dab5"],

Cell[BoxData["\<\"first arg pointer after:\"\>"], "Echo",
 CellChangeTimes->{
  3.8807093865963173`*^9},ExpressionUUID->"5ae597f4-e377-4ab0-ba0f-\
da1ec9ce8177"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["OpaqueRawPointer",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["140701953060832", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["140701953060832", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ChristopherWolfram`ForeignFunctionInterface`OpaqueRawPointer[
  140701953060832],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Echo",
 CellChangeTimes->{
  3.8807093866378603`*^9},ExpressionUUID->"a04a63d8-2f98-4375-bf67-\
d00f650fd488"]
}, Open  ]],

Cell[BoxData["1.4586432141943294`*^-308"], "Output",
 CellChangeTimes->{3.8805620048940077`*^9, 3.8805637465616007`*^9, 
  3.880641045145143*^9, 3.880709207033059*^9, 3.880709254126186*^9, 
  3.880709386655398*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"984d6f36-888c-497c-b3c8-1d006aa8d5c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CallForeignFunction", "[", 
  RowBox[{"takeStruct2", ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"4", ",", "6", ",", "5.6"}], "}"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[11]:=",ExpressionUUID->"7cfc4637-dd3a-47ad-943d-9afc3fb4d629"],

Cell[CellGroupData[{

Cell[BoxData["\<\"all arg pointers:\"\>"], "Echo",
 CellChangeTimes->{
  3.8805637505891657`*^9},ExpressionUUID->"f864704f-63b8-45d0-a212-\
0fb3b334ebeb"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["OpaqueRawPointer",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["6130006056", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["6130006056", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ChristopherWolfram`ForeignFunctionInterface`OpaqueRawPointer[6130006056],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Echo",
 CellChangeTimes->{
  3.880563750636981*^9},ExpressionUUID->"023b49bf-ccb6-458e-a99c-\
e2ac39151c38"],

Cell[BoxData["\<\"arg pointer:\"\>"], "Echo",
 CellChangeTimes->{
  3.88056375066486*^9},ExpressionUUID->"858a416d-11d8-49c8-9c4e-b8bc3d0a8399"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["OpaqueRawPointer",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["5973823744", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["5973823744", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ChristopherWolfram`ForeignFunctionInterface`OpaqueRawPointer[5973823744],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Echo",
 CellChangeTimes->{
  3.880563750731987*^9},ExpressionUUID->"ef37ec74-5b0c-4456-ab11-\
cd1c2efa5fe5"],

Cell[BoxData["\<\"arg type:\"\>"], "Echo",
 CellChangeTimes->{
  3.880563750760561*^9},ExpressionUUID->"17aee904-e113-414a-9cd7-\
d73265b33498"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TypeProduct", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"FFIType\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"FFIType\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"], 
       DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("DataStructure[FFIType, $Failed]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Echo",
 CellChangeTimes->{
  3.880563750833459*^9},ExpressionUUID->"950a2a2d-6e6d-463c-9746-\
390da8a9073c"],

Cell[BoxData["\<\"arg:\"\>"], "Echo",
 CellChangeTimes->{
  3.8805637508760967`*^9},ExpressionUUID->"05b7ba91-02ba-41af-8692-\
ea43c813c553"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "6", ",", "5.6`"}], "}"}]], "Echo",
 CellChangeTimes->{
  3.8805637509414253`*^9},ExpressionUUID->"947588da-01ba-45a9-8d85-\
69ae14d03258"],

Cell[BoxData["\<\"first arg pointer before:\"\>"], "Echo",
 CellChangeTimes->{
  3.880563750967823*^9},ExpressionUUID->"f12d8a50-c848-467a-8efd-\
3435b72c74e0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["OpaqueRawPointer",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["5973823744", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["5973823744", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ChristopherWolfram`ForeignFunctionInterface`OpaqueRawPointer[5973823744],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Echo",
 CellChangeTimes->{
  3.8805637510242853`*^9},ExpressionUUID->"7ad91ab7-7e72-4fe9-9a17-\
f3cf5e60d0ed"],

Cell[BoxData["\<\"first arg pointer after:\"\>"], "Echo",
 CellChangeTimes->{
  3.880563751048554*^9},ExpressionUUID->"d855d9fd-ce2f-48cd-95ef-\
2817ce221edb"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["OpaqueRawPointer",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["140701867184096", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["140701867184096", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ChristopherWolfram`ForeignFunctionInterface`OpaqueRawPointer[
  140701867184096],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Echo",
 CellChangeTimes->{
  3.88056375110212*^9},ExpressionUUID->"cdae5c27-793c-4b4b-979c-16d51a2488d1"]
}, Open  ]],

Cell[BoxData["3.05227874572445`*^-310"], "Output",
 CellChangeTimes->{3.880562006840271*^9, 3.880563751123147*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"3a11d221-4461-419c-bdfa-c5d1973867b6"]
}, Open  ]],

Cell["With ffi_call:", "Text",
 CellChangeTimes->{{3.880560810548985*^9, 
  3.880560815761936*^9}},ExpressionUUID->"8b6565c3-5c71-47a2-b021-\
32221e3717db"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CallForeignFunction", "[", 
  RowBox[{"takeStruct2", ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"4", ",", "6", ",", "5.6"}], "}"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.880553203027904*^9, 3.8805532203296967`*^9}, {
  3.880553340964497*^9, 3.88055334596402*^9}, {3.8805534145513353`*^9, 
  3.880553417529353*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"00edc26e-bc42-4587-9048-19be7a4aa623"],

Cell[CellGroupData[{

Cell[BoxData["\<\"ArgumentPointers: CallForeignFunction\"\>"], "Echo",
 CellChangeTimes->{
  3.880849999023753*^9},ExpressionUUID->"82d8c580-f536-4a14-b6dc-\
a3fcbbf2bfc3"],

Cell[BoxData["\<\"all arg pointers:\"\>"], "Echo",
 CellChangeTimes->{
  3.8808499990777807`*^9},ExpressionUUID->"3c5aeab0-b5b4-4e60-8a11-\
f8a36c00d000"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["OpaqueRawPointer",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["6124161872", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["6124161872", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ChristopherWolfram`ForeignFunctionInterface`OpaqueRawPointer[6124161872],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Echo",
 CellChangeTimes->{
  3.880849999102017*^9},ExpressionUUID->"cd92d09a-e32c-4666-933e-\
bf57c4c0397a"],

Cell[BoxData["\<\"arg pointer:\"\>"], "Echo",
 CellChangeTimes->{
  3.8808499991632957`*^9},ExpressionUUID->"e1cb9f6a-e89a-4421-b43d-\
3738809b0edf"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["OpaqueRawPointer",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["4863620424", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["4863620424", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ChristopherWolfram`ForeignFunctionInterface`OpaqueRawPointer[4863620424],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Echo",
 CellChangeTimes->{
  3.880849999184928*^9},ExpressionUUID->"af908b13-dbb0-430e-85ea-\
83a9ccfa3f13"],

Cell[BoxData["\<\"arg type:\"\>"], "Echo",
 CellChangeTimes->{
  3.880849999247004*^9},ExpressionUUID->"3f33832e-653c-4c68-aea1-\
d634ee4b983c"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TypeProduct", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"FFIType\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"FFIType\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"], 
       DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("DataStructure[FFIType, $Failed]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Echo",
 CellChangeTimes->{
  3.880849999302329*^9},ExpressionUUID->"fd72c310-4274-49c4-9d14-\
4f9103025e55"],

Cell[BoxData["\<\"arg:\"\>"], "Echo",
 CellChangeTimes->{
  3.880849999333929*^9},ExpressionUUID->"e0be05b6-ad4f-4b1f-be04-\
19d72b7ff7a9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "6", ",", "5.6`"}], "}"}]], "Echo",
 CellChangeTimes->{
  3.8808499993885717`*^9},ExpressionUUID->"3c391c3d-ef25-47e6-aed7-\
4e0e823e6100"],

Cell[BoxData["\<\"first arg pointer before:\"\>"], "Echo",
 CellChangeTimes->{
  3.880849999407209*^9},ExpressionUUID->"8d07942d-4ffc-409c-9606-\
bd83afec89c0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["OpaqueRawPointer",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["4863620424", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["4863620424", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ChristopherWolfram`ForeignFunctionInterface`OpaqueRawPointer[4863620424],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Echo",
 CellChangeTimes->{
  3.880849999460445*^9},ExpressionUUID->"81812b21-f513-4407-b151-\
0166b99a3dc1"],

Cell[BoxData["\<\"first arg pointer after:\"\>"], "Echo",
 CellChangeTimes->{
  3.8808499994826717`*^9},ExpressionUUID->"52807801-d814-4499-96cb-\
416851945cff"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["OpaqueRawPointer",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["140701872668640", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["140701872668640", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ChristopherWolfram`ForeignFunctionInterface`OpaqueRawPointer[
  140701872668640],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Echo",
 CellChangeTimes->{
  3.8808499995364437`*^9},ExpressionUUID->"840fa1af-b4a1-4062-87e5-\
202bb358691b"]
}, Open  ]],

Cell[BoxData["3.05249094530354`*^-310"], "Output",
 CellChangeTimes->{{3.8805601550315313`*^9, 3.8805601619348507`*^9}, 
   3.880560455188188*^9, 3.880560547052593*^9, 3.88056153339049*^9, 
   3.880806891721518*^9, 3.880849999554741*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"7c915e4c-23b6-4367-a265-ce7c0a333cb1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CallForeignFunction", "[", 
  RowBox[{"takeStruct2", ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"4", ",", "6", ",", "5.6"}], "}"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[11]:=",ExpressionUUID->"e6cb3b64-d877-456f-97e4-b2265b75e2e3"],

Cell[CellGroupData[{

Cell[BoxData["\<\"all arg pointers:\"\>"], "Echo",
 CellChangeTimes->{
  3.880561535593972*^9},ExpressionUUID->"12bf158f-fdb3-4aea-b065-\
f3e8e4155988"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["OpaqueRawPointer",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["5985868712", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["5985868712", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ChristopherWolfram`ForeignFunctionInterface`OpaqueRawPointer[5985868712],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Echo",
 CellChangeTimes->{
  3.8805615356477003`*^9},ExpressionUUID->"3db0d823-8f17-44c1-aa54-\
70c7fcad5750"],

Cell[BoxData["\<\"arg pointer:\"\>"], "Echo",
 CellChangeTimes->{
  3.880561535673709*^9},ExpressionUUID->"2a984d76-cf99-4e98-89a5-\
de735399d601"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["OpaqueRawPointer",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["140702017437680", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["140702017437680", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ChristopherWolfram`ForeignFunctionInterface`OpaqueRawPointer[
  140702017437680],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Echo",
 CellChangeTimes->{
  3.880561535730879*^9},ExpressionUUID->"0fff8105-d5a5-4509-b57e-\
d1abd063df97"],

Cell[BoxData["\<\"arg type:\"\>"], "Echo",
 CellChangeTimes->{
  3.880561535752955*^9},ExpressionUUID->"3bc96c4e-e2ed-44ce-a11d-\
081641cd48e5"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TypeProduct", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"FFIType\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"FFIType\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"], 
       DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("DataStructure[FFIType, $Failed]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Echo",
 CellChangeTimes->{
  3.880561535821436*^9},ExpressionUUID->"f84a172d-d8f4-43ea-b810-\
3e2281fc6e0e"],

Cell[BoxData["\<\"arg:\"\>"], "Echo",
 CellChangeTimes->{
  3.880561535856008*^9},ExpressionUUID->"d4505e62-92ef-4e69-a5f2-\
851e2aa193be"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "6", ",", "5.6`"}], "}"}]], "Echo",
 CellChangeTimes->{
  3.880561535920012*^9},ExpressionUUID->"3d309cf4-9dfb-4eb7-b8a4-\
9c80916a028c"]
}, Open  ]],

Cell[BoxData["2.957412091`*^-314"], "Output",
 CellChangeTimes->{{3.880560460388414*^9, 3.880560473133478*^9}, 
   3.880560549074444*^9, 3.880561535937853*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"3ddf556d-f8c1-49fb-8263-851a74f7170f"]
}, Open  ]],

Cell["Without ffi_call:", "Text",
 CellChangeTimes->{{3.88056081875634*^9, 
  3.8805608209070673`*^9}},ExpressionUUID->"897f376c-b5e2-4fe6-8edc-\
c99028096947"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CallForeignFunction", "[", 
  RowBox[{"takeStruct2", ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"4", ",", "6", ",", "5.6"}], "}"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.880553203027904*^9, 3.8805532203296967`*^9}, {
  3.880553340964497*^9, 3.88055334596402*^9}, {3.8805534145513353`*^9, 
  3.880553417529353*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"c95ea796-9fc4-48f3-b367-2bbfc204278f"],

Cell[CellGroupData[{

Cell[BoxData["\<\"arg pointer:\"\>"], "Echo",
 CellChangeTimes->{
  3.8805608276411057`*^9},ExpressionUUID->"0b7eea20-70a9-4611-9c0c-\
c3dcd1a7efd6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["OpaqueRawPointer",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["4489014072", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["4489014072", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ChristopherWolfram`ForeignFunctionInterface`OpaqueRawPointer[4489014072],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Echo",
 CellChangeTimes->{
  3.880560827691554*^9},ExpressionUUID->"d9189ec5-a69b-4a6d-93ed-\
db3216bb2d7d"],

Cell[BoxData["\<\"arg type:\"\>"], "Echo",
 CellChangeTimes->{
  3.880560827718128*^9},ExpressionUUID->"aa14a864-6ec6-4d85-a74c-\
b57a14c8b2dc"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TypeProduct", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"FFIType\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"FFIType\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"], 
       DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("DataStructure[FFIType, $Failed]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Echo",
 CellChangeTimes->{
  3.880560827784202*^9},ExpressionUUID->"040e70ac-465b-4ed4-bc49-\
0c23eb3c35d2"],

Cell[BoxData["\<\"arg:\"\>"], "Echo",
 CellChangeTimes->{
  3.880560827818824*^9},ExpressionUUID->"2486f26e-af0f-42ec-8a29-\
dc4bbec1f0dc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "6", ",", "5.6`"}], "}"}]], "Echo",
 CellChangeTimes->{
  3.88056082787535*^9},ExpressionUUID->"4eeba37b-c879-4b64-b5fd-577dac455a01"]
}, Open  ]],

Cell[BoxData["2.944312632`*^-314"], "Output",
 CellChangeTimes->{{3.8805601550315313`*^9, 3.8805601619348507`*^9}, 
   3.880560455188188*^9, 3.880560547052593*^9, 3.880560827895721*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"fb3aab2a-f3c2-4126-ab60-df9e411e8cf5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CallForeignFunction", "[", 
  RowBox[{"takeStruct2", ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"4", ",", "6", ",", "5.6"}], "}"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[11]:=",ExpressionUUID->"f12ff30e-75c7-4329-8b1d-7829a7d8a0c5"],

Cell[CellGroupData[{

Cell[BoxData["\<\"arg pointer:\"\>"], "Echo",
 CellChangeTimes->{
  3.880560829107226*^9},ExpressionUUID->"3c928b4c-3d37-49ed-ad94-\
7f273fbf3770"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["OpaqueRawPointer",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["4489014072", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["4489014072", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ChristopherWolfram`ForeignFunctionInterface`OpaqueRawPointer[4489014072],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Echo",
 CellChangeTimes->{
  3.8805608291512337`*^9},ExpressionUUID->"2be5b326-55b3-4ca4-8c1d-\
772188a5cb63"],

Cell[BoxData["\<\"arg type:\"\>"], "Echo",
 CellChangeTimes->{
  3.880560829179914*^9},ExpressionUUID->"98e0be9e-a59b-47f5-aa78-\
44b4fb070f47"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TypeProduct", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"FFIType\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"FFIType\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"], 
       DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("DataStructure[FFIType, $Failed]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Echo",
 CellChangeTimes->{
  3.880560829248382*^9},ExpressionUUID->"bfe10fdf-4b32-473a-a3f5-\
fe8f2a5484e3"],

Cell[BoxData["\<\"arg:\"\>"], "Echo",
 CellChangeTimes->{
  3.880560829280949*^9},ExpressionUUID->"3f6d9af2-f4b5-408f-ab9f-\
837ed743733c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "6", ",", "5.6`"}], "}"}]], "Echo",
 CellChangeTimes->{
  3.8805608293423223`*^9},ExpressionUUID->"31e8dae4-5f0c-4705-9a82-\
edbfa12449de"]
}, Open  ]],

Cell[BoxData["2.944312632`*^-314"], "Output",
 CellChangeTimes->{{3.880560460388414*^9, 3.880560473133478*^9}, 
   3.880560549074444*^9, 3.880560829361828*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"3429c980-2ac7-45a3-bb4d-5bf3df9d0ccf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getTypeSize", "=", 
  RowBox[{"FunctionCompile", "[", 
   RowBox[{
    RowBox[{
    "CompiledComponent", "[", "\"\<ForeignFunctionInterface\>\"", "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"Typed", "[", 
       RowBox[{"expr", ",", "\"\<InertExpression\>\""}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
      "ChristopherWolfram`ForeignFunctionInterface`LibFFI`FFITypeByteCount", 
       "[", 
       RowBox[{
       "ChristopherWolfram`ForeignFunctionInterface`LibFFI`CreateFFIType", 
        "[", "expr", "]"}], "]"}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.880464956955098*^9, 3.880465002236855*^9}, {
  3.880469211765854*^9, 3.880469213536351*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"c7263e85-d6ff-4baa-b709-d4c1fefbaa2f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledCodeFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GraphicsBox[
             InsetBox[
              FormBox[
               StyleBox["\"Code\"", 
                GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                False], TraditionalForm], {0, 0}], Background -> 
             GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {27., {0., 10.}}], Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Signature: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", "\"InertExpression\"", "}"}], "\[Rule]", 
                    "\"Integer64\""}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GraphicsBox[
             InsetBox[
              FormBox[
               StyleBox["\"Code\"", 
                GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                False], TraditionalForm], {0, 0}], Background -> 
             GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {27., {0., 10.}}], Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Signature: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", "\"InertExpression\"", "}"}], "\[Rule]", 
                    "\"Integer64\""}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledCodeFunction[<|
   "Signature" -> TypeSpecifier[{"InertExpression"} -> "Integer64"], "Input" -> 
    Compile`Program[
      CompiledComponent["ForeignFunctionInterface"], 
      Function[
       Typed[$CellContext`expr, "InertExpression"], 
       ChristopherWolfram`ForeignFunctionInterface`LibFFI`FFITypeByteCount[
        ChristopherWolfram`ForeignFunctionInterface`LibFFI`CreateFFIType[$\
CellContext`expr]]]], "ErrorFunction" -> Automatic, "InitializationName" -> 
    "Initialization_fea5aa66_2683_4d28_9d7a_5c76f84d4144", "ExpressionName" -> 
    "Main_ExprInvocation", "CName" -> "Main_CInvocation", "FunctionName" -> 
    "Main", "SystemID" -> "MacOSX-x86-64", "VersionData" -> {13.2, 0, 0}, 
    "CompiledIR" -> <|"MacOSX-x86-64" -> ByteArray[CompressedData["
1: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
TeupdaAVcwGBJh3+2as34elw0tH6QI3Xw8Gpi8QeQ8OpzlIdB7rjD16rhlqG
Twzfm8d8wBo++ml4IGNaP6Ni/rLqoAyqn5JHfCLah+Ny7uHFrPp24UICM6vl
QtarqG5O3RSxP/UcI+8hvTrVXm1+w8eVD10K2suyloShfTohnZe7Ht7Yno/2
6bwPkV1sUvFGm3qaXn7SYl7MaizNWmIrb6zhWlajXTcnembrIp603a6LY9ss
E8029BrDeD34u2yn1fvqeT0ugc0k3QjjPa3WKS32eypou8mDouV9LpG5JF8l
j3eH665kDe50X5acY2QGj7gY2uIS+SehOYqh5td6MaEvYWen8/zOdysHXCIH
LmQtGRIsIjCPtlyGhrLqY7o5/ytm3BVoO61sr0j8Qf8+3UtY1x8yYHOkzmln
Z8Vymdd8mejKWCfccpfkztIsllnlAgIzrOXSbBP0tC0rGlwCH1I9lTzKEnrW
mnGZOzzYSvMbBpJkXqF1LoFtNC+wcOfDd3/FPnS1Ro3fhcYHnA7XJTXJRD4P
XQKfKq4o/UsHCRTt8xCpvbvlclZupFyg9stZrfFdnAFHhg/1PvuH+S+3rGx4
d7SHqpvNvCt++P5j+6en9hogTlb9+26O7S60MarFvulQKLr5aMP1rNa4Lk6n
bi+o2wIXJLYzfg7/g/jzZrZqiQPpxkO7Tw2Xsp5v7ebcnPZ1e6/edXH2z2WU
LEy1pnRaPyBbL+zhUHywH3nSTscuzpYVMlH50j7hFzVfybo5dmZs5RqemGqi
7+TTPhwiqzZQXyY1YXotaNlS0SO73hd3ePhy1pJ3EiRh+4W7JvrgZtvEQzLJ
eSdx6/RdfQwdy/ei+/jpIysroQthfRdx717U9JZu805+SEf6RNZdzGI5EIGz
hPaLIWdI85Q8nGrqXPx6LmTlBhEWoS1h10NltNB2l8BC4lwEcZ3LU47tUu6P
gGPUWdl8j0HaGVD/Nwq6M7HFZffApSz902KPqZpCbaeQluEuTmyFrHqnasy3
bqtObHCJ/Pl7gAX2XM1a1onB4xM6B7rkWvNbqd5KHhcPv7y2suF6AAd1LHrX
oQnJyPJOoH3sznDwTMOVUKGSwpLkh5eyGqNGW2J/XSZSUpHf2rxyv6k9iWAk
Cn/lnDV8sYtzY1orGmFR92TVZ2Qi57GjGEquuw4ajTDU+KGb0+mQ/f8VLLwz
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
Zu1dXEn4f/8HXqOjGw==
        "]]|>, 
    "ExternalLibraryPaths" -> {
     "libffi", "ffiConstants", "libffi", "ffiConstants", 
      "CompilerCoreRuntime", "libffi", "ffiConstants", "libffi", 
      "ffiConstants", "libffi", "ffiConstants", "libffi", "ffiConstants", 
      "libffi", "ffiConstants", "libffi", "ffiConstants", "libffi", 
      "ffiConstants", "libffi", "ffiConstants", "CompilerCoreRuntime", 
      "libffi", "ffiConstants", "libffi", "ffiConstants", "libffi", 
      "ffiConstants", "libffi", "ffiConstants", "libffi", "ffiConstants", 
      "libffi", "ffiConstants", "libffi", "ffiConstants", "libffi", 
      "ffiConstants", "libffi", "ffiConstants", "libffi", "ffiConstants", 
      "libffi", "ffiConstants", "libffi", "ffiConstants", "libffi", 
      "ffiConstants"}, "orcInstance" -> 140597322150144, "orcModuleId" -> 
    105553156071232, "targetMachineId" -> 140597609700864|>, 4584719600, 
   4584715936, 4584719472, 4584710144, 
   "{\"InertExpression\"} -> \"Integer64\""],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8804650190301943`*^9, 3.880469229954344*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"673fd13f-d839-47c9-b9e1-b4872eed864a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getTypeSize", "[", "\"\<CInt\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.880469222407012*^9, 3.880469224063613*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"5465c6e7-5f47-410a-b8cd-db1592d3d6a5"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.880469230056294*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"b0566870-b5a0-4764-b792-f6800708c4bb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getTypeSize", "[", 
  RowBox[{"\"\<ListTuple\>\"", "::[", 
   RowBox[{"\"\<CInt\>\"", ",", "\"\<CInt\>\""}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.880469225174218*^9, 3.8804692393850822`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"4ef2f9f3-72fd-406c-ba95-88700bf5f070"],

Cell[BoxData["8"], "Output",
 CellChangeTimes->{{3.8804692321153927`*^9, 3.880469239655158*^9}},
 CellLabel->"Out[18]=",ExpressionUUID->"85404239-1b5f-4261-98fe-0ff4d5f8bc55"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Needs", "[", 
  "\"\<ChristopherWolfram`ForeignFunctionInterface`LibFFI`\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.88046552399971*^9, 3.880465526147222*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"435e4bc8-2d42-4d16-9b4b-2757700b6eac"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cf", "=", 
  RowBox[{"FunctionCompile", "[", 
   RowBox[{
    RowBox[{
    "CompiledComponent", "[", "\"\<ForeignFunctionInterface\>\"", "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", "elements", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"elements", "=", 
          RowBox[{"CreateTypeInstance", "[", 
           RowBox[{
            RowBox[{"\"\<CArray\>\"", "::[", "\"\<FFIType\>\"", "]"}], ",", 
            "3"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ToRawPointer", "[", 
          RowBox[{"elements", ",", "0", ",", 
           RowBox[{"CreateFFIType", "[", 
            RowBox[{
            "InertExpression", "[", "\"\<UnsignedInteger32\>\"", "]"}], 
            "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"ToRawPointer", "[", 
          RowBox[{"elements", ",", "1", ",", 
           RowBox[{"CreateFFIType", "[", 
            RowBox[{
            "InertExpression", "[", "\"\<UnsignedInteger32\>\"", "]"}], 
            "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"ToRawPointer", "[", 
          RowBox[{"elements", ",", "2", ",", 
           RowBox[{"Cast", "[", 
            RowBox[{"0", ",", "\"\<FFIType\>\"", ",", "\"\<BitCast\>\""}], 
            "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
          "LibraryFunction", "[", "\"\<ffi_get_struct_offsets\>\"", "]"}], 
          "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
            "LibraryFunction", "[", "\"\<get_FFI_DEFAULT_ABI\>\"", "]"}], "[",
             "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"CreateTypeInstance", "[", 
            RowBox[{"\"\<FFIType\>\"", ",", 
             RowBox[{"<|", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"\"\<Size\>\"", "->", 
                RowBox[{"Typed", "[", 
                 RowBox[{"0", ",", "\"\<CSizeT\>\""}], "]"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"\"\<Alignment\>\"", "->", 
                RowBox[{"TypeHint", "[", 
                 RowBox[{"0", ",", "\"\<CUnsignedShort\>\""}], "]"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"\"\<Type\>\"", "->", 
                RowBox[{
                 RowBox[{"NameFFITypeID", "[", "\"\<STRUCT\>\"", "]"}], "[", 
                 "]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"\"\<Elements\>\"", "->", "elements"}]}], 
              "\[IndentingNewLine]", "|>"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Cast", "[", 
            RowBox[{"0", ",", 
             RowBox[{"\"\<CArray\>\"", "::[", "\"\<CSizeT\>\"", "]"}], ",", 
             "\"\<BitCast\>\""}], "]"}]}], "\[IndentingNewLine]", "]"}]}]}], 
       "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.880465089098784*^9, 3.880465092851363*^9}, {
  3.880465437183401*^9, 3.880465579365906*^9}, {3.880465655042733*^9, 
  3.8804656550764503`*^9}, {3.880468467215699*^9, 3.8804684727928457`*^9}, {
  3.880468824573968*^9, 3.8804688246891727`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"8d0184e7-aab8-4da4-a549-e057dd41fbb2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledCodeFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GraphicsBox[
             InsetBox[
              FormBox[
               StyleBox["\"Code\"", 
                GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                False], TraditionalForm], {0, 0}], Background -> 
             GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {27., {0., 10.}}], Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Signature: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", "}"}], "\[Rule]", "\"Integer32\""}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GraphicsBox[
             InsetBox[
              FormBox[
               StyleBox["\"Code\"", 
                GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                False], TraditionalForm], {0, 0}], Background -> 
             GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {27., {0., 10.}}], Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Signature: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", "}"}], "\[Rule]", "\"Integer32\""}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledCodeFunction[<|
   "Signature" -> TypeSpecifier[{} -> "Integer32"], "Input" -> Compile`Program[
      CompiledComponent["ForeignFunctionInterface"], 
      Function[{}, 
       Module[{$CellContext`elements}, $CellContext`elements = 
         CreateTypeInstance[
           TypeSpecifier["CArray"]["FFIType"], 3]; 
        ToRawPointer[$CellContext`elements, 0, 
          ChristopherWolfram`ForeignFunctionInterface`LibFFI`CreateFFIType[
           InertExpression["UnsignedInteger32"]]]; 
        ToRawPointer[$CellContext`elements, 1, 
          ChristopherWolfram`ForeignFunctionInterface`LibFFI`CreateFFIType[
           InertExpression["UnsignedInteger32"]]]; 
        ToRawPointer[$CellContext`elements, 2, 
          Cast[0, "FFIType", "BitCast"]]; 
        LibraryFunction["ffi_get_struct_offsets"][
          LibraryFunction["get_FFI_DEFAULT_ABI"][], 
          CreateTypeInstance[
          "FFIType", <|
           "Size" -> Typed[0, "CSizeT"], "Alignment" -> 
            TypeHint[0, "CUnsignedShort"], "Type" -> 
            ChristopherWolfram`ForeignFunctionInterface`LibFFI`NameFFITypeID[
             "STRUCT"][], "Elements" -> $CellContext`elements|>], 
          Cast[0, 
           TypeSpecifier["CArray"]["CSizeT"], "BitCast"]]]]], "ErrorFunction" -> 
    Automatic, "InitializationName" -> 
    "Initialization_be37e1a4_8cbe_4804_9eaa_55260b251a0e", "ExpressionName" -> 
    "Main_ExprInvocation", "CName" -> "Main_CInvocation", "FunctionName" -> 
    "Main", "SystemID" -> "MacOSX-x86-64", "VersionData" -> {13.2, 0, 0}, 
    "CompiledIR" -> <|"MacOSX-x86-64" -> ByteArray[CompressedData["
1:eJyMXHs8VOn/P3MfDGYQU8gwkkpmQi6RxqVoF8nWrlrVkGwq1yQVmXGdioZu
q2Kj7brfrVRyLzOotItUNjZyiY02t1KoUX6fMwep7Y9fr405Z87zPJ/n/Xl/
rs9p9f1CvPxwCILw3yBIi0RLCT4iGvDXGa4pCIJzdJK0LIQbJLjnR+MafrPm
VkCqLO+K0kqBGzpOn4YgSQsRRAmvj+DhWhP+UoTsdIcq4nIy3czmEC6BNotE
nT6TeMBPwFqKdzyk5EhkmGlYU5nfKprFiVxDK/XZzmrJKXSHQ3j/KupVDZbT
MhHrHs4sLoE513hu2oLoXJ90VlUVzLuPhSDb4LeZAVWR5bcM0Z9nmMHSnwU/
ps+mJZ5J48f5+7AMN8dJDJ9TJQLEmH8QOcHmPafycHMC9xv7vt/3ct9eaaDR
6eNnNDSyDd0Zs9zswxY/4KAfLiJMFoubTXBk4S0a5zjOYDMUSSRSHo+m6MBT
2U7EOVwg4pZvVsStvIDHrdlMwvkaE3CBm3G4sM1E3K7NeJywG4fbZ4zHpV/A
4Y5fIOByugm4i5sJuKsZiMDHNYk/MGJ/9fZMAwaJQFiwTOCQPd2cxdLwrKEK
FIKpd6lWtDMb43DPcvBOCCIZqRMzNBSNq8iIhT+ZSqXONXPE4XWP42CRQykI
wvv2DF+RmmCkpxduhqM56OYg5TQvEsliE5FE+s3x2Zljs3ABhV6eLBN2s3Ha
sTnBGhqKLNGfVMS9c5MikhhnRMKbVyjz1Pe1z5ID0MVVvUZP11rq8ebb79QQ
RFRN20RV8A9IMkMQR/NyZeTi8Rxa9r5GmjAbQRyCjagsazbLOC1TgS6qBdn8
f9qvTYrDU8vNK9yF+BfKRDdcHXJbxwEnoK3iCYmBKVSUIyuZwC/4rS1qG4M/
FBbNklmOflIVEBKk5I0j6GdcKBJIcBxFPyIZ+Gycb67QGC/QsLS+gz05B9mL
jOJYOI06inZKh3weHqGcHy8kInOQx2Tjd/JJuCSJqmAJYijA/4t0xyunvEbv
EurI8uGuPL1tvGOIq4CUHa9MZSMKuchf5NP6iH2jwBqXhijxgri/IN7Ilnic
sgTvqZ0iQjQFKpZ0NcRQO20OosbH/aZMnYWOisgVXiCCbJ6PP8kmwQ1QBMTN
PCYSg9RJyf++n5QHsUY+ImmIYp2Ai7znE4Q4yfRtodfQr/UElogbboDAw79H
QKQkTZCBop3RK99dtjKyBB0osG/kheIkFG2RB3JMOWFYviNWEOsWYh2vTGRS
YTZWOR+p5RP0ycRQsnbGAirihdSyqGks5Vxl0nSig2Cb8R88Kp64nInZp3oc
35HlRk1SwK90o6YolAvdqIcUEq5xaxIkx7l2nhb6fCPaQ2d3puj0CZb3bWJ7
uRHt+GM3puXlk6yohwltJ7kCB6ZImsCnGRFbEqTseLMMugDVs7pRtIRgO0Ky
zY63pFKiBJRI42RLVnJoWvIeV8rORr7iP3Xk3mxKfx15gEXZiVB2cynh2ZTt
LEoQohoeSgmTf0ZvYg/AZz4lIpsSyaMEpanAT/SyjvxcQAnNpoSxKFF15D4B
ZTedEokNlH97nU4JF1C+UaUy1JySUo4gOAvHjMz95TdsogvaAyPXqOyv8THT
ovnv/dOhZoD5JjMul2VXS3b8e/P8sBO/4HMyQ/YUzTf902GBjpJh/D3/OQ1Z
N53wabyqZNgeOB+ESucnJxiLslUJYIhwTWdJVJZ70R30yAgigGsWT6CrlszF
LwGviMAYngCxNTTz/vyBh9rcz2cIVNVwrpu6xCpFmkF3Bfot/CVSc532k5IZ
I77ot/AXT2zU/4CvpI5y0W/RhfA9aS04P+JeJvotuhAu0nUMWfCZGGd+FjCF
n4mxgpcimSrGi/msZW1TxXijRWcPTBVjd6roczGELl+I8Yz9hRgGal+IMX3f
52KoHXf+XIyLHgafi+E/l/G5GMVHvxAj59svxHg96wsx5qp/IUbWl2I02dXW
oWIgE0oJMXQtnCpG/aIki9EK7AG5GCeyEmY4+43fQMV45eGnzF4wfgMV44/Z
0qTDTOxaLkbf4c2Eb2jYDbkYsvRCh1lk7AYqhpfi8haJ2lQxkg25TJ+pq9xI
N1RmTV3lo+s18qGpq1w1XF6xZOoqYYd+zzGcusri5Q/pU1d5ccZwK3cfDruB
bvbId4eYNM7UVR5/YxCvbzR1kg3LA7hVlVMA2T1fQZl8Yqok7bMCnT7b77tD
9fzcqQut8oOFuFMXCnbzi2//bKETy5tzP8PkvqEFc8tnmJzwJ1e4TV1ow+HS
nCnA6q8uZQRjHGPJ8xQB4vTbbu1kG57AEMGINKSP0PmuiXtOe1KoaUSMKhJ7
IoKnXYzgbibY8QTO408KYAn9v+aQt2fDk+OkAnJSuWce3mWpvEFwh8ZpAyvh
klZtne4ZLGcmdk++dBnNyEouh5zUqMz6R7eRNfXkU8kXgaclaYqLCS9VBRjA
2Pb5rv+ckqor8uTj8BiM3DNbHghmkFjIpz9EpldiYNsRPF2euI0DRbvYYiHw
wMln540DnrQqdobxji/FW6V8etWX4l0m/zUXwfGnivfvuvgejS/ES7yGm1GI
p2MzTazbZinif7lujrZr7pfr/q1s6P3FuqvfkdVNvoQlNl5B84t1b5RLiUrY
7JOwvG7nx43DgpuA5XYYV/qleK42Gf8Rr0Dnv+JFqBh9Kd60JRS1L8X74yzh
P+KRHv9XvBMv/yve8Uj6f8QLtv0vet26/xFv7geV/6A37QBF4z/oVccHgXjW
yMQfFL0u3Oovxdv9VlD+pXipe3K7QTziVPGaF1dFgXjEyflAvNl61UIOAlkP
zCQYX/ebfgJVB0E80Zl44+uefe9gqIKkmSBTjOjJB74ZlB6oH8HRx9ctiqXn
EOiI8tR1Py4R1cO6lKmwcI1X9cDshKlaM9Mw2PklmXUV1e0Q3MBUWOZOI7nO
/EJrRw84Oqp+AYuai/4hyhew1PyK/E34QmvLvLIHQDzqVFis5vDfg3iTUKHi
FWiYxCB4Fn7iHg/Zp4xPpGxFkGuw8vdwx2wmVDgMt7QUBSOXO0QnvDExjom7
gFNk4lgJDMQrd5aBQRIDCW/sGjYy2CL456fz1EDafvhyX2rzMseUJGZlgAHN
oLh36tVvb6dePQw77WnBu/V3Z3uJ8k8/v/hn/kJVzor2f8KeZJr+WWAQsNvj
/OP2nmsXmmYdcP/G+cTaf9eI3MdncR+f2318nnLPLSdOPfoziDtlhuVOPwfu
9eAUSKvfZN5SumuwzInWjHOuvFr5klWhltno1nk1rclV9IAe3+iW4OA86thN
4GlcxX//L6vG2Zl4TSS/a7fvd2nMAYLb1tCedmf19B7pDpVpJsTj26RhFHqQ
9KjHRvoflpnyWQg7kQfjH51eWJAv/l5RlJrAVF6Qm6zuXnmN1mWp5mdRybJU
B1yvAsWy4Lc5VaBT2a4ToIFbLHKyTqhIcRRQdkVRtmeE0Z4jqr10lTcCFXOa
48xyqW5tjk4AlyR/LF67mrC4ymlxCmFxdVRKRChlD5WyyzU5NJSyO5QQGZUc
ykqeXs1Q6UlTaeeqBnNVOwZUBjxVzOmVui36Oo36uuW+MwO4+2xL423rnGzy
CHal8XYJBNvqAY1IPmXPZorV5uRw+ClA0+dQPqTSlMgREky7U5C8gZocxkwO
z0jelSE06RtQ6WtTeStR6eES/KpydDpzdKrlP5t9df7Q16kU6v7hS36c5mRT
5WSTIf9ZWGF9xMlaRLA9UsGBRUfjbOsJtrkVtLuByaHeyeGh8RGbKVH85Ahm
ckR28vTa71T7ENXXniqdaSodPNV2lkoP7IJlrNssnVnuMPOhvk6zcGZzm05n
u+6/uJkBzJXWuU6LMuNtqz0NxzfCT94ZRYnKWOn2Jk0VRWDmlpl/+Op06+u2
SHX34maiAuvrDviSVyXGW1dX2OY6LQZARsvtOp1sRXBZkXJbEXaavBPkoVJ2
G1PCM4Q+HXSVHonKP54qg1y29KHDzM52rcZ23RYQwHW6bW784rx47YQK6xQn
m+oKu0KpTVUF7NGu2jUvjEoBqcIAQO/k6U13VHr4qr1tUG2o/sNV/YelOuSp
EkxX6eCqwOVgG/lFm0qnp8oIl/2sx1enXKjb2K7Vo6/7XF+3Ul8XNNitrxfA
yrItdVpcSLA5Em9T7V0K2ofN7gY5XZN3hgJ6ySr/0FUG5NL2c1UG01TeeKqg
Vr4LPIg7/A6f6cpyEtGmK4SbubLYwpT09AfO2XRjf7sFZo4H0/R/3czagVPX
5a/NB1/zQ8i2gHDfIJZTSFBo4LZN4Swz0wXmpmamXFZASDjL3Xcja8V3LG9W
lLUly9jSYr5fYMQclrFHSOSmID94eIG1CcuMa2Y2xz0kmLXAhuW8aaP8mrXA
YhGXu8jCbNu2yCDTbSEhoaaRmzZGhIQH7t5kuinY12/bpq99szPQP2Lzpy/8
A7dHhAf67YiYGAN7Y1PrFqewkLdcJ3o1nWpOrKDhw6pZGlW0uLAqV36cl+/G
61u3L2fP2/6r9ize66I9G80PK23dfnXe4ZPf7tmuPcvVq3j8FuN/325ky05/
u3We9iwIHxfBbvVhfiXFcGOwB8pu79AM0EEFMM+mriLuuc6dHOVuB9Rcn6NK
QnmmadHBV+nyBPqqdqIkVu3yVHmTKxBSdhnLrSsqOQzjlndoZoV1Hs72TPzi
IxX4rWCoOs3tOs0snU5f9Ge3cGa5r05djk4VRgjcA/D6aJpJqbY7E2+bCUZF
WJwdbwcGllaBhgdf0PNP8Fud6GSCBggKGjC4eB6Bjazy5M7yJLIR0koNkiOX
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
        "]]|>, 
    "ExternalLibraryPaths" -> {
     "libffi", "ffiConstants", "libffi", "ffiConstants", 
      "CompilerCoreRuntime", "libffi", "ffiConstants", "libffi", 
      "ffiConstants", "libffi", "ffiConstants", "libffi", "ffiConstants", 
      "libffi", "ffiConstants", "libffi", "ffiConstants", "libffi", 
      "ffiConstants", "libffi", "ffiConstants", "CompilerCoreRuntime", 
      "libffi", "ffiConstants", "libffi", "ffiConstants", "libffi", 
      "ffiConstants", "libffi", "ffiConstants", "libffi", "ffiConstants", 
      "libffi", "ffiConstants", "libffi", "ffiConstants", "libffi", 
      "ffiConstants", "libffi", "ffiConstants", "libffi", "ffiConstants", 
      "libffi", "ffiConstants", "libffi", "ffiConstants", "libffi", 
      "ffiConstants"}, "orcInstance" -> 140558440932800, "orcModuleId" -> 
    105553133585920, "targetMachineId" -> 140558442497024|>, 4518167824, 
   4518164224, 4518167776, 4518158336, "{} -> \"Integer32\""],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.880465109124666*^9, {3.88046556858809*^9, 3.880465596176997*^9}, {
   3.880465651705781*^9, 3.880465672404502*^9}, 3.88046849138361*^9, 
   3.8804688424659643`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"c3f616a0-eeb7-427d-a2b6-3df89e9acc09"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cf", "[", "]"}]], "Input",
 CellChangeTimes->{{3.8804655941548843`*^9, 3.880465600576746*^9}, 
   3.880465699393705*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"61aafd9a-696d-41bf-8237-12496085bcab"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.880465597623447*^9, 3.880465601113783*^9}, 
   3.8804656997931623`*^9, 3.8804684914754972`*^9, 3.8804690307532997`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"5ef7795d-0843-4e95-b93c-b189e3180eff"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Beep", "[", "]"}]], "Input",
 CellChangeTimes->{{3.880468478652727*^9, 3.8804684793903913`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"063b9efc-6e57-4476-bf08-7174d6552f15"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cf", "=", 
  RowBox[{"FunctionCompile", "[", 
   RowBox[{
    RowBox[{
    "CompiledComponent", "[", "\"\<ForeignFunctionInterface\>\"", "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{
       RowBox[{"NameFFITypeID", "[", "\"\<STRUCT\>\"", "]"}], "[", "]"}]}], 
     "]"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.880465625291504*^9, 3.8804656429333363`*^9}, 
   3.880467461749854*^9, {3.8804688283837223`*^9, 
   3.8804688287324953`*^9}},ExpressionUUID->"6b6c0bb2-b6c8-4961-b3c6-\
cb673564e4a8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledCodeFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GraphicsBox[
             InsetBox[
              FormBox[
               StyleBox["\"Code\"", 
                GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                False], TraditionalForm], {0, 0}], Background -> 
             GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {27., {0., 10.}}], Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Signature: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", "}"}], "\[Rule]", "\"UnsignedInteger16\""}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GraphicsBox[
             InsetBox[
              FormBox[
               StyleBox["\"Code\"", 
                GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                False], TraditionalForm], {0, 0}], Background -> 
             GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {27., {0., 10.}}], Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Signature: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", "}"}], "\[Rule]", "\"UnsignedInteger16\""}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledCodeFunction[<|
   "Signature" -> TypeSpecifier[{} -> "UnsignedInteger16"], "Input" -> 
    Compile`Program[
      CompiledComponent["ForeignFunctionInterface"], 
      Function[{}, 
       ChristopherWolfram`ForeignFunctionInterface`LibFFI`NameFFITypeID[
       "STRUCT"][]]], "ErrorFunction" -> Automatic, "InitializationName" -> 
    "Initialization_13e731d3_95d6_4b0b_9534_0bce2c8b4760", "ExpressionName" -> 
    "Main_ExprInvocation", "CName" -> "Main_CInvocation", "FunctionName" -> 
    "Main", "SystemID" -> "MacOSX-x86-64", "VersionData" -> {13.2, 0, 0}, 
    "CompiledIR" -> <|"MacOSX-x86-64" -> ByteArray[CompressedData["
1:eJydVn9UU9cdvy8JeQ8ILy+CGEoSXwQqVqUvP8TEwEwI0KhoA7JTemZP8kJC
TUUIMQVE515IMNHSLirtoa3dwLKeddtZsdKt7XFtIFTRpg613ejqPDARbQ+1
rP44btV2973EztXun75z3r33+73f+73f7+f7vfd7lY7mGgcCAPDgAJyPLkiH
Q5AF/zpIowAgZebo+RWQkQJ5DhGVv/bRdxqe/mrotfRqpopdpxQB0MsDIJ2n
BLAD2fBH/Xn7TGOCNUJCrd+PBEUFKViOQvCUg5FW8Mr2p5eNEuosHSZdl6Z2
hC2eUWVe+bxQN2Haz3OOYYezSHNlmDyBqB1B6QOFD0RUOwc37SOPjUG9e0gA
lsNevSicSjoqgXJpfq9UWQCbnMWiroGI3eHcROY3dNozZjAebwYjMzFtXMIM
y5AyobyykFg7gxmHs947TKKqPNDgSQsqjg4sORQ8cUk2Y8pe9OWhsT273GvL
qq3BHm1FD3V79Hr5u5PazNNVNWnZPZzg4t8v/vev4GDJ/C67NLO69nnTb5a9
HSfnp7gqPWl/gwPsyd2/fobX10za0xjBfe5DFSn4qtRDLJ7VUgAKYZ8bnvwG
figpKiZ4IDwsfPwmSyNUSlQMdOBrEGF+NMEQSASkG7dSe0EdeCJAi6I8a253
AGQzeDEZBvlRXm1uWAD2Z4TngdRB8JHQKWEEdWDVBEOxylaDV8Bmo7SRfAGQ
XRnBPDAw6O/4Gk78DFQhc3yAM6tBvpE/Ai7zoUIiAg4OCxelMRo29mugnRjs
M4PGXlI0GuynnklF1LSlxzUS1Z4STLnvF4wHSR7IvH9nlG+4mWLoCxRjaDuD
thaGismQJxLaYUHbJuxpF8eFn/ehX4wL50i0DaAdFOrtQ7eR6FYg9nrQFm7M
MhMCcGxHfX1oqxHdGsFhy5LjwhkG9fShLSTaPi68wqAdBNqaWMjNHiFQL4Ou
FWOSecbd3T0A0Zb1Htw78oZ+5x+n3K2P4ns/2KReIHLuet/0wZz02sHOQbLk
lLDs483LW174Ba//YPOOt5YXvW9SydLzAyecS/760p/MvHyjXQgAAwEgI4zy
2XKY3QJI8EgWm3nUwOu/Q1h0gBFwLW93bSOFpgI29RkON0YgenUX4gAA4ggE
nFi+3XIdP80HqfC8ECwDIRHzA5HeIgDSWIrjpUprPijvQRA7SOAPgCUa2bvs
UAbG8O/e7snqJ42cbh5ImlTz9GU+R3B6QATsyeB1aeB5fZ1dxZ5btaKXyJFU
RbpT73/omMDMq4S8w1DHS7DXYIxsdErWkIWUhs26YKy7jEG3t6PbeltEM0D8
OYFfY3CNqEwxMiw/1S9roFI4sUBunF86Zi7t5pfG27t9HnQHhm63hDwetMPD
b20PechQTlyCz0bwKUrcRIkvzOFzVlxDjMrPK2UTSvkIrWig9hiOBgzjZv0Q
v+RooCTIN8Tnslrt6I7N6MrNIS9sGTadPHaYWmjrzRSoto0J2bBQizTk7Q1t
7/UvuzKHX5nEr0fxWYrvGOuXTffL4lx7jpadVMpG/fKTtPAvEbN+zKzv5do3
Y7oesy7MN/TEHoSb3uo0fMg3DMZEx90hT13I6wn4NqPt9pBPGvL1hXJObRRf
AeIvrfh0BL9gFE+R+Cz0giyUnxtWjJgUZ5Syc37FuUnZ9JT8M0TRIK3WDZpX
HQwY4tb8pCP2UFs72t5bXXUtImYRUDyhOEnLLivl54fluxAFa7BSPkcLa7sC
unjMMGguhYDcGimZNhvCkIx1v5cGPQ21QXswtKMQ9fb6N10g8NkoftGKX6Xy
hs+YFNNTCyam5OehAZYcw2CgdCiQG4zpus36eKzkzWH9WAz6WBK3DLVgKLSq
BQJYF8r55Bg+axd/PglPn/giJb5Iim9Y8SYCv0DhkLw6Kfx0Ep+24jepvH/M
0rIRv3xiasGsUj6jlI8q5TCCl5ULG8iXDEfNpW/y9T0BfbzuKIw+dLYD2mkJ
tXkgeiH8IoHPcdZ+QeFXI/g1K86m6HZ4mtjLxquwkOawKCfVq7aQef7ufftO
l/cRhc4SlbrsmYjyZR1xAWTK7eCR5sYGL72VNDdv9bgbXV5SXaTSFKmLKLKh
2Uuup+vJhzeSdWS7rpgsLNYud7h9S8jCDc2trq0OKKzSLSPVlFq9ZH1zE6nS
k+Wueo4mVZpVmpWrtBqgEQyL/JSZGrPYO2vo+iNbtq3JW7rt5dwC6Zdv7ajX
HEjfsu3w0gMvrtuxLbeArHk7yZL8dl193leH1m1ZmltQCF6F50kJfUpP8xbC
PEU76jy9EJsYzAj9eKxzRnasP+OyiT1GMyx4bPyztRfs+CUrTCvxNJtc4ktW
/Nog40e3F3JZ3x5qScS8znMwphtCDAOB0p4Ybws8QLJzU7JzpGyaZtvLfsUI
LRvvl40lAoWchjeBkK3D8ZKBgOEgTHZ+aV+gBCZ+JMbWbJpM3DyZguEwggRJ
qeikcMqYuOmOGWuNzoVR5Xqj9vYKkPhYeQUnb15GJK8ewYdgfh4oAAKEfk5J
dPr3jhCYPSAJ8DATNZHlmGAie0FvATbih7Js0LNPY3hM9/RCyYEvShb0Jcdn
EZmI0a5+95egBjxVfmtnMzHvDJnJW2YRVoXP+jaY79pfwu1v4vZnfajtBiBP
KCA67VSJvtvQaBR0glkCF7B+Z9PQh6/GOOXfnHqxfBE4c+3hCfP/1TXU860u
7W1CqOR7l0hPDCISgtfHwsLhcsN+l87z/G91WTldD3G62Lu2tieKGZVZJv+4
mmcVFBjPwMvcBzGiIUbz3MR9ndTbjoCEz4cwjQ1UPF+AVYrSSMGw/cBzlRmn
+ofcGL67s0u0UpAmjauzyimHHSgx4ccflRwRDFeN5mThS+LlWFde2m2Z4Pin
l6iS9cJpPJdATEAjsU5Fyu77DFJ+I4gJg4RQAFeTJCZ8rG1+LMMkEB4RVRLE
ovDzWL+nnJ5gMAEyNjkhCeQhJurmCDkWtU8wN3m8ZNByoC+774rZK4cwRns7
8wbxhy7infKUxUxWdJFktW0hwkXu1k+RvZNU99mbEtXfo6qKrH9evTFftrFc
svrnC6PDwHL16tBjFkugChskcyjlhrP6jBbh8azq0T9f4nBsIRP5qsaJRUHk
Ol9HWBhBv6DOuI4RHhckcsAFK/FP2ILH75lk84+NwCfwfxD+Vck41iXzhe3Z
h6wdSdBpsM+EvRz2ZayOpNydeZCUZz8bkojjvGTc2fcUyAfACfkLQOJ9m53k
Y5C/A/K1kF4GEnfaHfnXkESe2ZKF+Q4/mrSlGSTmOb4OgLNI4t3NgMT8HflL
SMKWA3fJs/v+K8kf+A4/nZew7w34z7+Lr+Ql5E9+R17DS+wHkj5z+yZeEuAx
iPmzCcxfYbFwN7l9brrR3UH73M1N5c1NrvW0u+lxl8/mdtoqK9fYah+1Vtg2
1tb82Fy75n9kbSqNa6VG5dTY9CucxTatg3LAkUZroxz1LnW9zqFdWUyxymzm
NU2tzfXcIo5+xEt7PC6vzUw3NnKMinaP978yG1xttjtlocLrbfZuc/kq2utd
HnZyo297owvK1W/+lmWhm5xQ1Ox10T7Xmiaf63G4DmpUaYuoomJyZYOaXuFw
Urr6Bp2K0tArXNBemip2aVZoNTq6QafVO/Uqhw6WGhusNNC0RtdyJ+1tczc9
sv7b8vRDilNRW6ON8+/74bT9ADxt3wW0ynYPpLbvwdR2D6i2e1C1fS+stntw
td2bM/89c/8B2CFn5A==
        "]]|>, "ExternalLibraryPaths" -> {"libffi", "ffiConstants"}, 
    "orcInstance" -> 140528779935632, "orcModuleId" -> 105553171962144, 
    "targetMachineId" -> 140528629911552|>, 4546941040, 4546940944, 
   4546940992, 4546940928, "{} -> \"UnsignedInteger16\""],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.880465643430792*^9, 3.880467463239499*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"87d71572-7f9c-4b42-bbcf-1aa61b8fc37d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cf", "[", "]"}]], "Input",
 CellChangeTimes->{{3.8804656438511477`*^9, 3.88046564420124*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"93f1f4e1-cc08-4da0-8834-6add36e1abd1"],

Cell[BoxData["13"], "Output",
 CellChangeTimes->{3.880465644428419*^9, 3.880467464329803*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"a8c30378-c07c-4799-8a3f-1474ba727278"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cf", "=", 
  RowBox[{"FunctionCompile", "[", 
   RowBox[{
    RowBox[{
    "CompiledComponent", "[", "\"\<ForeignFunctionInterface\>\"", "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"Typed", "[", 
       RowBox[{"expr", ",", "\"\<InertExpression\>\""}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
       "LibraryFunction", "[", "\"\<ffi_get_struct_offsets\>\"", "]"}], "[", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"LibraryFunction", "[", "\"\<get_FFI_DEFAULT_ABI\>\"", "]"}],
          "[", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"CreateFFIType", "[", "expr", "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Cast", "[", 
         RowBox[{"0", ",", 
          RowBox[{"\"\<CArray\>\"", "::[", "\"\<CSizeT\>\"", "]"}], ",", 
          "\"\<BitCast\>\""}], "]"}]}], "\[IndentingNewLine]", "]"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",\

 CellChangeTimes->{{3.880465089098784*^9, 3.880465092851363*^9}, {
  3.880465437183401*^9, 3.880465579365906*^9}, {3.880465655042733*^9, 
  3.8804656550764503`*^9}, {3.880468467215699*^9, 3.8804684727928457`*^9}, {
  3.880468824573968*^9, 3.8804688246891727`*^9}, {3.880469069155574*^9, 
  3.880469110049111*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"c30042c1-cdf1-48c3-9107-48331cf3635b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledCodeFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GraphicsBox[
             InsetBox[
              FormBox[
               StyleBox["\"Code\"", 
                GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                False], TraditionalForm], {0, 0}], Background -> 
             GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {27., {0., 10.}}], Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Signature: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", "\"InertExpression\"", "}"}], "\[Rule]", 
                    "\"Integer32\""}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GraphicsBox[
             InsetBox[
              FormBox[
               StyleBox["\"Code\"", 
                GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                False], TraditionalForm], {0, 0}], Background -> 
             GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {27., {0., 10.}}], Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Signature: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", "\"InertExpression\"", "}"}], "\[Rule]", 
                    "\"Integer32\""}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledCodeFunction[<|
   "Signature" -> TypeSpecifier[{"InertExpression"} -> "Integer32"], "Input" -> 
    Compile`Program[
      CompiledComponent["ForeignFunctionInterface"], 
      Function[
       Typed[$CellContext`expr, "InertExpression"], 
       LibraryFunction["ffi_get_struct_offsets"][
        LibraryFunction["get_FFI_DEFAULT_ABI"][], 
        ChristopherWolfram`ForeignFunctionInterface`LibFFI`CreateFFIType[$\
CellContext`expr], 
        Cast[0, 
         TypeSpecifier["CArray"]["CSizeT"], "BitCast"]]]], "ErrorFunction" -> 
    Automatic, "InitializationName" -> 
    "Initialization_b37dcac2_f4fd_467b_8258_4a060533c522", "ExpressionName" -> 
    "Main_ExprInvocation", "CName" -> "Main_CInvocation", "FunctionName" -> 
    "Main", "SystemID" -> "MacOSX-x86-64", "VersionData" -> {13.2, 0, 0}, 
    "CompiledIR" -> <|"MacOSX-x86-64" -> ByteArray[CompressedData["
1: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
fapnWDxsc6UypPf8vbB3Awd1GeIHGwNYs8SPxHe9vFSY9IFFllJZ2sCAIGTr
9IqB4wx/gu6bAd0++qI29hhL3wHZQIin14510xkWP4kffXoxkHCwNkT7jbxi
8ywKbkRcN+sSeOIv3VlwL/GRxqbWWTDJq5k5xYpV3X0xs2N9N6sPX4Cu3ay4
A/JKhnqMlx1TZWHdJcBsYev0+wOxnawrfnJxixEehVrdDj8qyTQJ5QCyjbKP
mfKtra7QvVtI+9VMvSjJEu07i21/m9yeeLm2h315zKYd784G3rPWPKAmXrGv
Mdz81tpG723zmay9hO74zzc//xVl9tRjrPm/r+q8780Q/i4U35c1ekd/7GNc
jxJznf4R3bpKfppLPz4vLW3L3hmy7CMa+ceSlmdZNq39eGa1+VnZE28N45YT
QvGl93VElW1q4rj590994pwUnji9Tt7H2DrTaQLzafj+S6tEJ4mHnxxbV5dg
ebgvu6Ev21O7+U/SPNq9MEqoRx6le538TJi5dE2j95/xkpNC8c139d6vf5Mx
tppFwvtv5suy914SVBSSsmAO8cffTdTLGuuxt5nE0Cq5+WHgmqBiqeKJy801
E8eiF6LcZNnye4KKC8oX5Oc1csRLOVs21nRefy6oaIwyP3ubeJxoaVaz1lza
2egdcYw1Oo2jVlLUXXrmTdBN+Zcv4U+8o594a9nzLRUPat4P9DGuXhdUlFFP
4DAOpImfeK8yljHUf1CYeFXG+NQlqPiovROeXz0WZm7zI+kkjHBzzfWosea3
YD4a/4OZnSh6AZOH+ahv/2pQ8k1Bm46K/WHDnic3Xly7scas+/2XJoHVpXhz
5yhR2nJKQeW6hi8rG7379vVlz9HsEf9omUU80xnfvdK15s216wlw9+o/grbd
Y0OyaQWS+AUDq81PvqjzXuWCofFkTxwkpBM4+H2M0uOCimTtw2gOz1ea//u+
zvtjYxuO0pk1xtNzxOq55OOGn27kbgyF4ce3CO+Y7b4ZetHwnsqasy3B0dxP
Y9sXn93nqzYJ1rbTQbk40ySK4z1JR6QXF14Xs6h1XaYs/jOkN4i1QQUcb3sS
Wrl1sHKnNr77tLrGbXvrlczALjxtXM587dTNep7QDBFI1c+uP8Pug3g6lUOy
8CJ72j8yZ2yunnW8eRb1AVOlsebDaljI+hw8B0O+sYe4OYHjCw9/vPaqd1GT
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
2HsSld6Tg9G3K9EL6ejzP1MVx/l3jP4vJXo1Vm+1Ur23MPpNJfpTOiofHVRF
+ZTSUZx4B+jGOPkcr4PKuZ6mopx/oYO+Z5qm4nu+xujOSvQVgE6H8qaJyrWM
HqqDyudqTZx8gnrTAd0OXG/UxOkvKH9SB+3/Uc0xfYH0izpof89pjo0P1Ou7
Omg7rmiOjTMs/0wHHZdWTcXxHMLoz5XoWrpo/z9oKumXLlpej6ZY3kYXrZdF
U+Svly6qz7aAPg5HD8TeM1/pPeG66LU/TdE+JGD0YCV6ji7aPh4NN/5gPPfr
ouObCeiGOPqfuih/99Nw/AX067po++A/mmzcQEV3dVH+QZoWjt6OlddXKv9M
F+U75LE2jv4P9p5pSu/5iNG/UqLTgDGCR9xBf5GOo0/UQ+2UJ2HMrkK6pR46
PssJODkBP+wx+joluhdGT1Cir8Lo2Ur0KIy+T4mehtGPKNF3YvSzSvQijH5Z
if6HHjqWzQScPAN6LUbvUqLfxugDSvSnGJ1KVKS/w+iTlOhUBkqfqUQ3xOjO
SvQvMPoiJfp8jB6kRA/A6DFK9FCMLlCix2P0PUr0HAY6XiXEMZyCsvoDA9W3
k8QxuwcLHmegZ9rVAToVV/4kA5UzeKjdOBy9EqPfUqJfwuitSvQbWL1P8PWC
fxKM3q9E/weja5AU6RpMlD5JiW6I0Wcp0b/E6POU6C4Y3V+JvhSjc5ToERh9
oxI9BaNnK9F3YvQflejFGP24Ev00Rq9Sol/G6H8p0R9g9HYl+nOM3qdEH8Ho
RLIiXU8fpY9Xoptj9GlKdHuM7qhE98Hovkp0+A9i/88UxGe+AH3k5LB4axtr
toNnaly8X2xYBDceUmytHdmQ4s3lc+PDYuDP5Ynx0fz1yK80XnhszNgvK2v0
3sJYfkJiGD9R8crKRunaVunaTunaXunaQenaUenaSenaWenamq1MsFYmKDfR
WrmN1sqNtFZupbVyM62V22mt3FBr5ZbaKLfUxnqhIiWaH50YHRYTnR6WGB3L
94jlcxOQ++j/W9nYyH7Yyn7YLVR+p70KxUGF4qhCcVKhOCtTbNkqFOX2W9na
qFBsVSgqbbZVabOtSpttVdpsq9JmW5U226m02U6lzXYqbbZTabOdSpvt7P3D
ovmchVHx0QmJsXFR3PhVsTGR8WE8DscrNp4bvZ7vlcRfB9noy0/kxkeGreNy
OH7R4V5evhzOwnhuWCIX/FyRFsfleHE4vkAPE6HKcRMSwCOcQPAW7C4nAAhD
MvjrzU0MDItP/IYfFp+m7hlYz3puvIOdyh1/Li8WPAPomHhxl4R/x12XyOGg
nYJvAzUGJMXEcOSFPbgx3ESsIPYgVg576P9+xCua/x8fWBfFXbfBLTw2PnFV
WOK6qBVR8bEp67mJsMscD08vt2/8VnDc3H0jI6M5kAxkPQk0NjYyMoGbmMDh
rE9N5cRx4xNiQQ3RiWmcZHZMTDLPipsaB+q1irZelgQ0iQfGNZ7LhaMAR43j
yfHleC4P43GXgp+eHPfY2Bgu4COsGmOcZ+o6bhxkmB+Xvz4xiqM6tGM2EqWv
iP1mhZeTe1oiN2FVdGIUuEAfxRrgFhMTuy4MPpnIgX1JhOxMjo2OUCAkRfMT
nRQoCSoUWMbaQaWQEgmWsrVRKaVEgqUc7FRKKZEiY2LDEhUoEbFJ4TGKfUla
FxUWr/gmFUpSQhTgs2IhVRJslEqTFEvExPLXKxZRocTFRkNdQ6QhISwiwioF
cMUqNhmoX0xsilU02sfoCETQVqwJ9OQsX7Hsm4UrvuEDBYtPCItZxl0PtDk+
DaiaCm05NxHjK5QrpA4el7cuLs0qjh3thP4fqMFXwYRzwm0dI9aFrbPhRNpF
RnDsHBzDOU429k4cuzC2A9ve1nadvY0Nakh8+clQWsBDyPWq+LA4IOSchWEx
MQgBit1YmQBuCmdhLC8uOoYb7xkfHxsPVEMuwMsT02K466BqyUk+YfwIUBQ1
PJg4wzeCARlTRLQQdBM8A77x80ML43wElDCmBX6xsRuS4lAvAWqVbFBAW+Tj
gdBioiO5cOSsgO2MR+8p0rn8CIRqbWfFtnJgOUbahNmHR7Cd1kU6WbNtw+y5
zvYRYMS4tvZ2tk5hkU52zhHO1uFOqU4OHAe7OWCkYrhzIsLiU6L5q/xlw8Ky
trWysWKzImPjWf5h61hLlrNWs8ATrJngkfDoxFmsmQFANnjhsKjTbJYN28Zm
llVKDAcOtx/n/wfT7vf/gXH34/y/Mu9+n2Pg/8ND/5eJV2vjOWqMPOc/WXk1
Zp6jaOc5yoaeM2bpOSqmnqPW1nP+o7Hn/LfWnqNk7jkq9p6javA5qhZftZS1
g2oxZRpq9FXLKdNQs69aTpmGGH6OGsvPUTX9HFXbz1Fj/DlqrL9q41SbxlEF
AI4qAnDUQQDn/8AAjnoQ4KhDAVUigAEODgc4/xEIOJ+BBBxlKPDjqIABRw0a
cFTggKOCBxy1gMBRQQSOGkjgyDGBowIKHGVU4CjDAkcdLnD+EzBw1CMDRzaT
5YxNZTmyuSwHN5nljM1mOWOTWA5+PstR9OWVLq1slAm2ygQ7ZYK9MsFBmeCo
THBSJjgrE6zZKhTlpoO5rQpFpbXWKs21VmmvtUqDrVVabK3SZGuVNtuotNnG
mqM0d+KoTnM56HyWI5/oyn/Zyn/ZKb8HzHVVSQ6qJEdVkpMqyVmFZMtWJal0
Bkx5VUm2qiTV1tuqtt5WtfW2qq23VW29rWrr7VRbb6faejvV1tuptt5OtfV2
9ki86f8BrA4ifA==
        "]]|>, 
    "ExternalLibraryPaths" -> {
     "libffi", "ffiConstants", "libffi", "ffiConstants", 
      "CompilerCoreRuntime", "libffi", "ffiConstants", "libffi", 
      "ffiConstants", "libffi", "ffiConstants", "libffi", "ffiConstants", 
      "libffi", "ffiConstants", "libffi", "ffiConstants", "libffi", 
      "ffiConstants", "libffi", "ffiConstants", "CompilerCoreRuntime", 
      "libffi", "ffiConstants", "libffi", "ffiConstants", "libffi", 
      "ffiConstants", "libffi", "ffiConstants", "libffi", "ffiConstants", 
      "libffi", "ffiConstants", "libffi", "ffiConstants", "libffi", 
      "ffiConstants", "libffi", "ffiConstants", "libffi", "ffiConstants", 
      "libffi", "ffiConstants", "libffi", "ffiConstants", "libffi", 
      "ffiConstants"}, "orcInstance" -> 140597590522880, "orcModuleId" -> 
    105553156033376, "targetMachineId" -> 140597592007680|>, 4577281584, 
   4577277888, 4577281424, 4577271808, 
   "{\"InertExpression\"} -> \"Integer32\""],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8804690977737007`*^9, 3.8804691277171593`*^9}},
 CellLabel->"Out[8]=",ExpressionUUID->"0264abef-6de8-4b5e-aeda-2ef26733b3f5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cf", "[", 
  RowBox[{"\"\<ListTuple\>\"", "::[", 
   RowBox[{"\"\<CInt\>\"", ",", "\"\<CInt\>\""}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.880465007860362*^9, 3.880465026798655*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"14c60938-243d-4b97-834b-32dd222a2076"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.8804691299153557`*^9, 3.880469131825601*^9}},
 CellLabel->"Out[12]=",ExpressionUUID->"954317e3-c414-420b-a933-bd5ff49db34f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cf", "[", "\"\<CInt\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8804650991953487`*^9, 3.880465100398047*^9}, {
  3.88046909307838*^9, 3.880469119516141*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"3df9b858-e10a-4a6b-930e-2382975f3699"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.8804691299756317`*^9, 3.880469132868235*^9}},
 CellLabel->"Out[13]=",ExpressionUUID->"72905c48-4a6e-46b7-b0cc-7f4084c2a748"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cf", "=", 
  RowBox[{"FunctionCompile", "[", 
   RowBox[{
    RowBox[{
    "CompiledComponent", "[", "\"\<ForeignFunctionInterface\>\"", "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Typed", "[", 
      RowBox[{
       RowBox[{"{", "\"\<InertExpression\>\"", "}"}], "->", "\"\<Null\>\""}], 
      "]"}], "@", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", "typeExpr", "}"}], ",", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "elementCount", ",", "elementOffsets", ",", "expr", ",", "type"}], 
          "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"type", "=", 
           RowBox[{"CreateFFIType", "[", "typeExpr", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Echo", "[", "\"\<element count:\>\"", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"elementCount", "=", 
           RowBox[{"Echo", "@", 
            RowBox[{"FFITypeElementCount", "[", "type", "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"TODO", ":", 
            RowBox[{"Check", " ", "error", " ", "code"}]}], "*)"}], 
          RowBox[{"elementOffsets", "=", 
           RowBox[{"CreateTypeInstance", "[", 
            RowBox[{
             RowBox[{"\"\<Managed\>\"", "::[", 
              RowBox[{"\"\<CArray\>\"", "::[", "\"\<CSizeT\>\"", "]"}], "]"}],
              ",", "4"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"ToRawPointer", "[", 
           RowBox[{"elementOffsets", ",", "0", ",", 
            RowBox[{"Typed", "[", 
             RowBox[{"99", ",", "\"\<CSizeT\>\""}], "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"ToRawPointer", "[", 
           RowBox[{"elementOffsets", ",", "1", ",", 
            RowBox[{"Typed", "[", 
             RowBox[{"88", ",", "\"\<CSizeT\>\""}], "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"ToRawPointer", "[", 
           RowBox[{"elementOffsets", ",", "2", ",", 
            RowBox[{"Typed", "[", 
             RowBox[{"77", ",", "\"\<CSizeT\>\""}], "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"ToRawPointer", "[", 
           RowBox[{"elementOffsets", ",", "3", ",", 
            RowBox[{"Typed", "[", 
             RowBox[{"66", ",", "\"\<CSizeT\>\""}], "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
           "LibraryFunction", "[", "\"\<ffi_get_struct_offsets\>\"", "]"}], 
           "[", 
           RowBox[{
            RowBox[{
             RowBox[{
             "LibraryFunction", "[", "\"\<get_FFI_DEFAULT_ABI\>\"", "]"}], 
             "[", "]"}], ",", "type", ",", "elementOffsets"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Echo", "[", "\"\<offsets:\>\"", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{"Echo", "[", 
             RowBox[{"FromRawPointer", "[", 
              RowBox[{"elementOffsets", ",", 
               RowBox[{"i", "-", "1"}]}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "elementCount"}], "}"}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.880469302266637*^9, 3.880469433718685*^9}, {
  3.880469650128231*^9, 3.880469703560235*^9}, {3.880470589991448*^9, 
  3.880470623885558*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"afc4d485-6eef-4b4a-bf99-23a19b6b1aa8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledCodeFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GraphicsBox[
             InsetBox[
              FormBox[
               StyleBox["\"Code\"", 
                GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                False], TraditionalForm], {0, 0}], Background -> 
             GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {27., {0., 10.}}], Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Signature: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", "\"InertExpression\"", "}"}], "\[Rule]", 
                    "\"Null\""}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GraphicsBox[
             InsetBox[
              FormBox[
               StyleBox["\"Code\"", 
                GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                False], TraditionalForm], {0, 0}], Background -> 
             GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {27., {0., 10.}}], Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Signature: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", "\"InertExpression\"", "}"}], "\[Rule]", 
                    "\"Null\""}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledCodeFunction[<|
   "Signature" -> TypeSpecifier[{"InertExpression"} -> "Null"], "Input" -> 
    Compile`Program[
      CompiledComponent["ForeignFunctionInterface"], 
      Typed[{"InertExpression"} -> "Null"][
       Function[{$CellContext`typeExpr}, 
        Module[{$CellContext`elementCount, $CellContext`elementOffsets, \
$CellContext`expr, $CellContext`type}, $CellContext`type = 
          ChristopherWolfram`ForeignFunctionInterface`LibFFI`CreateFFIType[$\
CellContext`typeExpr]; 
         Echo["element count:"]; $CellContext`elementCount = Echo[
            
            ChristopherWolfram`ForeignFunctionInterface`LibFFI`\
FFITypeElementCount[$CellContext`type]]; $CellContext`elementOffsets = 
          CreateTypeInstance[
            TypeSpecifier["Managed"][
             TypeSpecifier["CArray"]["CSizeT"]], 4]; 
         ToRawPointer[$CellContext`elementOffsets, 0, 
           Typed[99, "CSizeT"]]; 
         ToRawPointer[$CellContext`elementOffsets, 1, 
           Typed[88, "CSizeT"]]; 
         ToRawPointer[$CellContext`elementOffsets, 2, 
           Typed[77, "CSizeT"]]; 
         ToRawPointer[$CellContext`elementOffsets, 3, 
           Typed[66, "CSizeT"]]; LibraryFunction["ffi_get_struct_offsets"][
           LibraryFunction[
           "get_FFI_DEFAULT_ABI"][], $CellContext`type, \
$CellContext`elementOffsets]; Echo["offsets:"]; Do[
           Echo[
            
            FromRawPointer[$CellContext`elementOffsets, $CellContext`i - 
             1]], {$CellContext`i, $CellContext`elementCount}]; Null]]]], 
    "ErrorFunction" -> Automatic, "InitializationName" -> 
    "Initialization_41426058_81d1_4dd7_8275_90cc0b1aae5a", "ExpressionName" -> 
    "Main_ExprInvocation", "CName" -> "Main_CInvocation", "FunctionName" -> 
    "Main", "SystemID" -> "MacOSX-x86-64", "VersionData" -> {13.2, 0, 0}, 
    "CompiledIR" -> <|"MacOSX-x86-64" -> ByteArray[CompressedData["
1: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
0g40O/VlyBAnQa/56hOvQXcFI32nSkwRju/IECRfJIvTNQKiPp6gq71Xl6H1
ckkMcowfaWMwI5rxQnr3Jw1nqqmzyjybCibyn7lfsaV/e0o7on3f46/QlCuo
yf3IRNOKO/2a2Msr7/3CQl9mvJCwvaT8HWOJZZD8OlCVfuWu9mDuXpcTHcbO
KrMWMyjPZTGuziYLOn48amXqyrIdzhgZy+mNOagiGk8UaZOdX+CiuqRYtqxq
XlTSw5uYA1F0KTHnq7yGfUIbfofFoGqNzeBY79UKf5eXCLLHtgUeQOR3rMdH
UfNEM8FJZ41WwNXj4nuCmj2Kc43p6dB/tL+w7su83tzlK+4toGL7qa5E+6nu
P5WYMjlhqcuLk0WW5tufWY0+fmerlfbHN9Oq9qv4jno/LyhDq8t0tjtteFLq
5IfJLmUni5akbXvmOV7v7tbkkU/htENfdo16Pj8+Q4vFcnCnnUg6Nzmh1KX8
5CY/czjN7i+42xj16mlHBI1wGncP3I3l5L5/1HF4qPZCeOgR9NBF6KHj0EOP
o4cuRA81h4eeOA4PXbMQHnoNPXQ1euhk9NCT6KGL0UMt4KHDT8BDjy6Eh5ah
h25DD52BHnoGPXQpeqgFPPTUCXhoKXpoC3roHvTQ2eih59BDl6GHjkct1UJH
98eha60S4c5jaOi5jzhwQoYhEpQxFW6ettVkvjvtnpb5jmeJp+NsfEdtn544
Qb7fbIYS2m/W1VIX7TVL7DdrM8NNGdtpFr7bGOjtbTGLdVOy2m8Uj3YU2Y9v
DzdKxd3kAFZpOHW+Fu0BHJ/iKS+9amhliNezXZV4wGSY9yh9C0PrCej7Ws6B
Hfc3BZV7noyzV04z1r3vGft2v4lywtr97+iXHJR0nbWcDN5deBd3iKJDSzD0
o0+wgbvpTk/2093HSd7K+RmvUc8IKRprc27cdrLMbFfR6XGe77WUd+B1YvsL
x7I3JwSYKEXD+/+KFr1WOooICAlE9aI8OtCCTmOMRzj6S0sYRH002xgZoF4Q
fkpUG0sfPyUX8Gec2gTMzMCfZFBcsFnrGbU0hPzhdQ2PjRHeV0aVbeQQO7qL
vvqfp6AiWx15RO2B6+gqMOC+H3qLxB7LnF303tnIZKarNZxPVGkVd6KiicM3
6SYdk+Fbx3cTX5GtrTJKJaotvJyxZlAJrLqOmBilIzaUl1uEthtlnZNdBspa
XO+Q+f1JWYz5rTzAU+wVxTZLz3MaFdfju/spYft5h/g+RIsyQ0uBLCYH4BLI
aWUtwCXQmy8tsXaW88PMOlluFtb4GTcqaHjjczcY+eFLFPPa7Mq2ZKPmzoiW
5HzCztsjqliN1yT1Feb1gZ3Ty3E3XVuBFj58JU5qCK/H1jH7dvTcAOCjcRTd
YZcRxqp4Be6BhcsJ0d5rpU0g9ymn4ouCe/JkMxX2U3bA9Hsept/KuH5zVFlK
SiMMKHuV0WZCuqgYvEoRn4Lq2FY9mPpcjx5h3MJ32rTPxPAm9QcVH6x8rZIF
/Lc1wvhSz1HEl/j3sJcOOy9+Pxq9mJBX5u6LBOcryW5lqRW6DNddmnFU0rPR
yBffMj1czBrfrjbn8MLhRb0xXMti51SnufQKWd+cy/MZsX1+LNMF87SIzj/f
L1s4+ZkYWJtHIaFRDV/9gQnSkBZmRlewvW6j7uq8Dng4dFvR3s/Iht1UV05T
pfM5NJZSiNWrwE2eVncfleuzlBq3NqPTlFg0Vd14z3qd36y07FSohs+nqcy1
8nJzM6XT3tZrLrLTVR5HjR9jzUkH4/2lJMF07b9g5PQRyoR977ZX3ZI8Tpc2
UcfcM3YTVVmdznkYp6QP931sdBPt+26zVOqyOROzmFpxp6oNrqCzzsoy3tLM
idHOVtyOgEFjPSzKiz6vNA/hQpereE40od+zjspmKO6Tba/QVjrRVivVlbGx
9C3Qw2rzxpzSp81z1/K1VuZsyNCnydt58ft2lmu6yNt5E7WzMMF004fB7bT6
f7UTf+cGW1d3X2RJR4WZPOKNpaWyex+xpt2/3hBmhIKDBiCMGbhgMuqkLsGU
UswKuqIlBTxlXH1nbZDZK7ZzI9bOBQP+2U2ZpTTfjYbaC40F/6y95b4pB23t
R48vszLf61Q0N3mr7v7U6bqHL5iPME8s49jQH7oFcGY+bJ+graqypbjwJvjI
RC+6t/p+RoIy38nKZF9korf6oTIrl6PTd3FUtCnP9UaM1oGHzYHnhRkhD9CE
ajr8TUOD21lHUaHA9/jPGfmo+xAVzDorZv/tGJtaJV+dP1sku/8Sa38Wr4Gw
h9qOno1n/FDtm7PCr23Dn62UEmaU5SsZTzgICa8PiGAW5UdwR35NOctmDDOZ
wPa6T3ElvlueEBg7zUNsHG7XG0P63NoOqb+o0LLXosie0SUbc0t3eBxN3XTJ
9vnOh6laWIB3hkM1LG6XpejPV+rKObrXUNuaX+ps6JzWAAxn/D1LrEJtHuYF
/ZrvChT6YBjWB05oM163NaAxLeVqcfvBKyC9Ixsm6d54xgdpwFlhpC/u7P3E
NgP3mIrdw3kQzso7Ef4V64+EfrRCe3LR412tjaEfKaOsJ1wD5Qsz2edZnKrk
pau1JG7M8bXxF1ZoHQzUMtKNc1K6o5IAL2KA+SaMkGHB5VkOJp4u346uGNwn
XW+GcO015qeas6+LcPPKLBXN8buNXvVeuqiTYvWXivMJntCxr9KgHOsJnjCq
T6j0/yUHeGTPRndMDteb9/im4zdvth24x309dI8tDLS//Vpyf3uMbOxz01Vd
rrLVjaO6wmzcj8aP3DR+/1Fn64+GYM9u1JErTcF9veVttSp8pGQwb4ynLs2b
+Lg9keZDfNx5k7Zr4ARf4uOucpof8XGLG81/4NeAgV8DB34NGvg1mPjo104L
IT4G6KqFEh+DrNTCiI8hbmrhxMf1B9So67UCrOFlIwYu30N8DAtQixx476iB
y3kDN40eaE0MeVMuDb+pKW1zAPHRibY1lvi4ibYtkfhYFLqTvEZNA/0E4PXJ
CvoHZD2Jf2BHykiVYpsyDTOv0dtUTa2P3olPTn6M8G3EaM1NJ0114+M0Ysc8
njsmVnuBFh3Vzjcv31QVayWIVVqgpQHflcxfU4bt16b/1b1PydDaJNZQhfoj
/TCDivyIrupN9BNo7AnOgU3Ui47KygTt+5mjthU0GPyOJ2VM/CbqAziUPM6Q
NpEWoXv8ghF9i66bp+5+I+UZSlTzbiWa9yi+0/2Lw0DpU+GSBxcs4hlUc00n
q8QDPPorjtuBtfFeqV58nUQT2sT973XVLxrR53HQ5n30d4VAUHVYwBnfxaJP
5oYfDFde1FXf7GRl5amUtCI27i2taBiwzwsu8W/3/6ZT4pl9YcRy0+Rx9tC6
iWiz7OKLI+SbZZugzbILic2yk5UpIdQL2/dp0dEhfXToFnGoXBnt6W0ar1to
GTfNzfrK/OMTajndCbHKCVY1usnKhiZxmlZWz25OeDAyC8HQSLTRRSDjiKHJ
Wnp8nGONs5tG/MLnelbUkfMa6x/BDWyObbCs5Rgqa2g9CJhXruFt9azepigg
oVxjC3xyLOI8MRl9ZIPNs4Q4CpV/hKqlZUd/F0u7o6U1QsvO+BaHVqH91k2n
yDJuOgnjBm8TnR5dqr/3kOasxODY6dJCSmI9D2jzOWPQnt/zZ+J7ft/UhUPH
gvFDSmPpgH/1jL1kt48r9BqxX5s/Rp3uiXekm5flAtCMqiS5Zowr8RpBfNQv
MTO0NdltbhILCEN3suKo3zHZh3+MVb1DhxuNhRudNBl9xbCGuuiin0ks0YHl
FK3EcjXD5K2JZm8P8eDqeA0nK/qBN/QFWomWQPXHfjazUqNM9la/FHfI9I/u
eXCD03/OSfMz0aKgfWdMd6tNT9565YrnfafdatPg0zXP1M1WSU/nXHn0oDCW
4rxImbbfaO9xDsQbHzX2Gx2LMEn4uD/J/qDnydTR1hOu6KokBCgJkkpSvVa0
V2+imsUi+SQswuVTroe2S/cah2+XvgbbLp04ZDIcbZder462S6/iPPK0WB0f
St3ExDuQo+cZu3dpYaHlvP3qq2tUjhiOWEmPd7LP5Vp5xW6B/vnsZuTkQk+z
XpyqvVKLwR3/hvOoPCDsONyAPsGK/lC7aFFykSU1U/Wh9oNFifCpUpU6JuH8
9rDbk8fQaFomevpWVjUmvSqjn0/bvsGqJiBXZdQSu97iNSp3VGr4Tk5AYvdS
Y3qdaSPPxFfqGOlSnNGmKs/NgOzYmsTfMUGbqmxLohTBoaK5aFOVP/FDypkm
wHO8VumCnXaDnW78dPyGEd2WgdvpTbDTRmWw08L64enJmoaE7NYkeRYrPQXl
aDRlK5/TLdx80kQLTHS7VpUq+uutVaOqlR1npYJtM1lv+dzz5CatYhO0VUc8
WOvjWK34uGNFGx4UehR7moJeG3LSpnpCV9Zr2iRvpSdMo0OP3UM9ltd92POk
pxZpswFbpg62WZPRuGEm0pDNGh5VsFkGcegKDdlsG2azo7RWatmuoB0cFUI1
nYJ3WqEBdJoPdNrDUclxAY98CglRPjylwqK56Md7mgybrFezr5B5R2W7lZu1
806O7Tb4a7PT03YbaIlpaqEJ0MzfNoFZ7kykgfFajQbjTaX5oM2O/RJo3ido
z0Z7ehYqmWVRqA+143elQs+OvukEHZhCgw6seewHHbiTZKic8ZlJg01YRJiw
HdLDR/6KJlyHHyp0RCbsMmqvkrd6tWeqV8AYW5dqOPka0Yc10IevqNCHNana
eye9ppLSXDDO0JpzG5x2hMsJjq2K8alxuxPA2A5R6wLh74WDVFFggtzeurXB
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
0sv40sv40stCBidGJhVxf/4X2kU75Q==
        "]]|>, 
    "ExternalLibraryPaths" -> {
     "libffi", "ffiConstants", "libffi", "ffiConstants", "libffi", 
      "ffiConstants", "libffi", "ffiConstants", "libffi", "ffiConstants", 
      "libffi", "ffiConstants", "libffi", "ffiConstants", "libffi", 
      "ffiConstants", "libffi", "ffiConstants", "CompilerCoreRuntime", 
      "CompilerCoreRuntime", "libffi", "ffiConstants", "libffi", 
      "ffiConstants", "libffi", "ffiConstants", "libffi", "ffiConstants", 
      "libffi", "ffiConstants", "libffi", "ffiConstants", "libffi", 
      "ffiConstants", "libffi", "ffiConstants", "libffi", "ffiConstants", 
      "libffi", "ffiConstants", "libffi", "ffiConstants", "libffi", 
      "ffiConstants", "libffi", "ffiConstants", "libffi", "ffiConstants"}, 
    "orcInstance" -> 140597323184384, "orcModuleId" -> 105553156019744, 
    "targetMachineId" -> 140597055045120|>, 4877914448, 4877910528, 
   4877914416, 4877901824, "{\"InertExpression\"} -> \"Null\""],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.880469455489303*^9, 3.880469685528799*^9, 3.880469725930501*^9, {
   3.880470623012108*^9, 3.880470651802086*^9}},
 CellLabel->"Out[60]=",ExpressionUUID->"444b8cd2-51cb-4b79-b1c5-2dc098d70b40"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Beep", "[", "]"}]], "Input",
 CellChangeTimes->{{3.880469436514922*^9, 3.880469437231316*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"ef99a7a6-a262-481e-820c-372cc50ab094"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cf", "[", 
  RowBox[{"\"\<ListTuple\>\"", "::[", 
   RowBox[{
   "\"\<UnsignedInteger32\>\"", ",", "\"\<UnsignedInteger32\>\"", ",", 
    "\"\<UnsignedInteger32\>\""}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.880469440659111*^9, 3.8804694441719627`*^9}, {
  3.880469887003365*^9, 3.8804699130870953`*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"6d868474-532a-4bc3-adfb-759d12e75768"],

Cell[CellGroupData[{

Cell[BoxData["\<\"element count:\"\>"], "Echo",
 CellChangeTimes->{
  3.880470663768214*^9},ExpressionUUID->"81b7db2e-3ed2-43aa-a45b-\
f3e0aed27511"],

Cell[BoxData["3"], "Echo",
 CellChangeTimes->{
  3.8804706637977123`*^9},ExpressionUUID->"2a9d3395-2693-42e3-a34a-\
f39d1220c9af"],

Cell[BoxData["\<\"offsets:\"\>"], "Echo",
 CellChangeTimes->{
  3.880470663816893*^9},ExpressionUUID->"ed44ed12-535a-4c3d-93ca-\
00f927054621"],

Cell[BoxData["0"], "Echo",
 CellChangeTimes->{
  3.880470663862217*^9},ExpressionUUID->"ea19eb0b-143d-45ea-a153-\
ce10685a2d78"],

Cell[BoxData["4"], "Echo",
 CellChangeTimes->{
  3.8804706638833237`*^9},ExpressionUUID->"b51b6f81-38fb-4ac2-97c1-\
ac162cc54de8"],

Cell[BoxData["8"], "Echo",
 CellChangeTimes->{
  3.880470663929785*^9},ExpressionUUID->"2a78ec01-ba9f-4af0-8673-\
6ce8c6313240"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Closures", "Subsection",
 CellChangeTimes->{{3.879609564789321*^9, 
  3.879609565581152*^9}},ExpressionUUID->"af48fbc8-1817-4a93-aabc-\
b17cbddb3307"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<CCompilerDriver`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.87961133471107*^9, 3.879611337524805*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"4cbc5b83-1821-4f6d-8e77-d6f39737d9e8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CreateLibrary", "[", "\n", 
  RowBox[{
  "\"\<\n#include <stdlib.h>\n\nlong* arrayMaker(long (*fun)(long)) {\n\t\
long* out = (long*)malloc(sizeof(long) * 10);\n\tfor(long i = 0; i < 10; i++) \
{\n\t\tout[i] = fun(i);\n\t}\n\treturn out;\n}\n\>\"", ",", "\n", "\t", 
   "\"\<closureTest\>\""}], "\n", "]"}]], "Code",
 CellChangeTimes->{{3.879611338382986*^9, 3.879611491236511*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"b845cd7e-3ce2-4004-99aa-a61cd1085b70"],

Cell[BoxData["\<\"/Users/christopher/Library/Mathematica/SystemFiles/\
LibraryResources/MacOSX-x86-64/closureTest.dylib\"\>"], "Output",
 CellChangeTimes->{{3.879611463836109*^9, 3.879611493214785*^9}, 
   3.879846596359221*^9, 3.880254079593338*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"556d5765-e178-46ea-b488-3bcab8232265"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LibraryLoad", "[", "\"\<closureTest\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.879611494397421*^9, 3.879611499836211*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"74c744ff-bb4f-441f-8441-9d512b81d58f"],

Cell[BoxData["\<\"/Users/christopher/Library/Mathematica/SystemFiles/\
LibraryResources/MacOSX-x86-64/closureTest.dylib\"\>"], "Output",
 CellChangeTimes->{3.879611500054557*^9, 3.879637872604063*^9, 
  3.8796441234673157`*^9, 3.8798466341084642`*^9, 3.880254080932736*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"4d5b5e18-cf5f-4841-88d6-178f64a62e26"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"makeClosure", " ", "=", " ", 
  RowBox[{"FunctionCompile", "[", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t", 
     RowBox[{
      RowBox[{
      "CompiledComponent", "[", "\"\<ForeignFunctionInterface\>\"", "]"}], 
      ",", "\n", "\t\t", "\n", "\t\t", 
      RowBox[{"LibraryFunctionDeclaration", "[", 
       RowBox[{"\"\<arrayMaker\>\"", ",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"{", "\"\<OpaqueRawPointer\>\"", "}"}], " ", "->", " ", 
         RowBox[{"\"\<CArray\>\"", "::[", "\"\<CLong\>\"", "]"}]}]}], "]"}], 
      ",", "\n", "\t\t", "\n", "\t\t", 
      RowBox[{"LibraryFunctionDeclaration", "[", 
       RowBox[{"\"\<get_ffi_closure_size\>\"", ",", " ", 
        RowBox[{"(*", 
         RowBox[{"$LibFFIPaths", ","}], "*)"}], "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"{", "}"}], " ", "->", " ", "\"\<CSizeT\>\""}]}], "]"}], ",",
       "\n", "\t\t", "\n", "\t\t", 
      RowBox[{"LibraryFunctionDeclaration", "[", 
       RowBox[{"\"\<ffi_closure_alloc\>\"", ",", " ", 
        RowBox[{"(*", 
         RowBox[{"$LibFFIPaths", ","}], "*)"}], "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<CSizeT\>\"", ",", " ", 
           RowBox[{
           "\"\<RawPointer\>\"", "::[", "\"\<OpaqueRawPointer\>\"", "]"}]}], 
          "}"}], " ", "->", " ", "\"\<OpaqueRawPointer\>\""}]}], "]"}], ",", 
      "\n", "\t\t\t", "\n", "\t\t", 
      RowBox[{"LibraryFunctionDeclaration", "[", 
       RowBox[{"\"\<ffi_closure_free\>\"", ",", " ", 
        RowBox[{"(*", 
         RowBox[{"$LibFFIPaths", ","}], "*)"}], "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"{", "\"\<OpaqueRawPointer\>\"", "}"}], " ", "->", " ", 
         "\"\<Void\>\""}]}], "]"}], ",", "\n", "\t\t\t", "\n", "\t\t", 
      RowBox[{"LibraryFunctionDeclaration", "[", 
       RowBox[{"\"\<ffi_prep_closure_loc\>\"", ",", " ", 
        RowBox[{"(*", 
         RowBox[{"$LibFFIPaths", ","}], "*)"}], "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"{", "\n", "\t\t\t\t", 
          RowBox[{"\"\<OpaqueRawPointer\>\"", ",", " ", 
           RowBox[{"(*", " ", 
            RowBox[{"ffi_closure", "*", " ", "closure"}], " ", "*)"}], "\n", 
           "\t\t\t\t", "\"\<FFICallInterface\>\"", ",", " ", 
           RowBox[{"(*", " ", 
            RowBox[{"ffi_cif", "*", " ", "cif"}], " ", "*)"}], "\n", 
           "\t\t\t\t", "\"\<OpaqueRawPointer\>\"", ",", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"\"\<RawFunction\>\"", "::[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "\"\<FFICallInterface\>\"", ",", " ", 
                 "\"\<OpaqueRawPointer\>\"", ",", " ", 
                 RowBox[{
                 "\"\<CArray\>\"", "::[", "\"\<OpaqueRawPointer\>\"", "]"}], 
                 ",", " ", "\"\<OpaqueRawPointer\>\""}], "}"}], " ", "->", 
               " ", "\"\<Void\>\""}], "]"}], ","}], "*)"}], " ", 
           RowBox[{"(*", " ", 
            RowBox[{"void", " ", 
             RowBox[{"(", " ", 
              RowBox[{"*", "fun"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"ffi_cif", "*", " ", "cif"}], ",", " ", 
               RowBox[{"void", "*", " ", "ret"}], ",", " ", 
               RowBox[{"void", "**", " ", "args"}], ",", " ", 
               RowBox[{"void", "*", " ", "user_data"}]}], ")"}]}], " ", 
            "*)"}], "\n", "\t\t\t\t", "\"\<OpaqueRawPointer\>\"", ",", " ", 
           RowBox[{"(*", " ", 
            RowBox[{"void", "*", " ", "user_data"}], " ", "*)"}], "\n", 
           "\t\t\t\t", "\"\<OpaqueRawPointer\>\""}], " ", 
          RowBox[{"(*", " ", 
           RowBox[{"void", "*", " ", "codeloc"}], " ", "*)"}], "\n", "\t\t\t",
           "}"}], " ", "->", " ", "\"\<CInt\>\""}]}], "\n", "\t\t", "]"}]}], 
     "\n", "\t", "}"}], ",", "\n", "\t", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\n", "\t\t", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "codelocPtr", ",", " ", "codeloc", ",", " ", "closure", ",", " ", 
          "cif", ",", " ", "fun"}], "}"}], ",", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"codelocPtr", " ", "=", " ", 
          RowBox[{"TypeHint", "[", 
           RowBox[{
            RowBox[{"ToRawPointer", "[", "]"}], ",", " ", 
            RowBox[{
            "\"\<RawPointer\>\"", "::[", "\"\<OpaqueRawPointer\>\"", "]"}]}], 
           "]"}]}], ";", "\n", "\t\t\t", 
         RowBox[{"closure", " ", "=", "\n", "\t\t\t\t", 
          RowBox[{
           RowBox[{"LibraryFunction", "[", "\"\<ffi_closure_alloc\>\"", "]"}],
            "[", "\n", "\t\t\t\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{
             "LibraryFunction", "[", "\"\<get_ffi_closure_size\>\"", "]"}], 
             "[", "]"}], ",", "\n", "\t\t\t\t\t", "codelocPtr"}], "\n", 
           "\t\t\t\t", "]"}]}], ";", "\n", "\t\t\t", 
         RowBox[{"codeloc", " ", "=", " ", 
          RowBox[{"FromRawPointer", "[", "codelocPtr", "]"}]}], ";", "\n", 
         "\t\t\t", "\n", "\t\t\t", 
         RowBox[{"cif", " ", "=", " ", 
          RowBox[{"CreateFFICallInterface", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"FFIType", "[", "\"\<CLong\>\"", "]"}], "}"}], ",", " ", 
            
            RowBox[{"FFIType", "[", "\"\<CLong\>\"", "]"}]}], "]"}]}], ";", 
         "\n", "\t\t\t", "\n", "\t\t\t", 
         RowBox[{"fun", " ", "=", "\n", "\t\t\t\t", 
          RowBox[{
           RowBox[{"Typed", "[", 
            RowBox[{"\"\<RawFunction\>\"", "::[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
               "\"\<FFICallInterface\>\"", ",", " ", 
                "\"\<OpaqueRawPointer\>\"", ",", " ", 
                RowBox[{
                "\"\<CArray\>\"", "::[", "\"\<OpaqueRawPointer\>\"", "]"}], 
                ",", " ", "\"\<OpaqueRawPointer\>\""}], "}"}], " ", "->", 
              " ", "\"\<Null\>\""}], 
             RowBox[{"(*", 
              RowBox[{"should", " ", "be", " ", "\"\<Void\>\""}], "*)"}], 
             "]"}], "]"}], "@", "\n", "\t\t\t\t", 
           RowBox[{
            RowBox[{"TypeFramework`MetaData", "[", 
             RowBox[{"<|", 
              RowBox[{
              "\"\<FunctionCategory\>\"", " ", "->", " ", 
               "\"\<RawFunction\>\""}], "|>"}], "]"}], "@", "\n", "\t\t\t\t", 
            
            RowBox[{"Function", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Typed", "[", 
                 RowBox[{"cif", ",", " ", "\"\<FFICallInterface\>\""}], "]"}],
                 ",", " ", 
                RowBox[{"Typed", "[", 
                 RowBox[{"ret", ",", " ", "\"\<OpaqueRawPointer\>\""}], "]"}],
                 ",", " ", 
                RowBox[{"Typed", "[", 
                 RowBox[{"args", ",", " ", 
                  RowBox[{
                  "\"\<CArray\>\"", "::[", "\"\<OpaqueRawPointer\>\"", 
                   "]"}]}], "]"}], ",", " ", 
                RowBox[{"Typed", "[", 
                 RowBox[{"userData", ",", " ", "\"\<OpaqueRawPointer\>\""}], 
                 "]"}]}], "}"}], ",", "\n", "\t\t\t\t\t", 
              RowBox[{
               RowBox[{"Echo", "[", "\"\<running!\>\"", "]"}], ";"}]}], "\n", 
             "\t\t\t\t", "]"}]}]}]}], ";", "\n", "\t\t\t", "\n", "\t\t\t", 
         RowBox[{"(*", 
          RowBox[{"TODO", ":", " ", 
           RowBox[{"Check", " ", "error", " ", "code"}]}], "*)"}], "\n", 
         "\t\t\t", 
         RowBox[{
          RowBox[{
          "LibraryFunction", "[", "\"\<ffi_prep_closure_loc\>\"", "]"}], "[", 
          "\n", "\t\t\t\t", 
          RowBox[{
          "closure", ",", "\n", "\t\t\t\t", "cif", ",", "\n", "\t\t\t\t", 
           RowBox[{"Cast", "[", 
            RowBox[{
            "fun", ",", " ", "\"\<OpaqueRawPointer\>\"", ",", " ", 
             "\"\<BitCast\>\""}], "]"}], ",", "\n", "\t\t\t\t", 
           RowBox[{"Cast", "[", 
            RowBox[{
            "0", ",", " ", "\"\<OpaqueRawPointer\>\"", ",", " ", 
             "\"\<BitCast\>\""}], "]"}], ",", "\n", "\t\t\t\t", "codeloc"}], 
          "\n", "\t\t\t", "]"}], ";", "\n", "\t\t\t", "\n", "\t\t\t", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", "outArray", "}"}], ",", "\n", "\t\t\t\t", 
           RowBox[{
            RowBox[{"outArray", " ", "=", " ", 
             RowBox[{
              RowBox[{"LibraryFunction", "[", "\"\<arrayMaker\>\"", "]"}], 
              "[", "codeloc", "]"}]}], ";", "\n", "\t\t\t\t", 
            RowBox[{"CreateTypeInstance", "[", 
             RowBox[{
              RowBox[{"\"\<NumericArray\>\"", "::[", 
               RowBox[{"\"\<CLong\>\"", ",", "1"}], "]"}], ",", " ", 
              "outArray", ",", " ", "10"}], "]"}]}]}], "\n", "\t\t\t", 
          "]"}]}]}], "\n", "\t\t", "]"}]}], "\n", "\t", "]"}]}], "\n", 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.879609581039692*^9, 3.879609607287115*^9}, {
  3.8796097349000177`*^9, 3.879610022311153*^9}, {3.879610075209299*^9, 
  3.879610091714304*^9}, {3.8796101498600407`*^9, 3.879610234479596*^9}, {
  3.879610273730774*^9, 3.8796103616205597`*^9}, {3.879610541250615*^9, 
  3.879610563483953*^9}, {3.879610593685582*^9, 3.879610633486608*^9}, {
  3.879610888922731*^9, 3.879610922298027*^9}, {3.8796111439695053`*^9, 
  3.87961115938067*^9}, {3.8796112594913816`*^9, 3.879611304817417*^9}, {
  3.87961150865757*^9, 3.879611821573554*^9}, {3.8796118739366207`*^9, 
  3.879611889368087*^9}, {3.879611953331444*^9, 3.879612041006447*^9}, {
  3.879612084217752*^9, 3.879612181451475*^9}, {3.879635558686249*^9, 
  3.879635560903522*^9}},ExpressionUUID->"965c001c-4bf8-40cd-93cc-\
6c983cf995aa"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledCodeFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GraphicsBox[
             InsetBox[
              FormBox[
               StyleBox["\"Code\"", 
                GrayLevel[0.7], Bold, 7.62890625, StripOnInput -> False], 
               TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], Axes -> 
             False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {27., {0., 10.}}], Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Signature: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", "}"}], "\[Rule]", 
                    RowBox[{"\"NumericArray\"", "::[", 
                    RowBox[{"\"Integer64\"", ",", "1"}], "]"}]}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GraphicsBox[
             InsetBox[
              FormBox[
               StyleBox["\"Code\"", 
                GrayLevel[0.7], Bold, 7.62890625, StripOnInput -> False], 
               TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], Axes -> 
             False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {27., {0., 10.}}], Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Signature: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", "}"}], "\[Rule]", 
                    RowBox[{"\"NumericArray\"", "::[", 
                    RowBox[{"\"Integer64\"", ",", "1"}], "]"}]}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledCodeFunction[<|
   "Signature" -> TypeSpecifier[{} -> "NumericArray"["Integer64", 
        LiteralType[1, "Integer64"]]], "Input" -> Compile`Program[{
       CompiledComponent["ForeignFunctionInterface"], 
       LibraryFunctionDeclaration[
       "arrayMaker", {"OpaqueRawPointer"} -> 
        TypeSpecifier["CArray"]["CLong"]], 
       FunctionDeclaration[$CellContext`CreateFFICallInterface, 
        Typed[{
           TypeSpecifier["ListVector"]["FFIType"], "FFIType"} -> 
         "FFICallInterface"][
         Function[{$CellContext`argTypes, $CellContext`outputType}, 
          
          Module[{$CellContext`cif, $CellContext`argCount, \
$CellContext`argTypesArray, $CellContext`argValuesArray, \
$CellContext`outputValue}, $CellContext`argCount = 
            Length[$CellContext`argTypes]; $CellContext`argTypesArray = 
            CreateTypeInstance[
              TypeSpecifier["CArray"][
              "FFIType"], $CellContext`argTypes]; $CellContext`argValuesArray = 
            CreateTypeInstance[
              TypeSpecifier["CArray"][
              "OpaqueRawPointer"], $CellContext`argCount]; Do[
             ToRawPointer[$CellContext`argValuesArray, $CellContext`i - 1, 
              Cast[
               CreateTypeInstance[
                TypeSpecifier["CArray"]["Integer8"], 
                Cast[
                 Part[$CellContext`argTypes, $CellContext`i]["Size"], 
                 "MachineInteger", "CCast"]], "OpaqueRawPointer", 
               "BitCast"]], {$CellContext`i, $CellContext`argCount}]; \
$CellContext`outputValue = Cast[
              CreateTypeInstance[
               TypeSpecifier["CArray"]["Integer8"], 
               Max[
                Native`SizeOf[
                 TypeSpecifier["OpaqueRawPointer"]], 
                Cast[
                 $CellContext`outputType["Size"], "MachineInteger", 
                 "CCast"]]], "OpaqueRawPointer", "BitCast"]; $CellContext`cif = 
            CreateTypeInstance["FFICallInterface", <||>]; 
           LibraryFunction["ffi_prep_cif"][$CellContext`cif, 
             LibraryFunction["get_FFI_DEFAULT_ABI"][], 
             Cast[
              Length[$CellContext`argTypes], "CUnsignedInt", 
              "CCast"], $CellContext`outputType, $CellContext`argTypesArray]; \
$CellContext`cif]]]], 
       LibraryFunctionDeclaration["get_ffi_closure_size", {} -> "CSizeT"], 
       LibraryFunctionDeclaration["ffi_closure_alloc", {"CSizeT", 
          TypeSpecifier["RawPointer"]["OpaqueRawPointer"]} -> 
        "OpaqueRawPointer"], 
       LibraryFunctionDeclaration[
       "ffi_closure_free", {"OpaqueRawPointer"} -> "Void"], 
       LibraryFunctionDeclaration[
       "ffi_prep_closure_loc", {
         "OpaqueRawPointer", "FFICallInterface", "OpaqueRawPointer", 
          "OpaqueRawPointer", "OpaqueRawPointer"} -> "CInt"]}, 
      Function[{}, 
       Module[{$CellContext`codelocPtr, $CellContext`codeloc, \
$CellContext`closure, $CellContext`cif, $CellContext`fun}, \
$CellContext`codelocPtr = TypeHint[
           ToRawPointer[], 
           TypeSpecifier["RawPointer"][
           "OpaqueRawPointer"]]; $CellContext`closure = 
         LibraryFunction["ffi_closure_alloc"][
           LibraryFunction[
           "get_ffi_closure_size"][], $CellContext`codelocPtr]; \
$CellContext`codeloc = 
         FromRawPointer[$CellContext`codelocPtr]; $CellContext`cif = \
$CellContext`CreateFFICallInterface[{
            ChristopherWolfram`ForeignFunctionInterface`FFIType["CLong"]}, 
           ChristopherWolfram`ForeignFunctionInterface`FFIType[
           "CLong"]]; $CellContext`fun = Typed[
           TypeSpecifier[
           "RawFunction"][{"FFICallInterface", "OpaqueRawPointer", 
              TypeSpecifier["CArray"]["OpaqueRawPointer"], 
              "OpaqueRawPointer"} -> "Null"]][
           TypeFramework`MetaData[<|"FunctionCategory" -> "RawFunction"|>][
            Function[{
              Typed[$CellContext`cif, "FFICallInterface"], 
              Typed[$CellContext`ret, "OpaqueRawPointer"], 
              Typed[$CellContext`args, 
               TypeSpecifier["CArray"]["OpaqueRawPointer"]], 
              Typed[$CellContext`userData, "OpaqueRawPointer"]}, 
             Echo["running!"]; Null]]]; 
        LibraryFunction[
         "ffi_prep_closure_loc"][$CellContext`closure, $CellContext`cif, 
          Cast[$CellContext`fun, "OpaqueRawPointer", "BitCast"], 
          Cast[0, "OpaqueRawPointer", "BitCast"], $CellContext`codeloc]; 
        Module[{$CellContext`outArray}, $CellContext`outArray = 
           LibraryFunction["arrayMaker"][$CellContext`codeloc]; 
          CreateTypeInstance[
            TypeSpecifier["NumericArray"]["CLong", 1], $CellContext`outArray, 
            10]]]]], "ErrorFunction" -> Automatic, "InitializationName" -> 
    "Initialization_b49e4cb9_f616_4f33_9390_0bd43fdb7cfb", "ExpressionName" -> 
    "Main_ExprInvocation", "CName" -> "Main_CInvocation", "FunctionName" -> 
    "Main", "SystemID" -> "Linux-x86-64", "VersionData" -> {13.2, 0, 0}, 
    "CompiledIR" -> <|"Linux-x86-64" -> ByteArray[CompressedData["
1:eJyMXAs8VGn/P3MfDAbFMC6jSalVO4TIpXGpnQqhdt9aybBla7cZktwK4xJj
c0ttq5Xosm37vlupXIsaUatdWkWN3SFEsauiJSOS//OcuZjw/3y2zy7OnHOe
83u+3+/v8vyeg3lImH8IBkEQq04EcfcQPbGbhyAEcBxCYS1cv/VmaNZE6WUN
P4EXvMacgiCPrBFEA2uOYMGxPviflMQ84taAX0ek2jjmYVIpFgSyoSn+cIiA
sQbrnqfhjtexmedApm1Qt0kWcsLrzZmeuumZVLc87I4G8pV5DI+1QsY9jE1y
Km2p5dJc64Ml244wGhrAuBkMBMkH320WkNUZIWsR848W5jPMLcAXw8WUQ+dy
uck7tjEW7kruWvycLBIgllwyNxuZJwRfzHHV55acSb333flO5yVpQqrb4QXI
hntsDJxBLQZj7nvbGOOpVS/4RZqxbJSawdiyZRd7+WSi3i4khVZqiS2Z2jg1
NVGvf0C4Wk0Tf+GHqSlzA+tdfnjuVNH7KfSWRF1TMhlbNjK1wfP77e75J/un
WqamXK/cMX260R2PWdeMN3oxzzzriBCHxWL/y9A4B635a/GlxeOEH08IQ/P8
2YI82zXHWG/r33jegj/8gOXWipAUG07KgtI6warnZOy4Lw6n7kfEGT3A45Y+
wOJWPSDj1vup4T73I+C+eoDDxfnhcd/4kXDfPyDh/vuAiLtu7YZ9xtjr/1se
knpzY69gp05BhlCdzcjDIM0iBGE7R3K/KTyFK8KNW2NTCIQsJJ8rFGaybN3W
rqV9w1ioh+TmaSLCexQzM7PeHVhssk0dJkl7nWGwZdKFTEx4877wcPZnay0d
GFYrdlF35R7XIdsKf6N6GOGNenfiNTWxKzC4DEMMImjIDGezQ0MZ4J/tF8gI
grBsc78310XI6sKmeR4kEt6sN5ScBWBJXnG7FnPvRHBfl6A/kxXJjlqLDJk7
b0KMqWPGuacM05CDQu2Pd39jGfyPY3ps7iFhtWXEmaDv88BMEkLHWtoY7BXv
MEhusU4aImymJCKuO3bhs/Dutm7Iku/ZKbSs4r3s7PO0VSzGGIOzgqJjnNvL
Fs0T6Wgh2c1stuY5Nm1pOLug9ZNCIAjEj4YgkeA7Xdg1Bf6RGBR7KhZZSM80
R/QFf3Kp2BKklXiWJiAU29OIGCukrNYBy8X8V5P4D7wc14UEl9Ry3oMfExFj
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
1ywWeqW8boJcfGckI3+Ew1dogLRqgLQG4m6Jb4EYyutLW60i9ej7kv+iHPSV
5ryIjHdSRifbKXHFTtSZJgInyJeGR80U0m+4H1DCRkPE/pfM/dsluxT398Yk
Jv5baUZKKjqIC2VECWt1PSF/2zvRdCWujtdXOHH2wHGTErlcKvjl6KYlhNZ4
5xz+2SQedZZ5DQhdPPpOjDw/9q7kVRLlseVqy+QhnucKBmE7MEAcs32g5tJU
FEh82yWLFNNon+T/hDdQSvEWOQ8/RvYZjI4krXZaw/ni3WoNVuo4fK9Ydpg4
PgX/9NnrqYIeK3zzGIhub7ZLXrMVMXRlIJ2pMKTdKewCzg9OQVwBRd52nf8d
DBYVT4ZdI6Rjr0mbAaX1zyn5T/rehgFXG6icnFZ2T81f6Nb+m+3DriF/o7GS
P+Aa0lL6iOisEkjbrkBHrumsyWldxbuK91P4ZGpOVxSvhCCHIa/vRoaRSkI+
Ix25oxJyxxKl+qvCZwTPtlj+f3Eq47XFhWUT5Qn+zMD42z0ytZV7S+0SpHE5
0luvmHanCv4LS4KalnI43xe2vCNoivRpASmy4gEaFVbxJjjxfYuXFM8KjVcl
0td7Z0u4IbBv0ecqEna8X/A/WVi/ntMayU8hKjygr9qOLo9+DQnScleli2WJ
/2Mc/m/ZjI0vCGP7yyBt65bxajfIHPUuiHJTCaGrmgKuYuQh9EUFvwd99bVG
XJbTejDxs9wuCh71qv2T4vEm+RvssZPiipxWu8Q/MbPLlLfbze6sscVtlzgA
kd4fcLk5dSOnfUxnDjQ4Fzu/oyOKUBQ2MBVYsEgF8vYa/k2iPIdflZQ+01ME
Yh9JtFEJfDcA5K8okL8uSq+/l5TldEXz7hDk5UXe8ETsGugrRX3SICC6zrd2
xPZamSP/jqWcfj/96oICvqnnDhoYW9e95i0XxSu7qIc9GYee9IwlTgj/0FdE
5UvDi7zR4HcgHoZF8qkBaflsO9oOhNUS5K6RN1z5WlaBgjopO2Bc6VvSDnoP
mrYk13PaViYmTRfBdlOSiiz0JVjgF+U5rfvDXstqM6lrRF/pXgNPpce4nhGX
LdPbpnSF9ws4ul1Mh1MB15V+5BLW+oEfxSamYuizK6f4Pv3lqMRAVOc0DX7p
C2YltvcBVA3H5QxOvWI+d0EzX+lLZkWhZDkUS01LaU6XlDeBejNw8hCxVI00
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
a024M7unE8HqH4bwqz2ln2rLVzUNgdLQpYqFeVkWPV6x69kvjW+dLtqipjor
v9WeGamlgQXnP4j/YOHjqiLKhqy+42Yl8mzkxOv9IO248C7jFRsRXW8SPp/d
thbyxI+XzWwNtB4I+w2nWAm1l/LHFN3YEPGb3btmNzNjec9VdifPSCrtFFuo
nIuDfbo6yn0Ajrfkro/ihRGHoKL42dt4wuxB0t05mlyjHZIrCiW8WMl/jlUJ
Gq2T8XWYOQKhz2DUKqW/Xuw7v03prxuDvvrXDa5uKb9D9seA5BsAZZoaiua3
f1/lG6WvXu177q3qq/zOb/7tM968xVg9xHsefdIyElQUNhsV8pO+Hw2mFzAN
geLRAEV56xgWsAwj36zoKuePE+Tx+0xPpbesbAMBoLAzRDRb+BF9b9VUtnj8
+ybvdPzLHZ6jTX2P1yv8hLy9L3Sryq4OJ0FydzVyZfqvt3gXLMbUTy9C9/NE
eCocL9yH6c1e8ag8Q489vWLd3Ll2i+rNWQW7P7iZ30BQvfn6TwaqNw/e3aV6
c1PB/z64OawZJ1+kRYgrJ/UUOvWRjm6Z6Qa9UbwMojzCnBmomG8kDxHCSy2P
Vyn6haPZBc7K/FzDyyeo6LI3mp+NV83Xzrw/CAp/7B9JKJ5jH4m8XRzFmWlJ
e1zYd1h598G/pfRbLUWvMGSgIkNX3iYn+4ijMdMaIZ+SxAtmvCxxpi+9XO5b
9h3isY4BlydT13PaYsOkin3ZiL4bu7XkAwqzpGlWyrjFD/pmtoBuS6M+UnR1
3tQU/KCMbAfiz8/VCEuW1PhpyXt6wkApcZ1qJGvq1PdWuCv5VJ/U9F9v0l6v
CZhQ5t+V2XT5dg/wh+sY9E/ZyPuZV6XnlyjWs3YX6WdUdkr7r8c760CD+12y
pypyWh3iU7GzN2ZXFRWdn66zO6YcEvhzZfDBG/EGinS0fYBkrNJ74PiIo9Dm
AWxcpZmWyMu82IQHc0Ww7L50msrNDVnSaPq/RmXslGS/m2KzdFVhQNV0iRIm
+UmZ310SA1X3k0Z59BLVne0bPPpedAMc7sx9xZYvgPNdMfKd115bfhVxRuXU
AETsrfCQymz6jwoP6a/m3SaqeMiLKP6orFgHC8TO7wzn2Dxon4x/PoefCH3E
pPkqsHYM6gfMcuDYsN+Vu0tdb3mVBBVn7HWKvzSX/2VLj3+k6LC8aQrYpdio
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
qm+7nLhUT9Vd+yexbf0RcRvgUuVAURi9lrZRWSf8IqvqfO8QcXFazXmXWXAr
98n+WuK+yOLm4aIkvNZS7XBHOnrrt3J1n7+ud/FT4t6z6OGqhzZwt9ej8y3E
xV+t5+yI3V9k66qWarupr0E6V0feDfbLrK31Lh4iorWtxAW0NXtdhoUY7X9K
fCyPoIeI+9qWqshjqfq23ybuDDs5cCmKv15/wRyQsboLyXyKuCJVqeW8huer
+s48IPOJXiqHE1eh+ghpmzZph53uj70wjSzvf6hAs9OTofgd7ueuOt9P3NN4
M1D2A5ug4d2RYCQD5E9ZGH2zVv490/4H/iSWRxgHTGd6VPDGTCTrQmKkAyXl
CcIAdGja4Bn5QM7V7q+JTtZ2uHxCFkT0SRc5TgdelZjpf5fbknO1fycxWDm5
24yqD3df68tDRmVqfySrhVtvqs4PEzIN1oWjwcltQfNj9sDo79p2yIcNdK+p
ua9o9TgNHZU/YBIj0ltLSByQk9SBdjDcaDnbPBy0/xlxmV/7Y9llU7w27qnu
gB/JzRpLTmp3lA+M/JNouKM3NIqYrbp9xGzVt9Rct1j2LdoLPj8qeFT3LO3V
ycy2fn/7eN+LfHjvsd14Drp/cn/bORFxphepKfHDQw8yjOi1qrfqhiOmx6Ut
Z70c6XqsPuqShOuxutklC1iR/i5T7tU+ziYD2+yveskC09PSAeKqa0qvi/e5
LMOtsKlDN2cjIfnjKEhzo1rurMLoJpkW7W0n9Zgb0+fgSrQH724npkydbItb
Z7fanDgH5VEMuoBTd84Zt97ovrNekzCplb1numwxOr6/+j14ZfaPj+T9aAge
yz5F5tBbT6j/EvkHSLX6CNW6+3B6QoiPhphRXVb5wMOviX7V2mKdiO87Mx1e
HD92J2RYZO/xIEyusGbtt/+LKu/Ymc80rv6n+lc6XTeiTtzz/Q7zUOVHiYua
S/uGbxkp19QxHLoJUzvu+W7ORlwNO/oyYww8eecS2V3TlwmNJrbxEt243dpb
aUccGQqsVpdztRddqh0ou2eKO+Dsrw/vQKq0iKCD9mq/Qi7xLEH7dRzeguer
T5aHvDA6De22rgm0/nMnupD1a21Y8Q1eAXGL9Og4zjl0bXtp9/EIXI32DnCS
cfeaq70kxmju0e6iKIxuqu8LDcdoeHQrcVFjX109GonB+gZczRu7Q1/A1Dxs
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

        "]]|>, 
    "ExternalLibraryPaths" -> {
     "libffi", "ffiConstants", "libffi", "ffiConstants", "libffi", 
      "ffiConstants", "libffi", "ffiConstants", "libffi", "ffiConstants", 
      "libffi", "ffiConstants", "libffi", "ffiConstants", "libffi", 
      "ffiConstants", "CompilerCoreRuntime", "CompilerCoreRuntime", "libffi", 
      "ffiConstants", "libffi", "ffiConstants", "libffi", "ffiConstants", 
      "libffi", "ffiConstants", "libffi", "ffiConstants", "libffi", 
      "ffiConstants", "libffi", "ffiConstants", "libffi", "ffiConstants", 
      "libffi", "ffiConstants", "libffi", "ffiConstants", "libffi", 
      "ffiConstants", "libffi", "ffiConstants", "libffi", "ffiConstants", 
      "libffi", "ffiConstants"}, "orcInstance" -> 44315744, "orcModuleId" -> 
    44027488, "targetMachineId" -> 45559584|>, 139990856426464, 
   139990856422800, 139990856426400, 139990856417280, 
   "{} -> \"NumericArray\"[\"Integer64\", LiteralType[1, \"Integer64\"]]"],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8796102970469*^9, 3.879610350030039*^9}, 
   3.8796118248150463`*^9, {3.8796118813479643`*^9, 3.879611890777128*^9}, {
   3.87961197300212*^9, 3.879611991790207*^9}, 3.879612042486467*^9, {
   3.879612092671997*^9, 3.879612141605*^9}, 3.879612201422841*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"0840aaa4-f971-4f2f-bcb6-f782b9852fa2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"makeClosure", "[", "]"}]], "Input",
 CellChangeTimes->{{3.8796122039512653`*^9, 3.879612218392251*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"ecd262a0-19df-49ca-8859-a4c73b6c5a33"],

Cell[CellGroupData[{

Cell[BoxData["\<\"running!\"\>"], "Echo",
 CellChangeTimes->{
  3.879612222297288*^9},ExpressionUUID->"18524781-8ece-4b49-8291-\
968716e74508"],

Cell[BoxData["\<\"running!\"\>"], "Echo",
 CellChangeTimes->{
  3.879612222331622*^9},ExpressionUUID->"fc978846-f3b0-421d-b829-\
912c8b49912f"],

Cell[BoxData["\<\"running!\"\>"], "Echo",
 CellChangeTimes->{
  3.879612222362934*^9},ExpressionUUID->"5b70a39d-ef0f-4ca0-98c5-\
e53827c8fa62"],

Cell[BoxData["\<\"running!\"\>"], "Echo",
 CellChangeTimes->{
  3.879612222384534*^9},ExpressionUUID->"3a551c67-13e7-463e-b996-\
71f86b8f5034"],

Cell[BoxData["\<\"running!\"\>"], "Echo",
 CellChangeTimes->{
  3.879612222415112*^9},ExpressionUUID->"c482f11a-973a-46bc-a874-\
2b2faa720ee2"],

Cell[BoxData["\<\"running!\"\>"], "Echo",
 CellChangeTimes->{
  3.879612222467469*^9},ExpressionUUID->"3fd4fb1c-e6c3-4e85-8369-\
1ab029fe1888"],

Cell[BoxData["\<\"running!\"\>"], "Echo",
 CellChangeTimes->{
  3.879612222519742*^9},ExpressionUUID->"9b34e242-15a3-48f0-aa00-\
eb86278ad73a"],

Cell[BoxData["\<\"running!\"\>"], "Echo",
 CellChangeTimes->{
  3.879612222573654*^9},ExpressionUUID->"201bfed5-6166-41e4-9a49-\
cda2cb8dfd29"],

Cell[BoxData["\<\"running!\"\>"], "Echo",
 CellChangeTimes->{
  3.87961222262803*^9},ExpressionUUID->"de88dad1-0376-4949-aeae-35dec339e3a2"],

Cell[BoxData["\<\"running!\"\>"], "Echo",
 CellChangeTimes->{
  3.879612222673542*^9},ExpressionUUID->"6076cf36-ec19-4054-9146-\
060cb91dc21d"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["NumericArray",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Integer64\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "10", "}"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Integer64\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "10", "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "139983863041408", "\", \"", "139983863041408", "\", \"", 
                    "\"\[Ellipsis]\""}, "RowDefault"], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  RawArray["Integer64",{139983863041408, 139983863041408, 139983863041408, 
   139983863041408, 139983863041408, 139983863041408, 139983863041408, 
   139983863041408, 139983863041408, 139983863041408}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.879612219852063*^9, 3.879612222719919*^9}},
 CellLabel->"Out[28]=",ExpressionUUID->"c5c5422d-b7a7-41fc-8fba-74ba2650aa45"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Component version", "Subsubsection",
 CellChangeTimes->{{3.8796378856132803`*^9, 
  3.8796378895367317`*^9}},ExpressionUUID->"656b98f6-8e42-45fb-8f7d-\
64eef54ce1cc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LibraryLoad", "[", "\"\<closureTest\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.879611494397421*^9, 3.879611499836211*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"a6e580eb-17df-4f8a-a41c-532f1cc5c57f"],

Cell[BoxData["\<\"/Users/christopher/Library/Mathematica/SystemFiles/\
LibraryResources/MacOSX-x86-64/closureTest.dylib\"\>"], "Output",
 CellChangeTimes->{
  3.879611500054557*^9, {3.879637872604063*^9, 3.879637892028808*^9}, 
   3.879638997964534*^9, 3.879639052382689*^9, 3.879639360809574*^9, 
   3.879640318316681*^9, 3.879640589912825*^9, 3.879643145516069*^9, 
   3.8796434222940207`*^9, 3.879643545078986*^9, 3.879643692921385*^9, 
   3.879644123608543*^9, 3.879644373464027*^9, 3.8798466381219873`*^9, 
   3.880254084598599*^9, 3.8802544986519537`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"b166c7c4-4cdb-4fab-b924-51af7cd7aefc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"arrayMaker", "=", 
  RowBox[{"CreateForeignFunction", "[", 
   RowBox[{"\"\<arrayMaker\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"FFIType", "[", "\"\<OpaqueRawPointer\>\"", "]"}], "}"}], ",", 
    RowBox[{"FFIType", "[", "\"\<OpaqueRawPointer\>\"", "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.879637901642433*^9, 3.879637938922936*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"718a38de-d36b-4d3b-bf95-b6774ab0c7a5"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TypeProduct", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"], 
       DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "DataStructure[ForeignFunctionObject, $Failed]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.879637927067449*^9, 3.8796379392989683`*^9}, 
   3.879638998330258*^9, 3.879639052938632*^9, 3.879639361196628*^9, 
   3.8796403192889547`*^9, 3.879640590749258*^9, 3.879643146060129*^9, 
   3.879643548071739*^9, 3.879643693662855*^9, 3.879644123721092*^9, 
   3.879644373535801*^9, 3.879846647509555*^9, 3.88025408545516*^9, 
   3.8802544998154583`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"fcbc8c0a-2e7b-42a1-97c1-49a8dc5bd91a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"callback", "=", 
  RowBox[{"CreateManagedExpression", "[", 
   RowBox[{
    RowBox[{"CreateCallback", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"EchoEvaluation", "[", 
        RowBox[{"#", "^", "2"}], "]"}], "&"}], ",", 
      RowBox[{"{", 
       RowBox[{"FFIType", "[", "\"\<CLong\>\"", "]"}], "}"}], ",", 
      RowBox[{"FFIType", "[", "\"\<CLong\>\"", "]"}]}], "]"}], ",", 
    "FreeCallback"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8796379442762547`*^9, 3.879637971347663*^9}, {
  3.8796391620382013`*^9, 3.8796391741848373`*^9}, {3.879640599101015*^9, 
  3.87964061990057*^9}, {3.8796408425262003`*^9, 3.879640844716797*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"dacfec10-5e70-4544-a066-4ea6dc796583"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TypeProduct", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ManagedExpression\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ManagedExpression\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"], 
       DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("DataStructure[ManagedExpression, $Failed]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8796379687191772`*^9, 3.879637971669181*^9}, 
   3.879638998462224*^9, 3.8796390534903812`*^9, 3.879639174391411*^9, 
   3.8796393613865347`*^9, 3.8796403196204147`*^9, {3.879640591330336*^9, 
   3.879640622195896*^9}, 3.87964084779189*^9, 3.8796408948520527`*^9, 
   3.87964369524727*^9, 3.879644123817607*^9, 3.879644373601549*^9, 
   3.879846675171393*^9, 3.88025408613457*^9, 3.880254500933682*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"674575b7-4ac0-4960-807b-140e0ca225fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"res", "=", 
  RowBox[{"CallForeignFunction", "[", 
   RowBox[{"arrayMaker", ",", 
    RowBox[{"{", "callback", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.879637972461033*^9, 3.8796379791959457`*^9}, {
  3.879640639643778*^9, 3.879640640021057*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"278c85e0-6cf2-44fb-b2fc-619a4ff949db"],

Cell[CellGroupData[{

Cell[BoxData[
 SuperscriptBox["0", "2"]], "EchoBefore",
 CellDingbat->Cell[
   BoxData[
    TemplateBox[{
      StyleBox["\[LeftGuillemet]", "EchoBeforeDingbat"], {
       FrontEnd`EvaluationNotebook[], "d6dcf371-bc63-4cb4-ae86-b7aa23519217"},
       None}, "HyperlinkDefault"]]],
 CellChangeTimes->{3.880254501640656*^9},
 CellTags->
  "85779f10-0e3e-4490-aea3-9c9c85b0d204",ExpressionUUID->"168adaaa-06ba-47f8-\
ba81-691ec2c34e89"],

Cell[BoxData[
 TagBox[
  TooltipBox["0",
   SuperscriptBox["0", "2"]],
  Annotation[#, 0^2, "Tooltip"]& ]], "EchoAfter",
 CellDingbat->Cell[
   BoxData[
    TemplateBox[{
      StyleBox["\[RightGuillemet]", "EchoAfterDingbat"], {
       FrontEnd`EvaluationNotebook[], "85779f10-0e3e-4490-aea3-9c9c85b0d204"},
       None}, "HyperlinkDefault"]]],
 CellChangeTimes->{3.880254501689035*^9},
 CellTags->
  "d6dcf371-bc63-4cb4-ae86-b7aa23519217",ExpressionUUID->"99f19f3e-7e43-4313-\
b0a1-4ee351655beb"],

Cell[BoxData[
 SuperscriptBox["1", "2"]], "EchoBefore",
 CellDingbat->Cell[
   BoxData[
    TemplateBox[{
      StyleBox["\[LeftGuillemet]", "EchoBeforeDingbat"], {
       FrontEnd`EvaluationNotebook[], "e22cd770-b69b-43d0-8cff-544b3df38b54"},
       None}, "HyperlinkDefault"]]],
 CellChangeTimes->{3.880254501715643*^9},
 CellTags->
  "34665357-2289-4996-8ad3-bd70f89482d1",ExpressionUUID->"1b2c34d9-f956-453a-\
b4bb-36d304633128"],

Cell[BoxData[
 TagBox[
  TooltipBox["1",
   SuperscriptBox["1", "2"]],
  Annotation[#, 1^2, "Tooltip"]& ]], "EchoAfter",
 CellDingbat->Cell[
   BoxData[
    TemplateBox[{
      StyleBox["\[RightGuillemet]", "EchoAfterDingbat"], {
       FrontEnd`EvaluationNotebook[], "34665357-2289-4996-8ad3-bd70f89482d1"},
       None}, "HyperlinkDefault"]]],
 CellChangeTimes->{3.8802545017807007`*^9},
 CellTags->
  "e22cd770-b69b-43d0-8cff-544b3df38b54",ExpressionUUID->"dba11b8c-bdd5-4e00-\
a380-362a43c87da3"],

Cell[BoxData[
 SuperscriptBox["2", "2"]], "EchoBefore",
 CellDingbat->Cell[
   BoxData[
    TemplateBox[{
      StyleBox["\[LeftGuillemet]", "EchoBeforeDingbat"], {
       FrontEnd`EvaluationNotebook[], "3094eb97-6a3d-4432-94a3-e2bb00086764"},
       None}, "HyperlinkDefault"]]],
 CellChangeTimes->{3.880254501804186*^9},
 CellTags->
  "f42930be-397e-4d48-bf2a-6eb1f1782cfd",ExpressionUUID->"1948492a-08ef-4f06-\
b033-7f8a96ea22c0"],

Cell[BoxData[
 TagBox[
  TooltipBox["4",
   SuperscriptBox["2", "2"]],
  Annotation[#, 2^2, "Tooltip"]& ]], "EchoAfter",
 CellDingbat->Cell[
   BoxData[
    TemplateBox[{
      StyleBox["\[RightGuillemet]", "EchoAfterDingbat"], {
       FrontEnd`EvaluationNotebook[], "f42930be-397e-4d48-bf2a-6eb1f1782cfd"},
       None}, "HyperlinkDefault"]]],
 CellChangeTimes->{3.8802545018605013`*^9},
 CellTags->
  "3094eb97-6a3d-4432-94a3-e2bb00086764",ExpressionUUID->"96d910a9-6acb-4a58-\
bd62-7f439ccb2fa5"],

Cell[BoxData[
 SuperscriptBox["3", "2"]], "EchoBefore",
 CellDingbat->Cell[
   BoxData[
    TemplateBox[{
      StyleBox["\[LeftGuillemet]", "EchoBeforeDingbat"], {
       FrontEnd`EvaluationNotebook[], "2e9f802d-c8ae-4aa7-8cbc-570eae973989"},
       None}, "HyperlinkDefault"]]],
 CellChangeTimes->{3.8802545018852262`*^9},
 CellTags->
  "dcda17ae-db03-4b03-9701-a30e1904f719",ExpressionUUID->"1df4f241-ef0a-4718-\
958d-1e1d6c81eece"],

Cell[BoxData[
 TagBox[
  TooltipBox["9",
   SuperscriptBox["3", "2"]],
  Annotation[#, 3^2, "Tooltip"]& ]], "EchoAfter",
 CellDingbat->Cell[
   BoxData[
    TemplateBox[{
      StyleBox["\[RightGuillemet]", "EchoAfterDingbat"], {
       FrontEnd`EvaluationNotebook[], "dcda17ae-db03-4b03-9701-a30e1904f719"},
       None}, "HyperlinkDefault"]]],
 CellChangeTimes->{3.8802545019419317`*^9},
 CellTags->
  "2e9f802d-c8ae-4aa7-8cbc-570eae973989",ExpressionUUID->"27c2718b-0798-4a10-\
af46-0a5fa1de42db"],

Cell[BoxData[
 SuperscriptBox["4", "2"]], "EchoBefore",
 CellDingbat->Cell[
   BoxData[
    TemplateBox[{
      StyleBox["\[LeftGuillemet]", "EchoBeforeDingbat"], {
       FrontEnd`EvaluationNotebook[], "ceb922e6-0336-45e4-afa1-4a4cf8c5b3e3"},
       None}, "HyperlinkDefault"]]],
 CellChangeTimes->{3.8802545019649067`*^9},
 CellTags->
  "bb98e0c4-2b09-468b-9c61-3aa544f08c8e",ExpressionUUID->"e3f71b6f-f787-4866-\
b1c9-3b236b1d63f6"],

Cell[BoxData[
 TagBox[
  TooltipBox["16",
   SuperscriptBox["4", "2"]],
  Annotation[#, 4^2, "Tooltip"]& ]], "EchoAfter",
 CellDingbat->Cell[
   BoxData[
    TemplateBox[{
      StyleBox["\[RightGuillemet]", "EchoAfterDingbat"], {
       FrontEnd`EvaluationNotebook[], "bb98e0c4-2b09-468b-9c61-3aa544f08c8e"},
       None}, "HyperlinkDefault"]]],
 CellChangeTimes->{3.880254502016786*^9},
 CellTags->
  "ceb922e6-0336-45e4-afa1-4a4cf8c5b3e3",ExpressionUUID->"fbbf58da-d6fa-4119-\
9cd9-f326fd0213e2"],

Cell[BoxData[
 SuperscriptBox["5", "2"]], "EchoBefore",
 CellDingbat->Cell[
   BoxData[
    TemplateBox[{
      StyleBox["\[LeftGuillemet]", "EchoBeforeDingbat"], {
       FrontEnd`EvaluationNotebook[], "c6f56e17-0d01-498a-b6e7-bfd735714eb7"},
       None}, "HyperlinkDefault"]]],
 CellChangeTimes->{3.880254502039487*^9},
 CellTags->
  "58cf81ac-641e-4c5d-93cc-569e166df3b8",ExpressionUUID->"769499c5-2128-4f78-\
ada7-058c8c2ace9d"],

Cell[BoxData[
 TagBox[
  TooltipBox["25",
   SuperscriptBox["5", "2"]],
  Annotation[#, 5^2, "Tooltip"]& ]], "EchoAfter",
 CellDingbat->Cell[
   BoxData[
    TemplateBox[{
      StyleBox["\[RightGuillemet]", "EchoAfterDingbat"], {
       FrontEnd`EvaluationNotebook[], "58cf81ac-641e-4c5d-93cc-569e166df3b8"},
       None}, "HyperlinkDefault"]]],
 CellChangeTimes->{3.880254502088245*^9},
 CellTags->
  "c6f56e17-0d01-498a-b6e7-bfd735714eb7",ExpressionUUID->"cca79100-b4b9-49b3-\
94a7-17eb89171096"],

Cell[BoxData[
 SuperscriptBox["6", "2"]], "EchoBefore",
 CellDingbat->Cell[
   BoxData[
    TemplateBox[{
      StyleBox["\[LeftGuillemet]", "EchoBeforeDingbat"], {
       FrontEnd`EvaluationNotebook[], "c86a1c69-6704-49cf-84bd-89d1d351993c"},
       None}, "HyperlinkDefault"]]],
 CellChangeTimes->{3.880254502109091*^9},
 CellTags->
  "ba326751-24af-4db2-9927-e33c9a5035e2",ExpressionUUID->"5a3b232a-f80c-405e-\
b82f-fa9bc9d1f098"],

Cell[BoxData[
 TagBox[
  TooltipBox["36",
   SuperscriptBox["6", "2"]],
  Annotation[#, 6^2, "Tooltip"]& ]], "EchoAfter",
 CellDingbat->Cell[
   BoxData[
    TemplateBox[{
      StyleBox["\[RightGuillemet]", "EchoAfterDingbat"], {
       FrontEnd`EvaluationNotebook[], "ba326751-24af-4db2-9927-e33c9a5035e2"},
       None}, "HyperlinkDefault"]]],
 CellChangeTimes->{3.880254502158805*^9},
 CellTags->
  "c86a1c69-6704-49cf-84bd-89d1d351993c",ExpressionUUID->"14eb6240-78c8-4afd-\
9094-e34ad1d65fef"],

Cell[BoxData[
 SuperscriptBox["7", "2"]], "EchoBefore",
 CellDingbat->Cell[
   BoxData[
    TemplateBox[{
      StyleBox["\[LeftGuillemet]", "EchoBeforeDingbat"], {
       FrontEnd`EvaluationNotebook[], "46bd5228-d088-46b9-bb4d-8b1c124529d0"},
       None}, "HyperlinkDefault"]]],
 CellChangeTimes->{3.8802545021809187`*^9},
 CellTags->
  "7fb96cbf-9810-4c37-b929-092dc0f35b83",ExpressionUUID->"9e78a746-a580-47d3-\
9d9a-6f59991c40c0"],

Cell[BoxData[
 TagBox[
  TooltipBox["49",
   SuperscriptBox["7", "2"]],
  Annotation[#, 7^2, "Tooltip"]& ]], "EchoAfter",
 CellDingbat->Cell[
   BoxData[
    TemplateBox[{
      StyleBox["\[RightGuillemet]", "EchoAfterDingbat"], {
       FrontEnd`EvaluationNotebook[], "7fb96cbf-9810-4c37-b929-092dc0f35b83"},
       None}, "HyperlinkDefault"]]],
 CellChangeTimes->{3.880254502231495*^9},
 CellTags->
  "46bd5228-d088-46b9-bb4d-8b1c124529d0",ExpressionUUID->"cb864803-6d1f-4dd6-\
b495-534f8c442a49"],

Cell[BoxData[
 SuperscriptBox["8", "2"]], "EchoBefore",
 CellDingbat->Cell[
   BoxData[
    TemplateBox[{
      StyleBox["\[LeftGuillemet]", "EchoBeforeDingbat"], {
       FrontEnd`EvaluationNotebook[], "c048d135-843f-4306-8560-b881833ae96f"},
       None}, "HyperlinkDefault"]]],
 CellChangeTimes->{3.880254502252268*^9},
 CellTags->
  "240fa398-a92b-4a12-adfe-9e1ba7d8eba9",ExpressionUUID->"0026114c-f9fa-400e-\
94ba-bf6ee30c7044"],

Cell[BoxData[
 TagBox[
  TooltipBox["64",
   SuperscriptBox["8", "2"]],
  Annotation[#, 8^2, "Tooltip"]& ]], "EchoAfter",
 CellDingbat->Cell[
   BoxData[
    TemplateBox[{
      StyleBox["\[RightGuillemet]", "EchoAfterDingbat"], {
       FrontEnd`EvaluationNotebook[], "240fa398-a92b-4a12-adfe-9e1ba7d8eba9"},
       None}, "HyperlinkDefault"]]],
 CellChangeTimes->{3.880254502299676*^9},
 CellTags->
  "c048d135-843f-4306-8560-b881833ae96f",ExpressionUUID->"514c76b2-e877-44aa-\
96c1-855f4112f795"],

Cell[BoxData[
 SuperscriptBox["9", "2"]], "EchoBefore",
 CellDingbat->Cell[
   BoxData[
    TemplateBox[{
      StyleBox["\[LeftGuillemet]", "EchoBeforeDingbat"], {
       FrontEnd`EvaluationNotebook[], "c9a0a49a-0f50-439b-8bd3-3287607ab982"},
       None}, "HyperlinkDefault"]]],
 CellChangeTimes->{3.880254502321093*^9},
 CellTags->
  "09722dbb-3377-41ee-8b4a-528ea4c3d12c",ExpressionUUID->"2f26b9b1-fd16-4467-\
8c44-e9e368580e25"],

Cell[BoxData[
 TagBox[
  TooltipBox["81",
   SuperscriptBox["9", "2"]],
  Annotation[#, 9^2, "Tooltip"]& ]], "EchoAfter",
 CellDingbat->Cell[
   BoxData[
    TemplateBox[{
      StyleBox["\[RightGuillemet]", "EchoAfterDingbat"], {
       FrontEnd`EvaluationNotebook[], "09722dbb-3377-41ee-8b4a-528ea4c3d12c"},
       None}, "HyperlinkDefault"]]],
 CellChangeTimes->{3.880254502369334*^9},
 CellTags->
  "c9a0a49a-0f50-439b-8bd3-3287607ab982",ExpressionUUID->"f3e6f68b-3234-4bbc-\
9f68-eba3d6afd3be"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["OpaqueRawPointer",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["105553170710528", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["105553170710528", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ChristopherWolfram`ForeignFunctionInterface`OpaqueRawPointer[
  105553170710528],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.879637980127108*^9, 3.879639055758209*^9, 3.8796391760361223`*^9, 
   3.879639362241055*^9, 3.87964032247794*^9, {3.879640593305035*^9, 
   3.8796406410566053`*^9}, 3.879640851489279*^9, 3.8796408980677023`*^9, 
   3.879643698285797*^9, 3.879644374514373*^9, 3.8798466832146883`*^9, 
   3.879857979312192*^9, 3.88025408781073*^9, 3.88025450238675*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"faffa24f-169f-403d-bf8d-09c91772e160"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "@", 
  RowBox[{"BufferToNumericArray", "[", 
   RowBox[{"res", ",", 
    RowBox[{"FFIType", "[", "\"\<CLong\>\"", "]"}], ",", "10"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.879640630901579*^9, 3.8796406776864443`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"cccc2d88-2613-456c-a46b-53fe272c333a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "4", ",", "9", ",", "16", ",", "25", ",", "36", ",", 
   "49", ",", "64", ",", "81"}], "}"}]], "Output",
 CellChangeTimes->{{3.879640674598178*^9, 3.879640677958584*^9}, 
   3.879640855742532*^9, 3.8798466902777147`*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"38b63f2f-ab70-4064-bd67-93fe738bf190"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"quietCallback", "=", 
   RowBox[{"CreateManagedExpression", "[", 
    RowBox[{
     RowBox[{"CreateCallback", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "^", "2"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"FFIType", "[", "\"\<CLong\>\"", "]"}], "}"}], ",", 
       RowBox[{"FFIType", "[", "\"\<CLong\>\"", "]"}]}], "]"}], ",", 
     "FreeCallback"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.879640864254776*^9, 3.879640890702537*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"dd827b99-240d-407f-826d-80f15c0a98e5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"CallForeignFunction", "[", 
   RowBox[{"arrayMaker", ",", 
    RowBox[{"{", "quietCallback", "}"}]}], "]"}], "//", 
  "RepeatedTiming"}]], "Input",
 CellChangeTimes->{{3.8796408842155943`*^9, 3.879640892582548*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"4a55620e-9fe1-417a-b63b-f3432ad8ca78"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5.649810791015625`*^-6", ",", 
   InterpretationBox[
    RowBox[{
     TagBox["OpaqueRawPointer",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              GridBox[{{
                 TagBox["\"address: \"", "SummaryItem"]}, {
                 TagBox["76122336", "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              GridBox[{{
                 TagBox["\"address: \"", "SummaryItem"]}, {
                 TagBox["76122336", "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    ChristopherWolfram`ForeignFunctionInterface`OpaqueRawPointer[76122336],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.8796408801123457`*^9, 3.879640902138937*^9}, 
   3.8798467031000557`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"39d12430-3b78-4244-b8aa-ed18eedaa66d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"sideEffectCallback", "=", 
   RowBox[{"CreateManagedExpression", "[", 
    RowBox[{
     RowBox[{"CreateCallback", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Sow", "[", "#", "]"}], ";", 
          RowBox[{"#", "^", "2"}]}], ")"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"FFIType", "[", "\"\<CLong\>\"", "]"}], "}"}], ",", 
       RowBox[{"FFIType", "[", "\"\<CLong\>\"", "]"}]}], "]"}], ",", 
     "FreeCallback"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.879640864254776*^9, 3.879640890702537*^9}, {
  3.879640947241035*^9, 3.8796409630570803`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"8b3c3b07-4705-48e8-a6fd-3aad33ca85e7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reap", "[", 
  RowBox[{"CallForeignFunction", "[", 
   RowBox[{"arrayMaker", ",", 
    RowBox[{"{", "sideEffectCallback", "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8796408842155943`*^9, 3.879640892582548*^9}, {
  3.879640967929481*^9, 3.8796409750993233`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"6f787f08-b4ee-4d3f-92d5-2c7e9aeef0f0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    RowBox[{
     TagBox["OpaqueRawPointer",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              GridBox[{{
                 TagBox["\"address: \"", "SummaryItem"]}, {
                 TagBox["76122432", "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              GridBox[{{
                 TagBox["\"address: \"", "SummaryItem"]}, {
                 TagBox["76122432", "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    ChristopherWolfram`ForeignFunctionInterface`OpaqueRawPointer[76122432],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", 
      "7", ",", "8", ",", "9"}], "}"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.87964097050702*^9, 3.879640975734293*^9}, 
   3.879846721385892*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"064a2b65-aefc-4f9d-826f-15e929d96c65"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"callback2", "=", 
  RowBox[{"CreateCallback", "[", 
   RowBox[{"bar", ",", 
    RowBox[{"{", 
     RowBox[{"FFIType", "[", "\"\<CLong\>\"", "]"}], "}"}], ",", 
    RowBox[{"FFIType", "[", "\"\<CLong\>\"", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8796391858797417`*^9, 3.879639189479537*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"84b6a98b-47d7-49ed-a67d-b81395b799e5"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TypeProduct", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
                  TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"CallbackObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
                  TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"CallbackObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"], 
       DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("DataStructure[CallbackObject, $Failed]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.879639190074151*^9, {3.879639362349715*^9, 3.879639364876429*^9}, 
   3.879640605267823*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"8316a085-05c0-4b95-885b-ce5c107b40ee"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"FreeCallback", "[", "callback2", "]"}]], "Input",
 CellChangeTimes->{{3.8796391926650877`*^9, 3.879639195652007*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"9622d886-1e75-40e7-93d0-49e3b3ed0cf8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CallForeignFunction", "[", 
  RowBox[{"arrayMaker", ",", 
   RowBox[{"{", "callback", "}"}]}], "]"}]], "Input",
 CellLabel->"In[16]:=",ExpressionUUID->"2c163fe2-b35c-49d1-9c74-0593f0615b81"],

Cell[CellGroupData[{

Cell[BoxData["foo"], "Echo",
 CellChangeTimes->{
  3.879639191277575*^9},ExpressionUUID->"8fdda9e1-06d8-45d6-bbc0-\
339143978792"],

Cell[BoxData["foo"], "Echo",
 CellChangeTimes->{
  3.879639191364826*^9},ExpressionUUID->"4a124edb-415c-4663-822e-\
f02002074f38"],

Cell[BoxData["foo"], "Echo",
 CellChangeTimes->{
  3.8796391913768682`*^9},ExpressionUUID->"54e5b3c8-0906-414a-986a-\
8f3f86737840"],

Cell[BoxData["foo"], "Echo",
 CellChangeTimes->{
  3.879639191440611*^9},ExpressionUUID->"fbf6fdd5-3df9-469d-824d-\
5cc32d6153ba"],

Cell[BoxData["foo"], "Echo",
 CellChangeTimes->{
  3.879639191450151*^9},ExpressionUUID->"2f02fa68-5a87-416c-b3b7-\
6cb39bbc8ec9"],

Cell[BoxData["foo"], "Echo",
 CellChangeTimes->{
  3.879639191517164*^9},ExpressionUUID->"3c262410-eedc-4864-b512-\
480d287a28f7"],

Cell[BoxData["foo"], "Echo",
 CellChangeTimes->{
  3.8796391915862093`*^9},ExpressionUUID->"2147c3e6-2b76-4150-b835-\
a36d8388177e"],

Cell[BoxData["foo"], "Echo",
 CellChangeTimes->{
  3.879639191657523*^9},ExpressionUUID->"3dde8961-15cb-4c90-b6d8-\
dc0f567f6c05"],

Cell[BoxData["foo"], "Echo",
 CellChangeTimes->{
  3.879639191728787*^9},ExpressionUUID->"398ff64e-0666-46df-b48c-\
7162633bc055"],

Cell[BoxData["foo"], "Echo",
 CellChangeTimes->{
  3.879639191802313*^9},ExpressionUUID->"9b15a01d-6c69-49c7-90f1-\
4dc871b5c081"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["OpaqueRawPointer",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["52396992", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["52396992", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ChristopherWolfram`ForeignFunctionInterface`OpaqueRawPointer[52396992],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.879639191876011*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"f4b81561-dd2d-4e04-9474-762019aed9f9"]
}, Open  ]],

Cell["There are no memory leaks:", "Text",
 CellChangeTimes->{{3.879643216906736*^9, 3.87964322103467*^9}, {
  3.879644037072875*^9, 3.87964404304915*^9}, {3.879644755167012*^9, 
  3.8796447575790653`*^9}, {3.880254512567316*^9, 
  3.880254517972828*^9}},ExpressionUUID->"2725948c-e93a-432b-ac3e-\
5c544b3a5080"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"start", "=", 
     RowBox[{"MemoryInUse", "[", "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{"CreateCallback", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"EchoEvaluation", "[", 
          RowBox[{"#", "^", "2"}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{"FFIType", "[", "\"\<CLong\>\"", "]"}], "}"}], ",", 
        RowBox[{"FFIType", "[", "\"\<CLong\>\"", "]"}]}], "]"}], ",", 
      "1000"}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"MemoryInUse", "[", "]"}], "-", "start"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.8796431514661407`*^9, 3.879643180067068*^9}, {
  3.879690039497095*^9, 3.879690041177169*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"83007879-4d91-4faa-b1e1-4611cac0c963"],

Cell[BoxData["64064"], "Output",
 CellChangeTimes->{{3.879643172994071*^9, 3.8796432014508543`*^9}, 
   3.879643311256374*^9, 3.879643700805632*^9, 3.879644198489622*^9, {
   3.879644397910836*^9, 3.879644401538611*^9}, 3.87964459918818*^9, {
   3.87969003983428*^9, 3.87969004161376*^9}, 3.880254096955934*^9, {
   3.880254507827895*^9, 3.880254526099432*^9}},
 CellLabel->"Out[11]=",ExpressionUUID->"8e8ed074-0bf3-46f5-89d8-b32c7df6e04c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"start", "=", 
     RowBox[{"MemoryInUse", "[", "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{"CreateManagedExpression", "[", 
       RowBox[{
        RowBox[{"CreateCallback", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"EchoEvaluation", "[", 
            RowBox[{"#", "^", "2"}], "]"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{"FFIType", "[", "\"\<CLong\>\"", "]"}], "}"}], ",", 
          RowBox[{"FFIType", "[", "\"\<CLong\>\"", "]"}]}], "]"}], ",", 
        "FreeCallback"}], "]"}], ",", "1000"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"MemoryInUse", "[", "]"}], "-", "start"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{
  3.87964318743476*^9, {3.87969003524984*^9, 3.879690037097011*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"e4f9af7f-42f6-47aa-93a7-76ac3a2e2636"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.879643189561963*^9, 3.879643196373453*^9}, 
   3.879643310215191*^9, 3.879643701501307*^9, 3.8796441986076393`*^9, {
   3.8796443988199368`*^9, 3.879644402085908*^9}, 3.879644600051091*^9, {
   3.8796900333892107`*^9, 3.8796900375456877`*^9}, {3.8802540984126368`*^9, 
   3.880254137124058*^9}, {3.880254506614007*^9, 3.880254526702743*^9}},
 CellLabel->"Out[12]=",ExpressionUUID->"a1438aef-4244-4321-95cf-f582eb49664e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["No ListVector for arguments", "Subsection",
 CellChangeTimes->{{3.879603782306116*^9, 
  3.8796037865542917`*^9}},ExpressionUUID->"22dc5cf9-6b4f-4f72-a345-\
d123f3d3159d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cf1", "=", 
  RowBox[{"FunctionCompile", "[", 
   RowBox[{
    RowBox[{
    "CompiledComponent", "[", "\"\<ForeignFunctionInterface\>\"", "]"}], ",", 
    
    RowBox[{
     RowBox[{"Typed", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<ForeignFunctionObject\>\"", ",", 
         RowBox[{
         "\"\<ListVector\>\"", "::[", "\"\<InertExpression\>\"", "]"}]}], 
        "}"}], "->", "\"\<InertExpression\>\""}], "]"}], "@", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ff", ",", "args"}], "}"}], ",", 
       RowBox[{
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{
          "ChristopherWolfram`ForeignFunctionInterface`LibFFI`Base`Private`\
populateArgumentPointer", "[", 
           RowBox[{
            RowBox[{"FromRawPointer", "[", 
             RowBox[{
              RowBox[{"ff", "[", "\"\<ArgumentPointers\>\"", "]"}], ",", 
              RowBox[{"i", "-", "1"}]}], "]"}], ",", 
            RowBox[{"FromRawPointer", "[", 
             RowBox[{
              RowBox[{"ff", "[", "\"\<ArgumentTypes\>\"", "]"}], ",", 
              RowBox[{"i", "-", "1"}]}], "]"}], ",", 
            RowBox[{"args", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"ff", "[", "\"\<ArgumentCount\>\"", "]"}]}], "}"}]}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"LibraryFunction", "[", "\"\<ffi_call\>\"", "]"}], "[", 
         RowBox[{
          RowBox[{"ff", "[", "\"\<CallInterface\>\"", "]"}], ",", 
          RowBox[{"ff", "[", "\"\<FunctionPointer\>\"", "]"}], ",", 
          RowBox[{"ff", "[", "\"\<OutputPointer\>\"", "]"}], ",", 
          RowBox[{"ff", "[", "\"\<ArgumentPointers\>\"", "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"DereferenceBuffer", "[", 
         RowBox[{
          RowBox[{"ff", "[", "\"\<OutputPointer\>\"", "]"}], ",", 
          RowBox[{"ff", "[", "\"\<OutputType\>\"", "]"}]}], "]"}]}]}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8796037873471413`*^9, 3.8796038166292753`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"bc5e68d5-e3b5-4297-9a62-f760f48a6610"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledCodeFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GraphicsBox[
             InsetBox[
              FormBox[
               StyleBox["\"Code\"", 
                GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
               TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], Axes -> 
             False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {27., {0., 10.}}], Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Signature: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"ForeignFunctionObject\"", ",", 
                    
                    RowBox[{
                    "\"ListVector\"", "::[", "\"InertExpression\"", "]"}]}], 
                    "}"}], "\[Rule]", "\"InertExpression\""}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GraphicsBox[
             InsetBox[
              FormBox[
               StyleBox["\"Code\"", 
                GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
               TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], Axes -> 
             False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {27., {0., 10.}}], Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Signature: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"ForeignFunctionObject\"", ",", 
                    
                    RowBox[{
                    "\"ListVector\"", "::[", "\"InertExpression\"", "]"}]}], 
                    "}"}], "\[Rule]", "\"InertExpression\""}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledCodeFunction[<|
   "Signature" -> TypeSpecifier[{"ForeignFunctionObject", 
        "ListVector"["InertExpression"]} -> "InertExpression"], "Input" -> 
    Compile`Program[
      CompiledComponent["ForeignFunctionInterface"], 
      Typed[{"ForeignFunctionObject", 
         TypeSpecifier["ListVector"]["InertExpression"]} -> "InertExpression"][
       Function[{$CellContext`ff, $CellContext`args}, Do[
          
          ChristopherWolfram`ForeignFunctionInterface`LibFFI`Base`Private`\
populateArgumentPointer[
           FromRawPointer[
            $CellContext`ff["ArgumentPointers"], $CellContext`i - 1], 
           FromRawPointer[
            $CellContext`ff["ArgumentTypes"], $CellContext`i - 1], 
           Part[$CellContext`args, $CellContext`i]], {$CellContext`i, 
           $CellContext`ff["ArgumentCount"]}]; LibraryFunction["ffi_call"][
          $CellContext`ff["CallInterface"], 
          $CellContext`ff["FunctionPointer"], 
          $CellContext`ff["OutputPointer"], 
          $CellContext`ff["ArgumentPointers"]]; 
        ChristopherWolfram`ForeignFunctionInterface`DereferenceBuffer[
          $CellContext`ff["OutputPointer"], 
          $CellContext`ff["OutputType"]]]]], "ErrorFunction" -> Automatic, 
    "InitializationName" -> 
    "Initialization_92901115_3d02_4206_9ace_f2043b5b39a2", "ExpressionName" -> 
    "Main_ExprInvocation", "CName" -> "Main_CInvocation", "FunctionName" -> 
    "Main", "SystemID" -> "Linux-x86-64", "VersionData" -> {13.2, 0, 0}, 
    "CompiledIR" -> <|"Linux-x86-64" -> ByteArray[CompressedData["
1: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
i38Z11/KvoAL6JBTwEVXU4bDgL0XKesfXd/LF3kn/Jf8Y5TRDazwVCVbpevN
Sesv98N7UxVAVjYg4tPExnLKjBo7l5vhWrDw8TE5TTFkXmvdEhg+hu+LiMtX
TCRrtyL1TTOXv7NSJAmq4yi/Mta9dl8tVa+xEFFEMq8YGH4s35ittoVKMrug
ClIcmshD3I7LlfIyN2ZmxnTeaWxDXpXpFn8lSXulKYh+Saqu6ajvcrmg1705
Kdg3PeXMsmwOw5zpP6VBcX9rb67AO0ndJh1zEHFpoi36e8zLHdn8C954EHgS
GXTOs18mrO9hQ7pODLGEwfsPQ7tZA3+FV9JIIHhLDM1Vjecul8ejVZfc024a
X8OYNsfwtwqfv1Vs73qwHiFGc1UxDd0W1ZF/v7Ama4FHcYMzaVMTnwHyo9+E
9bMEwNT8UCz3bHJwIj3T2i7JhrknkOgoUJ8hd2fPpd2KkVnG0ZB0icsS13bM
ZipeylIM1Nyeu0wQrAwMos38KiladkDtkOLJx5f4IOzbcZCU1RPWX/dFvUa1
oBaTzRHKJcn6SiV/dSibI9+c0t5NuDPwwhpu0dGq1Uc9UNE7UZ1i7p92M6cA
Z1JSZU5aDJwUdk19i9bMuXfdDcecdFbupIDfObPkTmIBJxUlaTdgTmKZH0Xf
Tzip7XKu4PaMlDMmlzgMplr2lPUHkwJnZWw2PWpOzbMB1qh26CF8vDxztY2d
T/NFe6AjCqgFl0yY3vd3D9a4krYY5uLDlBbUuEIlBT0zGatwRVW+19SdVp13
QUW5KQWKf/5pbz3PE533SGKyVead31LqyP133VcaLoUCWqyIl2/7XN24NVcu
n1WJHsjVToVFilA+q3qMx4NFx68ZFpeC1RWJTGvmOu4NSf7Fvoe5gZrdxqtl
LrFhfuWXVRygXqAA1Xxw5CLjG0bDU1ZdaBjXTENKmmIX0Iwj1EzTg7PEB24T
Xls/b8om5zHNnAGa2bjFal0ccEcP9azMHbuBO/ZnT9kyU3Pu3QZMMxzELW9C
M4XRE+6wBe4oBZqZCd1hyzyOhq6Y0Myji4LbM2Wa+aAGNEM70vSmEGjG5ctR
mWY8gGauFb/cMb3ywhktTDMUzj/HJjQz1VuuGYtZdrPqGsMrZ0PNcGZdUjX2
mnBcaPbaNP/pMs1cAJrZ9/dT37vrWI/4s/JkXsk6UEeek+eZdUO9wGMdAjUj
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
we0P8P6b5eSPgLVtVkUxsbEQmGhlrxrZb0SHE6aJHkgmPVUmBcAkIP7SOXAV
YU4D4tAKvmdw6CG4wNYGvawguqvaT7xs8ifq5CzNr3zpocRPLpMnfMXPJn/K
JH8qnM+6mkmBQmNGEUv/mmOeuVHbpHnaFzwbT3YPUS30BHYZ6bIDCy0n21rW
Z4XU5zh699rl/GyfdY3j0+3R2ONsoBzfWXgfQbmGROMLFpbr3ZZqm+Rk6d6e
n5PdxItdxLI0FuTjtYsgO94qa/uURKAEtGjt82ezoAxmCjiU26OVxe8EUN2u
b3wnEPx/oPjkXLwX3q6ip+mE+rb60tx9GWB+u1oc0Jv7L5qea4P2L1NowSEW
lcY5hjq8ptxMao6FSb3LSmOXfxnOmp9940uLTD1TQ6oLBckshqruGlR3IKqb
WIniOlOYsM5aQ11ivYvkCqj1Z9937XznzN9E+46H16Xam7T2+zK0N+t86jtO
LlGp2muPIn47HO7xk4H7mtbrepTv8ij5T3ZRElrw2hXu8831aMrfpJMzB9Y5
3YRCiYhIjFwaER0dszQ8LjF0R3x0bPje0BBVakJUbHRExNLYhKj48MjQpSHh
cUHBEaGwnYIZb+p9lF1ssWDhtTcNjdscX8t9H6yKc74Dq+LHwbN2Zj9zM6Wx
KMuNWPW6X/AsMqeEzWRYmux676DLrlx7XmLT9NvnZjgQqnkvS9t5JGwS3AMA
dLtw0JeSncjJzdzPbOazznCKigRAH04D+tDYjbgQ8zlfJ9iCcUmrwUvLm1LN
0zkey3IsmcliFrhc3Szghc1dKpjheWqL/joTgQvjMFSbdGoPB0jJG1pZ/Gc6
Pb7bG6yz92ht3Z4fZaMVVs8wNs7XbaHA24otBNuydhRYuryPbxkqOvi2gP4G
4GLPSotm3rnrFtk5X1Iyb7oJqKBTrYuYv06+Z0H/3swByHzKfz5W3s76TnK2
4CEts3VbvKGtruFtfcYX+hGZWdQ9DXOexqy9wORzfiziuDibFK5q369nWx6k
3zAnl6ZND66wHIHLYr9CwWNa5ocms41YWQ3L7mT3MEFemi+LqcNotKYub7Vh
6Rbwf+Axs6yD83MzbVszrT4wnRdVVJptabX/rSIKny/QN8Ra51iDzsqHhudo
YOjsdhsCJQJKdLH+IueUTs8MVgi+HS3Mcl4Ov6BhWzZci4P3113mT6FNNnT9
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

        "]]|>, 
    "ExternalLibraryPaths" -> {
     "libffi", "ffiConstants", "libffi", "ffiConstants", "libffi", 
      "ffiConstants", "libffi", "ffiConstants", "libffi", "ffiConstants", 
      "libffi", "ffiConstants", "libffi", "ffiConstants", 
      "CompilerCoreRuntime", "CompilerCoreRuntime", "libffi", "ffiConstants", 
      "libffi", "ffiConstants", "libffi", "ffiConstants", "libffi", 
      "ffiConstants", "libffi", "ffiConstants", "libffi", "ffiConstants", 
      "libffi", "ffiConstants", "libffi", "ffiConstants", "libffi", 
      "ffiConstants", "libffi", "ffiConstants", "libffi", "ffiConstants", 
      "libffi", "ffiConstants", "libffi", "ffiConstants", "libffi", 
      "ffiConstants"}, "orcInstance" -> 58812160, "orcModuleId" -> 68666896, 
    "targetMachineId" -> 70136176|>, 140287712830064, 140287712829648, 
   140287712829968, 140287712821248, 
   "{\"ForeignFunctionObject\", \"ListVector\"[\"InertExpression\"]} -> \
\"InertExpression\""],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.879603804544924*^9, 3.87960385409308*^9, 
  3.8796041762468977`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"6b75d7bd-ff70-43bf-aa61-9651e9479b76"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cf2", "=", 
  RowBox[{"FunctionCompile", "[", 
   RowBox[{
    RowBox[{
    "CompiledComponent", "[", "\"\<ForeignFunctionInterface\>\"", "]"}], ",", 
    
    RowBox[{
     RowBox[{"Typed", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<ForeignFunctionObject\>\"", ",", "\"\<InertExpression\>\""}], 
        "}"}], "->", "\"\<InertExpression\>\""}], "]"}], "@", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ff", ",", "args"}], "}"}], ",", 
       RowBox[{
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{
          "ChristopherWolfram`ForeignFunctionInterface`LibFFI`Base`Private`\
populateArgumentPointer", "[", 
           RowBox[{
            RowBox[{"FromRawPointer", "[", 
             RowBox[{
              RowBox[{"ff", "[", "\"\<ArgumentPointers\>\"", "]"}], ",", 
              RowBox[{"i", "-", "1"}]}], "]"}], ",", 
            RowBox[{"FromRawPointer", "[", 
             RowBox[{
              RowBox[{"ff", "[", "\"\<ArgumentTypes\>\"", "]"}], ",", 
              RowBox[{"i", "-", "1"}]}], "]"}], ",", 
            RowBox[{"args", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"ff", "[", "\"\<ArgumentCount\>\"", "]"}]}], "}"}]}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"LibraryFunction", "[", "\"\<ffi_call\>\"", "]"}], "[", 
         RowBox[{
          RowBox[{"ff", "[", "\"\<CallInterface\>\"", "]"}], ",", 
          RowBox[{"ff", "[", "\"\<FunctionPointer\>\"", "]"}], ",", 
          RowBox[{"ff", "[", "\"\<OutputPointer\>\"", "]"}], ",", 
          RowBox[{"ff", "[", "\"\<ArgumentPointers\>\"", "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"DereferenceBuffer", "[", 
         RowBox[{
          RowBox[{"ff", "[", "\"\<OutputPointer\>\"", "]"}], ",", 
          RowBox[{"ff", "[", "\"\<OutputType\>\"", "]"}]}], "]"}]}]}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.879603822277856*^9, 3.879603824533823*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"fb41b172-f039-4441-be0f-d20c99bdb783"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledCodeFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GraphicsBox[
             InsetBox[
              FormBox[
               StyleBox["\"Code\"", 
                GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
               TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], Axes -> 
             False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {27., {0., 10.}}], Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Signature: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"ForeignFunctionObject\"", ",", "\"InertExpression\""}],
                     "}"}], "\[Rule]", "\"InertExpression\""}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GraphicsBox[
             InsetBox[
              FormBox[
               StyleBox["\"Code\"", 
                GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
               TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], Axes -> 
             False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {27., {0., 10.}}], Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Signature: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"ForeignFunctionObject\"", ",", "\"InertExpression\""}],
                     "}"}], "\[Rule]", "\"InertExpression\""}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledCodeFunction[<|
   "Signature" -> 
    TypeSpecifier[{"ForeignFunctionObject", "InertExpression"} -> 
      "InertExpression"], "Input" -> Compile`Program[
      CompiledComponent["ForeignFunctionInterface"], 
      Typed[{"ForeignFunctionObject", "InertExpression"} -> "InertExpression"][
       Function[{$CellContext`ff, $CellContext`args}, Do[
          
          ChristopherWolfram`ForeignFunctionInterface`LibFFI`Base`Private`\
populateArgumentPointer[
           FromRawPointer[
            $CellContext`ff["ArgumentPointers"], $CellContext`i - 1], 
           FromRawPointer[
            $CellContext`ff["ArgumentTypes"], $CellContext`i - 1], 
           Part[$CellContext`args, $CellContext`i]], {$CellContext`i, 
           $CellContext`ff["ArgumentCount"]}]; LibraryFunction["ffi_call"][
          $CellContext`ff["CallInterface"], 
          $CellContext`ff["FunctionPointer"], 
          $CellContext`ff["OutputPointer"], 
          $CellContext`ff["ArgumentPointers"]]; 
        ChristopherWolfram`ForeignFunctionInterface`DereferenceBuffer[
          $CellContext`ff["OutputPointer"], 
          $CellContext`ff["OutputType"]]]]], "ErrorFunction" -> Automatic, 
    "InitializationName" -> 
    "Initialization_2773c5b0_a6e6_43fa_91e1_bd75eccbfc07", "ExpressionName" -> 
    "Main_ExprInvocation", "CName" -> "Main_CInvocation", "FunctionName" -> 
    "Main", "SystemID" -> "Linux-x86-64", "VersionData" -> {13.2, 0, 0}, 
    "CompiledIR" -> <|"Linux-x86-64" -> ByteArray[CompressedData["
1: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
RIt2CgA10KSPgNUcbbUy9MZ9bruU12LxlStuWZPHoQH33S+Gax77bNHNiWdo
n/XE9T+u/lOXBT1z94WP5PkLS9aYblz4pXdkXbNPaMOEWlbnmTBhQkvpHQZw
4UG4dH9+a1311jrcDJmskn8N/QsadY99Qv/GTkanwbXhejGB7+cCib0t5vng
NeXcXut+ezSpJsGkWnRClVQ/gqS6ZTbtHhnGs7XZY/PjmjXD9ZpE/tgBU55f
/Py4v8fa2EOEsnrzg99ym4eg2ILEQNskgrx1Lorq+v5Se4SxmYXdxbqYLT7u
6QXkxlJSzM/k3bPe3ln8Y87pwLtvZ9zY+fatzmmyY+7dDbq7Z+ae3qlz96s3
uQ5/uOL2a0kHRy6k1Pmfdi21OoCZFlVyN9nsRvfQmchm/59ZglOilz0fW/13
1GXqlWpJXw8/irU8u8nyXcFy4/bqRYzDmrEH9hVVVHzaOk9I+PkRWCXQXXZA
9yhHy+zk1tbrsYeV3U/6qct9BNMZP74dvga+38wXHCBFSvT8PKJWtQ3XXEvp
dCXaHzXNV1zbulIZb/mOCv47Zy4E98dcvfh5qtWOOrI2o3e7ldF67HfwywIv
o6LpDMWroX4qfYBaEytdVPUM2Wh1XNOH0lEZM3JdOVSeUodo7tWSbix5tNXS
qQcz1UqrrFgUIk146n96rmhWao+UErnlcLpU8N00K9En5R/ZpLoInx+pdnWR
Y3+VX+lY0D5cp2xDsgeVrtzpAqtRZazFRowddxf5e+aBafH54DblcNoHDOP7
YMwM9HLeZ6VRMqmfiT/Olr5UPp3Pzck0AauRrZ6lnWUevXnlsDTfpi5y9INy
ycYVqUeq8m/6//xEdkpUcS1yzgA8cbe3jMCVkjIjyudBazdbdgBXBawF3pf+
8e6J/45OPvHXV4wpxytj57yIbul51XYafL+jswT13PVX1RdjR64pDw4UzKAV
4b9jtOOous2Ptg2dibV0uocpxx4dehTf6i8cdsZN3L+jRjnaT013gJ5+d+UP
uFzdz9oHtKR9B66Di+3DHzQqQLyvnN5m+c4sqwoPjBx2jJjOuJy8eoB6ZYDa
7QafjAZPAvPqviFWiClWEuaBV3lSboTd3AHqAxs+jOFhYGidRhFYadXJSMtL
77bqltpxD0ADh6/HAvFp9Q9YLoKO6E0dAN/vEEfNkRIgBreZXYwZObMJAsLp
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
mnujt1dZzVxv8z5T2+f2QjTRXaj7iL2lT6DdIGOeXiD+grsMBagh/gv9LYlC
lOlz5boFJ8yoYQMzUGhbyD7TvsAHJZrOSuYqpluCoVrzY7XmmyzFX9jLSGje
97zfvIa3gWo34T2i4zjaKudkv6BIX7MMRfkZ6lEYchl64LUTSF7sXilFIXqv
DfAqn3ZdDaN9BkWYoWjIW5vo0YLJDRHgehfkmZYL77e960Ki3nTzq3Qj3cb8
dvxtGyejbwvdpBMM8EJkqLxO3YynetAxDs2GzLDQjJipRHNDiHezsrt0wyis
9cZnLRt/hUjfhn3Fns7+JSjeV6X7+XjfdwwCZeuvHQ+9ouoX4qG7TG3VVly0
rz8fuGi947lfIYy2uTOuOFJYO/qWs1t897Cw2HdWwlClOX/ll/8yXXw9Drio
Zh4J1Fxuapv1K7aoeuznWxRm4I38lrTohKnE3x1JVlijUaCsYs/6L2bzxYcM
16g/F7w7PzbQ7ao5VzvF7ffFYfH9H1GteiFEGLSTENutW3hzikcACKSnsmAF
c0VX3wEtgqicO7zwAV6NCAeRZt/hBVcd3VEgpBVdwtCD/I7Nz7liLWWgZC3n
uUSPF3OEJUHhVyKFpz6b6tbyyNwn5IiDvP/hMOX7IHGg2wqmw0Xze7F31d+b
FQXCR/kzZj3JdzObw56oZkw5HmX3uWv7O6TtozZdOTqW/9YijsmVtdJHeM8s
582KXuIEtdm53b5v3aejY+alz39pwL3hulD74SWgjtY7hiEE6e4Ym+ImEJ9m
0Wq9q0azLrsF1HqCVrDS1BbsSEX/hqh1I3kdoBjD7/DWCGzC2QcAoesjp1Jb
6hgGZq6x0kALRgG5PcXoQoTl/XUYjX8qpIsjwP2eF/0qHtP5A7zqjbotgPYr
RKAk/znyLYr87WqQUxGw3tg4OEMp7GirgE6jWQYoPQWsisH6BACedRXIqkjo
rdHchO/eiu9/6EVxupd1t7DaNu4w8HbIPmO2/Yux2zyz5DjZdAcpTDDFynQ1
3jY9/BY0HT8SBiXfUKPx9MUGCyjAnlrNujwcjN+70ICC8T3ml46rng716BDV
uVdwTDcwskk2isNxu3Q1ms5P8eGAoZA7vOxFmL8bqkwlPzgi/q6VDwnE77NR
0ap+MGb+2ZLw/wtF8ZuWH/08ZqYZcRMa+89oNnzrG8ZmYjNkkz7/iKmtMBK1
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
qw==
        "]]|>, 
    "ExternalLibraryPaths" -> {
     "libffi", "ffiConstants", "libffi", "ffiConstants", "libffi", 
      "ffiConstants", "libffi", "ffiConstants", "libffi", "ffiConstants", 
      "libffi", "ffiConstants", "libffi", "ffiConstants", 
      "CompilerCoreRuntime", "CompilerCoreRuntime", "libffi", "ffiConstants", 
      "libffi", "ffiConstants", "libffi", "ffiConstants", "libffi", 
      "ffiConstants", "libffi", "ffiConstants", "libffi", "ffiConstants", 
      "libffi", "ffiConstants", "libffi", "ffiConstants", "libffi", 
      "ffiConstants", "libffi", "ffiConstants", "libffi", "ffiConstants", 
      "libffi", "ffiConstants", "libffi", "ffiConstants", "libffi", 
      "ffiConstants"}, "orcInstance" -> 62111984, "orcModuleId" -> 68494912, 
    "targetMachineId" -> 71067376|>, 140287572828048, 140287572827696, 
   140287572827952, 140287572819968, 
   "{\"ForeignFunctionObject\", \"InertExpression\"} -> \"InertExpression\""],
  
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8796038791577473`*^9, 3.879604201206805*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"ceebd0a0-4a76-4e65-a7e0-3b0789bea58f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"cf1", "[", 
   RowBox[{"addone", ",", 
    RowBox[{"{", "12", "}"}]}], "]"}], "//", "RepeatedTiming"}]], "Input",
 CellChangeTimes->{{3.879603834054517*^9, 3.879603838036249*^9}, {
  3.879603881854601*^9, 3.879603883328487*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"9a9eaf26-550d-49e1-a157-a4aa6eef64cf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.8648271560668947`*^-7", ",", "13"}], "}"}]], "Output",
 CellChangeTimes->{{3.8796038809751368`*^9, 3.879603905421419*^9}, 
   3.879604202980616*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"3500e95d-9a74-41a9-aa62-04c3b654f8ee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"cf2", "[", 
   RowBox[{"addone", ",", 
    RowBox[{"{", "12", "}"}]}], "]"}], "//", "RepeatedTiming"}]], "Input",
 CellChangeTimes->{{3.879603839348834*^9, 3.8796038432445393`*^9}, {
  3.879603885183097*^9, 3.8796038866153183`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"c9f80d0f-b63b-4716-894f-d4afaef781f3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.818789482116699`*^-7", ",", "13"}], "}"}]], "Output",
 CellChangeTimes->{{3.879603880568008*^9, 3.879603906777042*^9}, 
   3.8796042042797337`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"67deb0bc-f41b-4bb3-afc8-bbee40b8d502"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"CallForeignFunction", "[", 
   RowBox[{"addone", ",", 
    RowBox[{"{", "12", "}"}]}], "]"}], "//", "RepeatedTiming"}]], "Input",
 CellLabel->"In[11]:=",ExpressionUUID->"904488dd-9f4c-46e6-8653-1a2cd3ca52be"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.9339933395385744`*^-7", ",", "13"}], "}"}]], "Output",
 CellChangeTimes->{3.879603902363413*^9, 3.8796042056064787`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"db3d341a-10b1-4223-b0c5-90e1f626deee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CallForeignFunction", "[", 
  RowBox[{"addone", ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "13"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.879604156712256*^9, 3.879604156848073*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"4667ec37-438b-4825-a1a7-801999a9c67a"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.8796042057109547`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"899b3120-4d8f-4c43-9675-ba39d9904659"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simplified wrappers", "Subsection",
 CellChangeTimes->{{3.879603541713085*^9, 
  3.879603543769165*^9}},ExpressionUUID->"227ff952-0d3c-4678-a327-\
e733511b0830"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"CallForeignFunction", "[", 
   RowBox[{"addone", ",", 
    RowBox[{"{", "12", "}"}]}], "]"}], "//", "RepeatedTiming"}]], "Input",
 CellChangeTimes->{{3.879603550411145*^9, 3.8796035521789303`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"904e18de-daff-4f5b-a297-5ae0c5ec1481"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.9690837860107424`*^-7", ",", "13"}], "}"}]], "Output",
 CellChangeTimes->{{3.879603545690834*^9, 3.8796035539609423`*^9}, 
   3.87960359930217*^9, 3.8796042416840076`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"cc7269b1-a5ba-4278-93ae-9e4f60a1675f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Remove", "[", "callWrapper", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"callWrapper", "[", "ff_", "]"}], "[", "args___", "]"}], ":=", 
  RowBox[{"CallForeignFunction", "[", 
   RowBox[{"ff", ",", 
    RowBox[{"{", "args", "}"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"addone2", "=", 
   RowBox[{"callWrapper", "[", "addone", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"addone2", "[", "12", "]"}], "//", "RepeatedTiming"}]}], "Input",
 CellChangeTimes->{{3.879603555483368*^9, 3.879603569626721*^9}, {
  3.8796036333591022`*^9, 3.8796036474059963`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"725fe85f-f672-4407-8092-0427d99b9a5c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"6.642723083496094`*^-7", ",", "13"}], "}"}]], "Output",
 CellChangeTimes->{{3.879603584862599*^9, 3.879603600950326*^9}, {
   3.8796036367172823`*^9, 3.8796036682158403`*^9}, 3.879604243192577*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"db966c70-4d41-4862-b7a6-a404bf92e140"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Remove", "[", "callWrapper", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"callWrapper", "[", "ff_", "]"}], "[", "args_", "]"}], ":=", 
  RowBox[{"CallForeignFunction", "[", 
   RowBox[{"ff", ",", 
    RowBox[{"{", "args", "}"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"addone2", "=", 
   RowBox[{"callWrapper", "[", "addone", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"addone2", "[", "12", "]"}], "//", "RepeatedTiming"}]}], "Input",
 CellChangeTimes->{{3.879603555483368*^9, 3.879603569626721*^9}, {
  3.8796036333591022`*^9, 3.8796036540137367`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"381be789-c3b5-4aff-8bfa-58497c7340f7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"6.518392562866211`*^-7", ",", "13"}], "}"}]], "Output",
 CellChangeTimes->{{3.879603659254315*^9, 3.879603663424221*^9}, 
   3.879604244713582*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"d78e297f-e3e5-4bf4-8ecd-ac0caddc04b2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Old", "Subsection",
 CellChangeTimes->{{3.879603540313014*^9, 
  3.8796035405449123`*^9}},ExpressionUUID->"5a3e2992-2305-4f52-b094-\
cf44483b6efe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ChristopherWolfram`ForeignFunctionInterface`*"}]], "Input",
 CellChangeTimes->{{3.879039878256122*^9, 3.879039889249373*^9}},
 CellLabel->"In[109]:=",
 CellID->429968114,ExpressionUUID->"988c20d1-f3f7-4ce9-bc67-a4f2f49ed68f"],

Cell[BoxData[
 StyleBox[
  FrameBox[GridBox[{
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          
          StyleBox["ChristopherWolfram`ForeignFunctionInterface`", 
           "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], " ", 
              
              StyleBox["ChristopherWolfram`ForeignFunctionInterface`", 
               "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 StyleBox["BufferToNumericArray", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-32926660-c3c5-470c-abc9-504f5edb69c3", {
                   "BufferToNumericArray", 
                    "ChristopherWolfram`ForeignFunctionInterface`"}, False},
                 ButtonNote->"ChristopherWolfram`ForeignFunctionInterface`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["FFIType", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-32926660-c3c5-470c-abc9-504f5edb69c3", {
                   "FFIType", "ChristopherWolfram`ForeignFunctionInterface`"},
                    False},
                 ButtonNote->"ChristopherWolfram`ForeignFunctionInterface`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["BufferToString", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-32926660-c3c5-470c-abc9-504f5edb69c3", {
                   "BufferToString", 
                    "ChristopherWolfram`ForeignFunctionInterface`"}, False},
                 ButtonNote->"ChristopherWolfram`ForeignFunctionInterface`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["FreeBuffer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-32926660-c3c5-470c-abc9-504f5edb69c3", {
                   "FreeBuffer", 
                    "ChristopherWolfram`ForeignFunctionInterface`"}, False},
                 ButtonNote->"ChristopherWolfram`ForeignFunctionInterface`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CallForeignFunction", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-32926660-c3c5-470c-abc9-504f5edb69c3", {
                   "CallForeignFunction", 
                    "ChristopherWolfram`ForeignFunctionInterface`"}, False},
                 ButtonNote->"ChristopherWolfram`ForeignFunctionInterface`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["GetManagedExpression", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-32926660-c3c5-470c-abc9-504f5edb69c3", {
                   "GetManagedExpression", 
                    "ChristopherWolfram`ForeignFunctionInterface`"}, False},
                 ButtonNote->"ChristopherWolfram`ForeignFunctionInterface`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CreateBuffer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-32926660-c3c5-470c-abc9-504f5edb69c3", {
                   "CreateBuffer", 
                    "ChristopherWolfram`ForeignFunctionInterface`"}, False},
                 ButtonNote->"ChristopherWolfram`ForeignFunctionInterface`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["LoadExternalLibrary", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-32926660-c3c5-470c-abc9-504f5edb69c3", {
                   "LoadExternalLibrary", 
                    "ChristopherWolfram`ForeignFunctionInterface`"}, False},
                 ButtonNote->"ChristopherWolfram`ForeignFunctionInterface`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CreateForeignFunction", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-32926660-c3c5-470c-abc9-504f5edb69c3", {
                   "CreateForeignFunction", 
                    "ChristopherWolfram`ForeignFunctionInterface`"}, False},
                 ButtonNote->"ChristopherWolfram`ForeignFunctionInterface`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["OpaqueRawPointer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-32926660-c3c5-470c-abc9-504f5edb69c3", {
                   "OpaqueRawPointer", 
                    "ChristopherWolfram`ForeignFunctionInterface`"}, False},
                 ButtonNote->"ChristopherWolfram`ForeignFunctionInterface`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 
                 StyleBox["CreateForeignFunctionWithLibrary", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-32926660-c3c5-470c-abc9-504f5edb69c3", {
                   "CreateForeignFunctionWithLibrary", 
                    "ChristopherWolfram`ForeignFunctionInterface`"}, False},
                 ButtonNote->"ChristopherWolfram`ForeignFunctionInterface`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["StringToBuffer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-32926660-c3c5-470c-abc9-504f5edb69c3", {
                   "StringToBuffer", 
                    "ChristopherWolfram`ForeignFunctionInterface`"}, False},
                 ButtonNote->"ChristopherWolfram`ForeignFunctionInterface`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CreateManagedExpression", "InformationGridButton"],
                 
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-32926660-c3c5-470c-abc9-504f5edb69c3", {
                   "CreateManagedExpression", 
                    "ChristopherWolfram`ForeignFunctionInterface`"}, False},
                 ButtonNote->"ChristopherWolfram`ForeignFunctionInterface`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["UnloadExternalLibrary", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-32926660-c3c5-470c-abc9-504f5edb69c3", {
                   "UnloadExternalLibrary", 
                    "ChristopherWolfram`ForeignFunctionInterface`"}, False},
                 ButtonNote->"ChristopherWolfram`ForeignFunctionInterface`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["DereferenceBuffer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-32926660-c3c5-470c-abc9-504f5edb69c3", {
                   "DereferenceBuffer", 
                    "ChristopherWolfram`ForeignFunctionInterface`"}, False},
                 ButtonNote->"ChristopherWolfram`ForeignFunctionInterface`",
                 Evaluator->Automatic], ""}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.475]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"ColumnsIndexed" -> {{False}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.8]}, 
        Offset[0.2]}}],
   BaseStyle->"InformationTitleFrame"], "InformationGridPlain"]], "Output",
 CellChangeTimes->{{3.879039885506915*^9, 3.8790398896018*^9}, 
   3.87955891676269*^9},
 CellLabel->
  "Out[109]=",ExpressionUUID->"c9a158cb-82ee-455e-9198-cb7f82a416ac"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"$CompilerEnvironment", "[", "\"\<PlatformData\>\"", "]"}], "[", 
  "\"\<MNumericArrayTypeList\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.879558569604871*^9, 3.879558599425264*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"25fab619-8c7e-438b-a8d6-b83397aea539"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Integer8\"\>", ",", "\<\"UnsignedInteger8\"\>", 
   ",", "\<\"Integer16\"\>", ",", "\<\"UnsignedInteger16\"\>", 
   ",", "\<\"Integer32\"\>", ",", "\<\"UnsignedInteger32\"\>", 
   ",", "\<\"Integer64\"\>", ",", "\<\"UnsignedInteger64\"\>", 
   ",", "\<\"Real16\"\>", ",", "\<\"Real32\"\>", ",", "\<\"Real64\"\>", 
   ",", "\<\"ComplexReal32\"\>", ",", "\<\"ComplexReal64\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.879558572163082*^9, 3.87955859968853*^9}},
 CellLabel->"Out[26]=",ExpressionUUID->"2b4109e6-56eb-4c17-8e7a-c6b270451e89"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "@", 
  RowBox[{
  "$CompilerEnvironment", "[", "\"\<PlatformData\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.879558631473921*^9, 3.8795586347621813`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"3e617ac3-ef6f-405b-ba83-dcfe35220b88"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"ByteOrdering\"\>", ",", "\<\"ByteAlignment\"\>", 
   ",", "\<\"ByteBits\"\>", ",", "\<\"PointerSize\"\>", 
   ",", "\<\"MemoryAlignment\"\>", ",", "\<\"ArrayElementTypeString\"\>", 
   ",", "\<\"Integer128\"\>", ",", "\<\"UnsignedInteger128\"\>", 
   ",", "\<\"Integer8\"\>", ",", "\<\"UnsignedInteger8\"\>", 
   ",", "\<\"Integer16\"\>", ",", "\<\"UnsignedInteger16\"\>", 
   ",", "\<\"Integer32\"\>", ",", "\<\"UnsignedInteger32\"\>", 
   ",", "\<\"Integer64\"\>", ",", "\<\"MachineInteger\"\>", 
   ",", "\<\"UnsignedInteger64\"\>", ",", "\<\"UnsignedMachineInteger\"\>", 
   ",", "\<\"Real32\"\>", ",", "\<\"Real64\"\>", ",", "\<\"MachineReal\"\>", 
   ",", "\<\"ComplexReal32\"\>", ",", 
   RowBox[{"\<\"Complex\"\>", "[", "\<\"Real32\"\>", "]"}], 
   ",", "\<\"ComplexReal64\"\>", ",", 
   RowBox[{"\<\"Complex\"\>", "[", "\<\"Real64\"\>", "]"}], 
   ",", "\<\"MachineComplexReal\"\>", ",", "\<\"Real16\"\>", 
   ",", "\<\"ArithmeticFlags\"\>", ",", "\<\"FloatingPointEnvironment\"\>", 
   ",", "\<\"MachineIntegerName\"\>", 
   ",", "\<\"UnsignedMachineIntegerName\"\>", 
   ",", "\<\"FloatingPointComplexTypes\"\>", ",", "\<\"MTensorTypeList\"\>", 
   ",", "\<\"FloatingPointRealTypes\"\>", ",", "\<\"SignedIntegerTypes\"\>", 
   ",", "\<\"UnsignedIntegerTypes\"\>", ",", "\<\"IntegerTypes\"\>", 
   ",", "\<\"MNumericArrayTypeList\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.879558632126622*^9, 3.8795586350154943`*^9}},
 CellLabel->"Out[28]=",ExpressionUUID->"f1fc933d-4d75-4877-aa8c-53d61cdc6b6a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"$CompilerEnvironment", "[", "\"\<PlatformData\>\"", "]"}], "[", 
   "\"\<Integer16\>\"", "]"}], "[", "\"\<ArrayTypeID\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8795586783244658`*^9, 3.8795586851240377`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"5d0f630b-7772-4a1d-9881-a6f1f31c8bd9"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{{3.87955868107862*^9, 3.8795586855929747`*^9}},
 CellLabel->"Out[31]=",ExpressionUUID->"1b87e05a-9386-4667-9dc2-1163d1d583da"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cf", "=", 
  RowBox[{"FunctionCompile", "[", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"Array`ElementTypeID", "[", 
      RowBox[{"TypeSpecifier", "[", "\"\<Integer16\>\"", "]"}], "]"}]}], 
    "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.879558774016677*^9, 3.8795587821378202`*^9}, {
  3.879558835206242*^9, 3.8795588503701763`*^9}, {3.8795589501342154`*^9, 
  3.8795589553178787`*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"c492ee40-1f79-4d94-940d-46eacb73cdc8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledCodeFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GraphicsBox[
             InsetBox[
              FormBox[
               StyleBox["\"Code\"", 
                GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
               TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], Axes -> 
             False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {27., {0., 10.}}], Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Signature: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", "}"}], "\[Rule]", "\"Integer32\""}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GraphicsBox[
             InsetBox[
              FormBox[
               StyleBox["\"Code\"", 
                GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
               TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], Axes -> 
             False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {27., {0., 10.}}], Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Signature: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", "}"}], "\[Rule]", "\"Integer32\""}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledCodeFunction[<|
   "Signature" -> TypeSpecifier[{} -> "Integer32"], "Input" -> 
    Compile`Program[{}, 
      Function[{}, 
       Array`ElementTypeID[
        TypeSpecifier["Integer16"]]]], "ErrorFunction" -> Automatic, 
    "InitializationName" -> 
    "Initialization_3a18fe06_c5e0_44ae_8abc_2ec48dac5ede", "ExpressionName" -> 
    "Main_ExprInvocation", "CName" -> "Main_CInvocation", "FunctionName" -> 
    "Main", "SystemID" -> "Linux-x86-64", "VersionData" -> {13.2, 0, 0}, 
    "CompiledIR" -> <|"Linux-x86-64" -> ByteArray[CompressedData["
1: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
        "]]|>, "orcInstance" -> 69221088, "orcModuleId" -> 68907360, 
    "targetMachineId" -> 68680784|>, 140172117327984, 140172117327888, 
   140172117327952, 140172117327872, "{} -> \"Integer32\""],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.879558847474146*^9, 3.8795588507917128`*^9}, 
   3.879558955790506*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"fa37d849-4799-4118-90ea-50e8dc6311e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cf", "=", 
  RowBox[{"FunctionCompile", "[", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"Typed", "[", 
      RowBox[{"expr", ",", "\"\<InertExpression\>\""}], "]"}], ",", 
     RowBox[{"Array`ElementTypeID", "[", "expr", "]"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8795623019596663`*^9, 3.879562311471848*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"dd6b32fe-89e3-46b8-82b8-bdc93e7dc571"],

Cell[BoxData[
 TemplateBox[{
  "Compile", "err", 
   "\"\\!\\(\\*InterpretationBox[\\\"\\\\\\\"TypeError. Cannot find a \
definition for the function \\\\\\\\!\\\\\\\\(\\\\\\\\*RowBox[{\\\\\\\\\\\\\\\
\"Array`ElementTypeID\\\\\\\\\\\\\\\"}]\\\\\\\\) that takes an argument with \
the type InertExpression.\\\\\\\"\\\", StringForm[\\\"TypeError. Cannot find \
a definition for the function `1` that takes an argument with the type `2`.\\\
\", Array`ElementTypeID, \\\"InertExpression\\\"], Rule[Editable, \
False]]\\)\"", 2, 37, 1, 21851023783835187223, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.879562311816107*^9},
 CellLabel->
  "During evaluation of \
In[37]:=",ExpressionUUID->"90e1a646-be15-4b10-9f32-37edfec05fe1"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Failure",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"Cannot find a definition for the function \
\\!\\(\\*TagBox[\\\"Array`ElementTypeID\\\", Function[Short[Slot[1], 5]]]\\) \
that takes an argument with the type \
\\!\\(\\*TagBox[\\\"\\\\\\\"InertExpression\\\\\\\"\\\", \
Function[Short[Slot[1], 5]]]\\).\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"TypeError\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"Cannot find a definition for the function \
\\!\\(\\*TagBox[\\\"Array`ElementTypeID\\\", Function[Short[Slot[1], 5]]]\\) \
that takes an argument with the type \
\\!\\(\\*TagBox[\\\"\\\\\\\"InertExpression\\\\\\\"\\\", \
Function[Short[Slot[1], 5]]]\\).\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"TypeError\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All, Automatic}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Body\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{"{", 
                    
                    RowBox[{
                    "Array`ElementTypeID", ",", "\"InertExpression\""}], 
                    "}"}], HoldForm], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Stack\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{"{", "}"}], HoldForm], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Exception\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox["\"LookupNotFound\"", HoldForm], "SummaryItem"]}]}, {
              
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Constraint\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                    RowBox[{
                    TagBox["LookupConstraint", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    GraphicsBox[
                    InsetBox[
                    FormBox[
                    StyleBox["\"LookC\"", 
                    GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
                    TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], 
                    Axes -> False, AspectRatio -> 1, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    PaneBox["\"name: \"", ImageSize -> {90, Automatic}], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["Array`ElementTypeID", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    PaneBox["\"type: \"", ImageSize -> {90, Automatic}], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["TypeArrow", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GraphicsBox[
                    InsetBox[
                    FormBox[
                    StyleBox["\"TyArr\"", 
                    GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
                    TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], 
                    Axes -> False, AspectRatio -> 1, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}, 
                    ImageSizeCache -> {27., {0., 10.}}], Frame -> True, 
                    FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    PaneBox["\"arguments: \"", ImageSize -> {90, Automatic}], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "\"InertExpression\"", "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    PaneBox["\"result: \"", ImageSize -> {90, Automatic}], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"v200708\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GraphicsBox[
                    InsetBox[
                    FormBox[
                    StyleBox["\"TyArr\"", 
                    GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
                    TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], 
                    Axes -> False, AspectRatio -> 1, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}, 
                    ImageSizeCache -> {27., {0., 10.}}], Frame -> True, 
                    FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    PaneBox["\"arguments: \"", ImageSize -> {90, Automatic}], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "\"InertExpression\"", "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    PaneBox["\"result: \"", ImageSize -> {90, Automatic}], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"v200708\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    PaneBox["\"arguments: \"", ImageSize -> {90, Automatic}], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    InterpretationBox[
                    RowBox[{
                    TagBox["TypeConstructor", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], ButtonFunction :> (
                    Typeset`open$$ = True), Appearance -> None, 
                    BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GraphicsBox[
                    InsetBox[
                    FormBox[
                    StyleBox["\"TyC\"", 
                    GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
                    TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], 
                    Axes -> False, AspectRatio -> 1, ImageSize -> Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    PaneBox["\"name: \"", ImageSize -> {90, Automatic}], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"InertExpression\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    PaneBox["\"kind: \"", ImageSize -> {90, Automatic}], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"*\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Automatic}}}, AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], ButtonFunction :> (
                    Typeset`open$$ = False), Appearance -> None, 
                    BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GraphicsBox[
                    InsetBox[
                    FormBox[
                    StyleBox["\"TyC\"", 
                    GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
                    TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], 
                    Axes -> False, AspectRatio -> 1, ImageSize -> Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    PaneBox["\"name: \"", ImageSize -> {90, Automatic}], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"InertExpression\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    PaneBox["\"kind: \"", ImageSize -> {90, Automatic}], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"*\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    PaneBox["\"implements: \"", ImageSize -> {90, Automatic}],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\"MemoryManagedBase\"", ",", "\"Partable\"", 
                    ",", "\"RangeIterable\"", ",", "\"ExpressionBased\""}], 
                    "}"}], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Automatic}}}, AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    
                    TypeFramework`TypeObjects`TypeConstructor`\
TypeConstructorObject[], Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    PaneBox["\"result: \"", ImageSize -> {90, Automatic}], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["TypeVariable", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    GraphicsBox[
                    InsetBox[
                    FormBox[
                    StyleBox["\"TyVar\"", 
                    GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
                    TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], 
                    Axes -> False, AspectRatio -> 1, ImageSize -> Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    PaneBox["\"id: \"", ImageSize -> {90, Automatic}], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["200708", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    PaneBox["\"name: \"", ImageSize -> {90, Automatic}], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Variable[3]\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    PaneBox["\"kind: \"", ImageSize -> {90, Automatic}], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"U\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Automatic}}}, AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    GraphicsBox[
                    InsetBox[
                    FormBox[
                    StyleBox["\"TyVar\"", 
                    GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
                    TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], 
                    Axes -> False, AspectRatio -> 1, ImageSize -> Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    PaneBox["\"id: \"", ImageSize -> {90, Automatic}], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["200708", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    PaneBox["\"name: \"", ImageSize -> {90, Automatic}], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Variable[3]\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    PaneBox["\"kind: \"", ImageSize -> {90, Automatic}], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"U\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Automatic}}}, AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    
                    TypeFramework`TypeObjects`TypeVariable`\
TypeVariableClassName[], Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    TypeFramework`TypeObjects`TypeArrow`TypeArrow[], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    PaneBox[
                    "\"monomorphic: \"", ImageSize -> {90, Automatic}], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    GraphicsBox[
                    InsetBox[
                    FormBox[
                    StyleBox["\"LookC\"", 
                    GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
                    TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], 
                    Axes -> False, AspectRatio -> 1, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    PaneBox["\"name: \"", ImageSize -> {90, Automatic}], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["Array`ElementTypeID", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    PaneBox["\"type: \"", ImageSize -> {90, Automatic}], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["TypeArrow", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GraphicsBox[
                    InsetBox[
                    FormBox[
                    StyleBox["\"TyArr\"", 
                    GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
                    TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], 
                    Axes -> False, AspectRatio -> 1, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}, 
                    ImageSizeCache -> {27., {0., 10.}}], Frame -> True, 
                    FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    PaneBox["\"arguments: \"", ImageSize -> {90, Automatic}], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "\"InertExpression\"", "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    PaneBox["\"result: \"", ImageSize -> {90, Automatic}], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"v200708\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GraphicsBox[
                    InsetBox[
                    FormBox[
                    StyleBox["\"TyArr\"", 
                    GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
                    TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], 
                    Axes -> False, AspectRatio -> 1, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}, 
                    ImageSizeCache -> {27., {0., 10.}}], Frame -> True, 
                    FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    PaneBox["\"arguments: \"", ImageSize -> {90, Automatic}], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "\"InertExpression\"", "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    PaneBox["\"result: \"", ImageSize -> {90, Automatic}], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"v200708\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    PaneBox["\"arguments: \"", ImageSize -> {90, Automatic}], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    InterpretationBox[
                    RowBox[{
                    TagBox["TypeConstructor", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], ButtonFunction :> (
                    Typeset`open$$ = True), Appearance -> None, 
                    BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GraphicsBox[
                    InsetBox[
                    FormBox[
                    StyleBox["\"TyC\"", 
                    GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
                    TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], 
                    Axes -> False, AspectRatio -> 1, ImageSize -> Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    PaneBox["\"name: \"", ImageSize -> {90, Automatic}], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"InertExpression\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    PaneBox["\"kind: \"", ImageSize -> {90, Automatic}], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"*\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Automatic}}}, AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], ButtonFunction :> (
                    Typeset`open$$ = False), Appearance -> None, 
                    BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    GraphicsBox[
                    InsetBox[
                    FormBox[
                    StyleBox["\"TyC\"", 
                    GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
                    TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], 
                    Axes -> False, AspectRatio -> 1, ImageSize -> Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    PaneBox["\"name: \"", ImageSize -> {90, Automatic}], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"InertExpression\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    PaneBox["\"kind: \"", ImageSize -> {90, Automatic}], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"*\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    PaneBox["\"implements: \"", ImageSize -> {90, Automatic}],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{"\"MemoryManagedBase\"", ",", "\"Partable\"", 
                    ",", "\"RangeIterable\"", ",", "\"ExpressionBased\""}], 
                    "}"}], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Automatic}}}, AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    
                    TypeFramework`TypeObjects`TypeConstructor`\
TypeConstructorObject[], Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    PaneBox["\"result: \"", ImageSize -> {90, Automatic}], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    InterpretationBox[
                    RowBox[{
                    TagBox["TypeVariable", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    GraphicsBox[
                    InsetBox[
                    FormBox[
                    StyleBox["\"TyVar\"", 
                    GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
                    TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], 
                    Axes -> False, AspectRatio -> 1, ImageSize -> Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    PaneBox["\"id: \"", ImageSize -> {90, Automatic}], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["200708", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    PaneBox["\"name: \"", ImageSize -> {90, Automatic}], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Variable[3]\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    PaneBox["\"kind: \"", ImageSize -> {90, Automatic}], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"U\"", "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {"Columns" -> {{
                    Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    GraphicsBox[
                    InsetBox[
                    FormBox[
                    StyleBox["\"TyVar\"", 
                    GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
                    TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], 
                    Axes -> False, AspectRatio -> 1, ImageSize -> Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                    Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    PaneBox["\"id: \"", ImageSize -> {90, Automatic}], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["200708", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    PaneBox["\"name: \"", ImageSize -> {90, Automatic}], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Variable[3]\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    PaneBox["\"kind: \"", ImageSize -> {90, Automatic}], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"U\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Automatic}}}, AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{
                    Top}}}, AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    
                    TypeFramework`TypeObjects`TypeVariable`\
TypeVariableClassName[], Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    TypeFramework`TypeObjects`TypeArrow`TypeArrow[], 
                    Selectable -> False, Editable -> False, 
                    SelectWithContents -> True], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    PaneBox[
                    "\"monomorphic: \"", ImageSize -> {90, Automatic}], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    TypeFramework`LookupConstraint[], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], HoldForm],
                   "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Source\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   TagBox[
                    RowBox[{"Array`ElementTypeID", "[", "expr", "]"}], 
                    HoldForm], HoldForm], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Failure[
  "TypeError", <|
   "MessageTemplate" -> 
    "Cannot find a definition for the function `1` that takes an argument \
with the type `2`.", 
    "MessageParameters" -> {Array`ElementTypeID, "InertExpression"}, 
    "Body" -> {Array`ElementTypeID, "InertExpression"}, "Stack" -> {}, 
    "Exception" -> "LookupNotFound", "Constraint" -> 
    TypeFramework`LookupConstraint[], "Source" -> HoldForm[
      Array`ElementTypeID[$CellContext`expr]]|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.879562311979435*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"184f1db7-ba29-49cd-8fdd-7acff4c55b05"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cf", "[", "]"}]], "Input",
 CellChangeTimes->{{3.879558956479477*^9, 3.879558956799704*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"886fa53e-03ab-41b7-9cee-830bcdde29a2"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.8795589570162153`*^9},
 CellLabel->
  "Out[111]=",ExpressionUUID->"016ecd38-849d-4df5-a490-ac6999856eb9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"$LibFFIPaths", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\</usr/local/opt/libffi/lib/libffi.dylib\>\"", ",", 
     "\"\</Users/christopher/git/ForeignFunctionInterface/LibFFIInterface/\
libFFIInterface.dylib\>\""}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.875111659843287*^9, 3.875111660376637*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"717bdaab-9941-4fbd-a6fa-e0c91b132952"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayDepth", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.879560882310382*^9, 3.87956088514872*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"92e4175a-08a2-4d31-94dc-45ca4264c9eb"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.879560885400447*^9},
 CellLabel->
  "Out[113]=",ExpressionUUID->"5869a946-dd36-41e0-89f0-6bba349f0d83"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BuildCompiledComponent", "[", "\"\<ForeignFunctionInterface\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.875111675194558*^9, 3.875111680888213*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"5a53b24a-253c-4f51-9ba0-cff76e7e6442"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Success",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[Checkmark]\"", 
              Directive[
               RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
               25], StripOnInput -> False], ContentPadding -> False, 
             FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Component\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["CompiledComponent", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionInterface\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Declarations: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["14", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionInterface\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Declarations: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["14", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"LibraryFunctions: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"InstalledFunctions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["4", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"ExternalLibraries: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"LoadingEpilogs: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   CompiledComponent["ForeignFunctionInterface"], Selectable -> 
                   False, Editable -> False, SelectWithContents -> True], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"BuildDirectory\"", "\": \""}, "RowDefault"],
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                 "\"/Users/christopher/Library/Mathematica/SystemFiles/\
LibraryResources/MacOSX-x86-64\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[Checkmark]\"", 
              Directive[
               RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
               25], StripOnInput -> False], ContentPadding -> False, 
             FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Component\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   RowBox[{
                    TagBox["CompiledComponent", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionInterface\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Declarations: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["14", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionInterface\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Declarations: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["14", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"LibraryFunctions: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"InstalledFunctions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["4", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"ExternalLibraries: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"LoadingEpilogs: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   CompiledComponent["ForeignFunctionInterface"], Selectable -> 
                   False, Editable -> False, SelectWithContents -> True], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"BuildDirectory\"", "\": \""}, "RowDefault"],
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                 "\"/Users/christopher/Library/Mathematica/SystemFiles/\
LibraryResources/MacOSX-x86-64\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Artifacts\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  
                  RowBox[{
                   "{", "\"/Users/christopher/Library/Mathematica/SystemFiles/\
LibraryResources/MacOSX-x86-64/ForeignFunctionInterface.dylib\"", "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"BuildTime\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "28.800129`", "\"s\"", "seconds", "\"Seconds\""}, 
                   "Quantity", SyntaxForm -> Mod], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"ComponentBuilt\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Success[
  "ComponentBuilt", <|
   "Component" -> CompiledComponent["ForeignFunctionInterface"], 
    "BuildDirectory" -> 
    "/Users/christopher/Library/Mathematica/SystemFiles/LibraryResources/\
MacOSX-x86-64", 
    "Artifacts" -> {
     "/Users/christopher/Library/Mathematica/SystemFiles/LibraryResources/\
MacOSX-x86-64/ForeignFunctionInterface.dylib"}, "BuildTime" -> 
    Quantity[28.800129, "Seconds"]|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8751117273269567`*^9, 3.875116364733918*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"e7337443-bf32-4f7c-9b0d-bd762c6b3daf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LibraryLoad", "/@", "$LibFFIPaths"}]], "Input",
 CellChangeTimes->{{3.8751117820877542`*^9, 3.875111784587751*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"6822b9c5-c6eb-4b02-b4bb-5bd2faf851c5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"/usr/local/opt/libffi/lib/libffi.dylib\"\>", 
   ",", "\<\"/Users/christopher/git/ForeignFunctionInterface/LibFFIInterface/\
libFFIInterface.dylib\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.8751117878315268`*^9, 3.875111926982335*^9, 
  3.875116379188814*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"5838798d-80c1-4bea-b8da-71643606e3e3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cif", "=", 
  RowBox[{"CreateCallInterface", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"GetFFITypeDouble", "[", "]"}], "}"}], ",", 
    RowBox[{"GetFFITypeDouble", "[", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.875111751738647*^9, 3.875111753303316*^9}, {
  3.8751118700303164`*^9, 3.875111880029891*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"b6ff6953-a0d6-4512-bcdd-6b0a43ca482e"],

Cell[BoxData["1"], "Echo",
 CellChangeTimes->{
  3.875116380154716*^9},ExpressionUUID->"0ef44b34-73a1-4c6e-bfa7-\
9e46c97b9e05"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TypeProduct", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Managed`FFICallInterface\"", "SummaryItem"]}]}},
                 GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                   False], TraditionalForm], {0, 0}], Background -> 
                GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Managed`FFICallInterface\"", "SummaryItem"]}]}},
                 GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"], 
       DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "DataStructure[Managed`FFICallInterface, $Failed]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.875111754004624*^9, {3.875111789045143*^9, 3.87511179169925*^9}, 
   3.875111880365109*^9, {3.875111936466016*^9, 3.875111939273471*^9}, 
   3.875114468756194*^9, 3.87511638017947*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"f892d583-7f86-44b2-93a8-a1446e6cd4e8"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ExecuteCall", "[", 
  RowBox[{"cif", ",", "3.0"}], "]"}]], "Input",
 CellChangeTimes->{{3.875111893609564*^9, 3.875111899752399*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"17aa63bf-a276-42c8-9b05-5e8dee7f755d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cf", " ", "=", " ", 
  RowBox[{"FunctionCompile", "[", 
   RowBox[{
    RowBox[{
    "CompiledComponent", "[", "\"\<ForeignFunctionInterface\>\"", "]"}], ",", 
    "\n", "\t", 
    RowBox[{"FunctionDeclaration", "[", 
     RowBox[{"ExecuteCall", ",", "\n", "\t\t", 
      RowBox[{
       RowBox[{"Typed", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "\"\<Managed\>\"", "::[", "\"\<FFICallInterface\>\"", "]"}], ",", 
           " ", "\"\<CDouble\>\""}], "}"}], " ", "->", " ", 
         "\"\<CDouble\>\""}], "]"}], "@", "\n", "\t\t", 
       RowBox[{"Function", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"cif", ",", "val"}], "}"}], ",", "\n", "\t\t\t", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"valPtr", ",", " ", "outPtr", ",", " ", "in"}], "}"}], 
           ",", "\n", "\t\t\t\t", 
           RowBox[{
            RowBox[{"in", " ", "=", " ", 
             RowBox[{"CreateTypeInstance", "[", 
              RowBox[{
               RowBox[{"\"\<Managed\>\"", "::[", 
                RowBox[{
                "\"\<CArray\>\"", "::[", "\"\<OpaqueRawPointer\>\"", "]"}], 
                "]"}], ",", "1"}], "]"}]}], ";", "\n", "\t\t\t\t", 
            RowBox[{"valPtr", " ", "=", " ", 
             RowBox[{"Cast", "[", 
              RowBox[{
               RowBox[{"ToRawPointer", "[", "val", "]"}], ",", 
               "\"\<OpaqueRawPointer\>\"", ",", "\"\<BitCast\>\""}], "]"}]}], 
            ";", "\n", "\t\t\t\t", 
            RowBox[{"ToRawPointer", "[", 
             RowBox[{"in", ",", "0", ",", "valPtr"}], "]"}], ";", "\n", 
            "\t\t\t\t", 
            RowBox[{"outPtr", " ", "=", " ", 
             RowBox[{"TypeHint", "[", 
              RowBox[{
               RowBox[{"ToRawPointer", "[", "]"}], ",", " ", 
               RowBox[{
               "\"\<RawPointer\>\"", "::[", "\"\<CDouble\>\"", "]"}]}], 
              "]"}]}], ";", "\n", "\t\t\t\t", 
            RowBox[{
             RowBox[{"LibraryFunction", "[", "\"\<ffi_call\>\"", "]"}], "[", 
             RowBox[{"cif", ",", 
              RowBox[{
               RowBox[{
               "LibraryFunction", "[", "\"\<get_fun_pointer\>\"", "]"}], "[", 
               "]"}], ",", 
              RowBox[{"Cast", "[", 
               RowBox[{
               "outPtr", ",", "\"\<OpaqueRawPointer\>\"", ",", 
                "\"\<BitCast\>\""}], "]"}], ",", "in"}], "]"}], ";", "\n", 
            "\t\t\t\t", 
            RowBox[{"FromRawPointer", "[", "outPtr", "]"}]}]}], "\n", 
          "\t\t\t", "]"}]}], "\n", "\t\t", "]"}]}]}], "\n", "\t", "]"}]}], 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.875112048645359*^9, 3.875112071379945*^9}, {
  3.875112135070367*^9, 3.875112272196589*^9}, {3.875112510618655*^9, 
  3.875112563574188*^9}, {3.875112596632564*^9, 3.875112599766076*^9}, {
  3.875112667999118*^9, 3.875112713244575*^9}, {3.875112788329323*^9, 
  3.875112865499859*^9}, {3.875114117766852*^9, 3.875114314764282*^9}, {
  3.8751144279474688`*^9, 3.875114459455206*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"4d6f3468-90ad-4d29-bd4a-784e572b491e"],

Cell[BoxData[
 TemplateBox[{
  "FindLibrary", "badfile", 
   "\"The specified argument, \\!\\(\\*RowBox[{\\\"$LibFFIPaths\\\"}]\\), \
should be a valid string or File.\"", 2, 6, 1, 21845550757513714883, "Local"},
  
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.878726604594936*^9},
 CellLabel->
  "During evaluation of \
In[6]:=",ExpressionUUID->"efe826a2-1cc3-444f-9819-71339de5bf4f"],

Cell[BoxData[
 TemplateBox[{
  "Compile", "err1", 
   "\"The library \\!\\(\\*RowBox[{\\\"$LibFFIPaths\\\"}]\\) could not be \
found.\"", 2, 6, 2, 21845550757513714883, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.878726604652164*^9},
 CellLabel->
  "During evaluation of \
In[6]:=",ExpressionUUID->"2acbe30c-da8c-4a70-b4fb-2633a6e52d4f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Failure",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  
                  TemplateBox[{"\"MessageTemplate\"", "\": \""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                   "\"The library \\!\\(\\*RowBox[{\\\"$LibFFIPaths\\\"}]\\) \
could not be found.\"", 
                    StringForm[
                    "The library `1` could not be found.", \
$CellContext`$LibFFIPaths], Editable -> False], HoldForm], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  
                  TemplateBox[{"\"MessageParameters\"", "\": \""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{"{", "}"}], HoldForm], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox["\"CompilerException\"", HoldForm], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  
                  TemplateBox[{"\"MessageTemplate\"", "\": \""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                   "\"The library \\!\\(\\*RowBox[{\\\"$LibFFIPaths\\\"}]\\) \
could not be found.\"", 
                    StringForm[
                    "The library `1` could not be found.", \
$CellContext`$LibFFIPaths], Editable -> False], HoldForm], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  
                  TemplateBox[{"\"MessageParameters\"", "\": \""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{"{", "}"}], HoldForm], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox["\"CompilerException\"", HoldForm], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Details\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox["None", HoldForm], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Exception\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                  "CompileUtilities`Error`Exceptions`CompilerException", 
                   HoldForm], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Body\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"The library `1` could not be found.\"", ",", 
                    "$LibFFIPaths"}], "}"}], HoldForm], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Stack\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{"{", "}"}], HoldForm], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Failure[
  "CompilerException", <|
   "MessageTemplate" -> 
    StringForm[
     "The library `1` could not be found.", $CellContext`$LibFFIPaths], 
    "MessageParameters" -> {}, "Details" -> None, "Exception" -> 
    CompileUtilities`Error`Exceptions`CompilerException, 
    "Body" -> {
     "The library `1` could not be found.", $CellContext`$LibFFIPaths}, 
    "Stack" -> {}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.875114449298498*^9, 3.875114468649727*^9}, 
   3.875116395560482*^9, 3.878726604665626*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"95637cbb-6450-4c38-8d65-3e54e941c539"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RepeatedTiming", "@", 
  RowBox[{"cf", "[", 
   RowBox[{"cif", ",", "3.0"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8751144668200502`*^9, 3.875114469287005*^9}, {
  3.875116447153076*^9, 3.875116448533873*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"46fe4879-1003-4638-99e4-27c8a9e5ba01"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.196549415588379`*^-7", ",", "0.1411200080598672`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.87511640358115*^9, 3.8751164059255447`*^9}, 
   3.875116450148778*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"e2cdbd61-53ca-4932-878e-f8e390039e59"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cf2", " ", "=", " ", 
  RowBox[{"FunctionCompile", "[", 
   RowBox[{
    RowBox[{
    "CompiledComponent", "[", "\"\<ForeignFunctionInterface\>\"", "]"}], ",", 
    "\n", "\t", 
    RowBox[{"FunctionDeclaration", "[", 
     RowBox[{"ExecuteCall", ",", "\n", "\t\t", 
      RowBox[{
       RowBox[{"Typed", "[", 
        RowBox[{
         RowBox[{"{", "\"\<CDouble\>\"", "}"}], " ", "->", " ", 
         "\"\<CDouble\>\""}], "]"}], "@", "\n", "\t\t", 
       RowBox[{"Function", "[", 
        RowBox[{
         RowBox[{"{", "val", "}"}], ",", "\n", "\t\t\t", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "argTy", ",", " ", "argTys", ",", " ", "valPtr", ",", " ", "cif", 
             ",", " ", "outPtr", ",", " ", "in"}], "}"}], ",", "\n", 
           "\t\t\t\t", 
           RowBox[{
            RowBox[{"argTy", " ", "=", " ", 
             RowBox[{
              RowBox[{
              "LibraryFunction", "[", "\"\<get_ffi_type_double\>\"", "]"}], 
              "[", "]"}]}], ";", "\n", "\t\t\t\t", 
            RowBox[{"argTys", " ", "=", " ", 
             RowBox[{"CreateTypeInstance", "[", 
              RowBox[{
               RowBox[{"\"\<Managed\>\"", "::[", 
                RowBox[{"\"\<CArray\>\"", "::[", "\"\<FFIType\>\"", "]"}], 
                "]"}], ",", "1"}], "]"}]}], ";", "\n", "\t\t\t\t", 
            RowBox[{"ToRawPointer", "[", 
             RowBox[{"argTys", ",", "0", ",", "argTy"}], "]"}], ";", "\n", 
            "\t\t\t\t", 
            RowBox[{"in", " ", "=", " ", 
             RowBox[{"CreateTypeInstance", "[", 
              RowBox[{
               RowBox[{"\"\<Managed\>\"", "::[", 
                RowBox[{
                "\"\<CArray\>\"", "::[", "\"\<OpaqueRawPointer\>\"", "]"}], 
                "]"}], ",", "1"}], "]"}]}], ";", "\n", "\t\t\t\t", 
            RowBox[{"valPtr", " ", "=", " ", 
             RowBox[{"Cast", "[", 
              RowBox[{
               RowBox[{"ToRawPointer", "[", "val", "]"}], ",", 
               "\"\<OpaqueRawPointer\>\"", ",", "\"\<BitCast\>\""}], "]"}]}], 
            ";", "\n", "\t\t\t\t", 
            RowBox[{"ToRawPointer", "[", 
             RowBox[{"in", ",", "0", ",", "valPtr"}], "]"}], ";", "\n", 
            "\t\t\t\t", 
            RowBox[{"cif", " ", "=", " ", 
             RowBox[{
              RowBox[{"LibraryFunction", "[", "\"\<create_ffi_cif\>\"", "]"}],
               "[", "]"}]}], ";", "\n", "\t\t\t\t", 
            RowBox[{
             RowBox[{"LibraryFunction", "[", "\"\<prepare_ffi_cif\>\"", "]"}],
              "[", 
             RowBox[{"cif", ",", 
              RowBox[{"Typed", "[", 
               RowBox[{"1", ",", "\"\<UnsignedInteger32\>\""}], "]"}], ",", 
              "argTy", ",", "argTys"}], "]"}], ";", "\n", "\t\t\t\t", 
            RowBox[{"outPtr", " ", "=", " ", 
             RowBox[{"TypeHint", "[", 
              RowBox[{
               RowBox[{"ToRawPointer", "[", "]"}], ",", " ", 
               RowBox[{
               "\"\<RawPointer\>\"", "::[", "\"\<CDouble\>\"", "]"}]}], 
              "]"}]}], ";", "\n", "\t\t\t\t", 
            RowBox[{
             RowBox[{"LibraryFunction", "[", "\"\<ffi_call\>\"", "]"}], "[", 
             RowBox[{"cif", ",", 
              RowBox[{
               RowBox[{
               "LibraryFunction", "[", "\"\<get_fun_pointer\>\"", "]"}], "[", 
               "]"}], ",", 
              RowBox[{"Cast", "[", 
               RowBox[{
               "outPtr", ",", "\"\<OpaqueRawPointer\>\"", ",", 
                "\"\<BitCast\>\""}], "]"}], ",", "in"}], "]"}], ";", "\n", 
            "\t\t\t\t", 
            RowBox[{"FromRawPointer", "[", "outPtr", "]"}]}]}], "\n", 
          "\t\t\t", "]"}]}], "\n", "\t\t", "]"}]}]}], "\n", "\t", "]"}]}], 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.875112048645359*^9, 3.875112071379945*^9}, {
  3.875112135070367*^9, 3.875112272196589*^9}, {3.875112510618655*^9, 
  3.875112563574188*^9}, {3.875112596632564*^9, 3.875112599766076*^9}, {
  3.875112667999118*^9, 3.875112713244575*^9}, {3.875112788329323*^9, 
  3.875112865499859*^9}, {3.875114117766852*^9, 3.875114314764282*^9}, {
  3.875116452134877*^9, 3.875116457126405*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"d0909e88-78b8-4727-9982-08d2a3667691"],

Cell[BoxData[
 TemplateBox[{
  "FindLibrary", "badfile", 
   "\"The specified argument, \\!\\(\\*RowBox[{\\\"$LibFFIPaths\\\"}]\\), \
should be a valid string or File.\"", 2, 7, 3, 21845550757513714883, "Local"},
  
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.878726612457839*^9},
 CellLabel->
  "During evaluation of \
In[7]:=",ExpressionUUID->"d30a27c1-4be1-4f7e-bc4c-4948e7057f17"],

Cell[BoxData[
 TemplateBox[{
  "Compile", "err1", 
   "\"The library \\!\\(\\*RowBox[{\\\"$LibFFIPaths\\\"}]\\) could not be \
found.\"", 2, 7, 4, 21845550757513714883, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.87872661246938*^9},
 CellLabel->
  "During evaluation of \
In[7]:=",ExpressionUUID->"e7d9ee50-4f57-4579-a784-8e3237239f4a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Failure",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  
                  TemplateBox[{"\"MessageTemplate\"", "\": \""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                   "\"The library \\!\\(\\*RowBox[{\\\"$LibFFIPaths\\\"}]\\) \
could not be found.\"", 
                    StringForm[
                    "The library `1` could not be found.", \
$CellContext`$LibFFIPaths], Editable -> False], HoldForm], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  
                  TemplateBox[{"\"MessageParameters\"", "\": \""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{"{", "}"}], HoldForm], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox["\"CompilerException\"", HoldForm], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  
                  TemplateBox[{"\"MessageTemplate\"", "\": \""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   InterpretationBox[
                   "\"The library \\!\\(\\*RowBox[{\\\"$LibFFIPaths\\\"}]\\) \
could not be found.\"", 
                    StringForm[
                    "The library `1` could not be found.", \
$CellContext`$LibFFIPaths], Editable -> False], HoldForm], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  
                  TemplateBox[{"\"MessageParameters\"", "\": \""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{"{", "}"}], HoldForm], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox["\"CompilerException\"", HoldForm], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Details\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox["None", HoldForm], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Exception\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                  "CompileUtilities`Error`Exceptions`CompilerException", 
                   HoldForm], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Body\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{"{", 
                    
                    RowBox[{
                    "\"The library `1` could not be found.\"", ",", 
                    "$LibFFIPaths"}], "}"}], HoldForm], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Stack\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{"{", "}"}], HoldForm], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Failure[
  "CompilerException", <|
   "MessageTemplate" -> 
    StringForm[
     "The library `1` could not be found.", $CellContext`$LibFFIPaths], 
    "MessageParameters" -> {}, "Details" -> None, "Exception" -> 
    CompileUtilities`Error`Exceptions`CompilerException, 
    "Body" -> {
     "The library `1` could not be found.", $CellContext`$LibFFIPaths}, 
    "Stack" -> {}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.875114326032526*^9, {3.875116456093404*^9, 3.8751164670727663`*^9}, 
   3.8787266124813223`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"8fc8c35a-514b-4a49-a318-2a19edc51714"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RepeatedTiming", "@", 
  RowBox[{"cf2", "[", "3.0", "]"}]}]], "Input",
 CellChangeTimes->{{3.875114296018721*^9, 3.875114298377718*^9}, {
  3.8751164604138727`*^9, 3.875116466609832*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"08210330-54b5-4b01-8d8d-b5f054ef27d1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4.0986919403076174`*^-7", ",", "0.1411200080598672`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8751143281430807`*^9, 3.8751143296896048`*^9}, {
  3.875116469938472*^9, 3.875116473973885*^9}},
 CellLabel->"Out[49]=",ExpressionUUID->"83447073-78b4-4c7e-8f38-caa8c4093b44"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cf", "=", 
  RowBox[{"FunctionCompile", "[", 
   RowBox[{
    RowBox[{
    "CompiledComponent", "[", "\"\<ForeignFunctionInterface\>\"", "]"}], ",", 
    
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"Cast", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"LibraryFunction", "[", "\"\<get_fun_pointer\>\"", "]"}], 
         "[", "]"}], ",", "\"\<UnsignedInteger64\>\"", ",", 
        "\"\<BitCast\>\""}], "]"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8751122753229113`*^9, 3.87511230896459*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"f57dca11-d202-414d-948c-742a8ec1ad82"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledCodeFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GraphicsBox[
             InsetBox[
              FormBox[
               StyleBox["\"Code\"", 
                GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                False], TraditionalForm], {0, 0}], Background -> 
             GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {27., {0., 10.}}], Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Signature: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", "}"}], "\[Rule]", "\"UnsignedInteger64\""}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GraphicsBox[
             InsetBox[
              FormBox[
               StyleBox["\"Code\"", 
                GrayLevel[0.7], Bold, 8.267999999999999, StripOnInput -> 
                False], TraditionalForm], {0, 0}], Background -> 
             GrayLevel[0.93], Axes -> False, AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}, ImageSizeCache -> {27., {0., 10.}}], Frame -> 
             True, FrameTicks -> None, FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.55]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Signature: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", "}"}], "\[Rule]", "\"UnsignedInteger64\""}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledCodeFunction[<|
   "Signature" -> TypeSpecifier[{} -> "UnsignedInteger64"], "Input" -> 
    Compile`Program[
      CompiledComponent["ForeignFunctionInterface"], 
      Function[{}, 
       Cast[
        LibraryFunction["get_fun_pointer"][], "UnsignedInteger64", 
        "BitCast"]]], "ErrorFunction" -> Automatic, "InitializationName" -> 
    "Initialization_0eca7cbd_190f_4e14_a32d_4fb3e93e0ac7", "ExpressionName" -> 
    "Main_ExprInvocation", "CName" -> "Main_CInvocation", "FunctionName" -> 
    "Main", "SystemID" -> "MacOSX-x86-64", "VersionData" -> {13.2, 0, 0}, 
    "CompiledIR" -> <|"MacOSX-x86-64" -> ByteArray[CompressedData["
1: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
        "]]|>, 
    "ExternalLibraryPaths" -> {
     "/usr/local/opt/libffi/lib/libffi.dylib", 
      "/Users/christopher/git/ForeignFunctionInterface/LibFFIInterface/\
libFFIInterface.dylib"}, "orcInstance" -> 140238374927456, "orcModuleId" -> 
    140238374921216, "targetMachineId" -> 140238383693824|>, 4517376112, 
   4517376016, 4517376064, 4517376000, "{} -> \"UnsignedInteger64\""],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.875112285186467*^9, 3.875112309478325*^9}},
 CellLabel->"Out[14]=",ExpressionUUID->"ec0a54ce-99db-44d0-96d9-1ac1dd48da37"]
}, Open  ]],

Cell["\<\
int main() {
\tdouble out;
\tvoid* in[1];
\tffi_type* argTys[1];
\tdouble inVal = 3.0;
\tin[0] = &inVal;

\tffi_type* argTy = get_ffi_type_double();
\targTys[0] = argTy;

\tffi_cif* cif = create_ffi_cif();
\tprintf(\"%d\\n\", prepare_ffi_cif(cif, 1, get_ffi_type_double(), argTys));
\tffi_call(cif, sin, &out, in);

\tprintf(\"%lf, %lf\\n\", out, sin(inVal));

\treturn 0;
}\
\>", "Program",
 CellChangeTimes->{3.875112109644897*^9, 
  3.875112784070249*^9},ExpressionUUID->"9acf54ce-7adf-4152-95d7-\
e50d07af809d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Compile`CompileToIR", "[", 
   RowBox[{"Compile`Program", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
      "CompiledComponent", "[", "\"\<ForeignFunctionInterface\>\"", "]"}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"FFIType", "[", 
        RowBox[{"LiteralType", "[", "\"\<Integer8\>\"", "]"}], "]"}]}], 
      "]"}]}], "\[IndentingNewLine]", "]"}], "]"}], "[", "\"\<toString\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.87822958607241*^9, 3.878229681515359*^9}, {
  3.878229759550765*^9, 3.878229762894094*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"cda46893-f6e2-40b5-a1db-ad444b22ac91"],

Cell[BoxData["\<\"\\!\\(\\*StyleBox[\\\"Main\\\", FontColor -> \
RGBColor[0.269, 0.538, 0.356], FontWeight -> Bold, FontVariations -> \
{}]\\)\\!\\(\\*StyleBox[\\\"::Information=\\\", FontColor -> GrayLevel[0.4], \
FontWeight -> Plain, FontVariations -> \
{}]\\){\\\"unmangledName\\\"->\\!\\(\\*RowBox[{\\\"Automatic\\\"}]\\), \
\\\"inlineInformation\\\"->{<|\\\"inlineValue\\\" -> Automatic, \\\"isTrivial\
\\\" -> True|>}, \\\"ArgumentAlias\\\"->\\!\\(\\*RowBox[{\\\"False\\\"}]\\), \
\\\"Profile\\\"->\\!\\(\\*RowBox[{\\\"False\\\"}]\\), \\\"AbortHandling\\\"->\
\\!\\(\\*RowBox[{\\\"Automatic\\\"}]\\), \
\\\"Exported\\\"->\\!\\(\\*RowBox[{\\\"True\\\"}]\\)}\\n\\!\\(\\*StyleBox[\\\"\
Main\\\", FontColor -> RGBColor[0.269, 0.538, 0.356], FontWeight -> Bold, \
FontVariations -> {}]\\) : \\!\\(\\*StyleBox[\\\"()\[Rule]FFIType\\\", \
FontColor -> RGBColor[0.66, 0, 0], FontWeight -> Bold, FontVariations -> \
{}]\\)\\n\\!\\(\\*StyleBox[\\\"start(1)\\\", FontColor -> RGBColor[0.9, 0.5, \
0.2], FontWeight -> Plain, FontVariations -> {}]\\):  \\n\\!\\(\\*StyleBox[\\\
\"2\\\", FontColor -> GrayLevel[0.8], FontWeight -> Plain, FontVariations -> \
{}]\\)\\!\\(\\*StyleBox[\\\" |\\\", FontColor -> GrayLevel[0.9], FontWeight \
-> Plain, FontVariations -> {}]\\)\\t\\!\\(\\*StyleBox[\\\"%14\\\", FontColor \
-> RGBColor[0.269, 0.538, 0.356], FontWeight -> Bold, FontVariations -> \
{}]\\):\\!\\(\\*StyleBox[\\\"F\\\", FontColor -> RGBColor[0.66, 0, 0], \
FontWeight -> Bold, FontVariations -> {}]\\) = \
\\!\\(\\*StyleBox[\\\"Call\\\", FontColor -> RGBColor[0.6, 0.4, 0.4], \
FontWeight -> Bold, FontVariations -> {\\\"Underline\\\" -> True}]\\) \
\\!\\(\\*StyleBox[\\\"ForeignFunctionInterface`LibFFI`InterfaceLibrary`\
Private`rawFFIType[\\\\\\\"Integer8\\\\\\\"]\\\", FontColor -> \
GrayLevel[0.4], FontWeight -> Plain, FontVariations -> \
{}]\\):\\!\\(\\*StyleBox[\\\"()\[Rule]F\\\", FontColor -> RGBColor[0.66, 0, \
0], FontWeight -> Bold, FontVariations -> {}]\\) [] \
\\n\\!\\(\\*StyleBox[\\\"3\\\", FontColor -> GrayLevel[0.8], FontWeight -> \
Plain, FontVariations -> {}]\\)\\!\\(\\*StyleBox[\\\" |\\\", FontColor -> \
GrayLevel[0.9], FontWeight -> Plain, FontVariations -> \
{}]\\)\\t\\!\\(\\*StyleBox[\\\"Return\\\", FontColor -> RGBColor[0.6, 0.4, \
0.4], FontWeight -> Bold, FontVariations -> {\\\"Underline\\\" -> True}]\\) \
\\!\\(\\*StyleBox[\\\"%14\\\", FontColor -> RGBColor[0.269, 0.538, 0.356], \
FontWeight -> Bold, FontVariations -> {}]\\) \\n\"\>"], "Output",
 CellChangeTimes->{{3.87822967911471*^9, 3.8782296836119947`*^9}, 
   3.8782297650902042`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"0e273c3f-11cf-401e-9cad-93ed74f677a9"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Notes", "Section",
 CellChangeTimes->{{3.883236057760434*^9, 
  3.8832360581523943`*^9}},ExpressionUUID->"f01c9054-21ae-48c4-a6ec-\
7b7be419e37f"],

Cell[CellGroupData[{

Cell["01-20-2023", "Subsection",
 CellChangeTimes->{{3.883236065613955*^9, 
  3.883236067584844*^9}},ExpressionUUID->"fc68d7db-3959-4eaa-a6df-\
f531758f8fc2"],

Cell[BoxData[
 RowBox[{"CreateForeignFunction", "[", 
  RowBox[{"\"\<RAND_bytes\>\"", ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<OpaqueRawPointer\>\"", ",", "\"\<CInt\>\""}], "}"}], "->", 
    "\"\<CInt\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.883233524089295*^9, 3.883233527613269*^9}, 
   3.883233561779293*^9},
 CellID->489580890,ExpressionUUID->"e67d84f7-9763-4dd2-a72e-49db0d2f41a1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"randBytes", "=", 
  RowBox[{"CreateForeignFunction", "[", 
   RowBox[{"\"\<RAND_bytes\>\"", ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<OpaqueRawPointer\>\"", ",", "\"\<CInt\>\""}], "}"}], "->", 
     "\"\<CInt\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.883232515416285*^9, 3.88323253740182*^9}, {
  3.883233257694964*^9, 3.883233260250983*^9}},
 CellLabel->"In[22]:=",
 CellID->1966699715,ExpressionUUID->"0034ef88-7cbe-4bcc-98b1-ca383dbb4982"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TypeProduct", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
                  TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
                  TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"], 
       DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "DataStructure[ForeignFunctionObject, $Failed]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.883233260609034*^9},
 CellLabel->"Out[22]=",
 CellID->1214796430,ExpressionUUID->"c5ae93e0-665b-43e3-a63d-722f830e6d1b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"buf", "=", 
  RowBox[{"NumericArrayToBuffer", "[", 
   RowBox[{
    RowBox[{"NumericArray", "@", 
     RowBox[{"ToCharacterCode", "[", "\"\<hello there\>\"", "]"}]}], ",", 
    "\"\<UnsignedInteger8\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.883233441570068*^9, 3.8832334647794647`*^9}, {
  3.883233672096423*^9, 3.88323367255518*^9}},
 CellLabel->"In[28]:=",
 CellID->1856934654,ExpressionUUID->"2f587dd4-a1ec-476d-9985-619951318a67"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["OpaqueRawPointer",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["140419901864800", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GridBox[{{
               TagBox["\"address: \"", "SummaryItem"]}, {
               TagBox["140419901864800", "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ChristopherWolfram`ForeignFunctionInterface`OpaqueRawPointer[
  140419901864800],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8832334654461203`*^9, 3.88323367308704*^9},
 CellLabel->"Out[28]=",
 CellID->1090191562,ExpressionUUID->"0e8d4796-af93-46c8-97ee-b8bb5133f37e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"genBytes", "[", "n_", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"buf", "=", 
      RowBox[{"CreateManagedExpression", "[", 
       RowBox[{
        RowBox[{"CreateBuffer", "[", 
         RowBox[{"\"\<UnsignedInteger8\>\"", ",", "n"}], "]"}], ",", 
        "DeleteBuffer"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"CallForeignFunction", "[", 
      RowBox[{"randBytes", ",", 
       RowBox[{"{", 
        RowBox[{"buf", ",", "n"}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"BufferToNumericArray", "[", 
      RowBox[{"buf", ",", "\"\<UnsignedInteger8\>\"", ",", "n"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.883234947008071*^9, 3.883234987226082*^9}},
 CellLabel->"In[56]:=",
 CellID->333736608,ExpressionUUID->"8d3614a8-0f87-4f7f-9a4c-c366122a2d1f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"genBytes", "[", "1000000", "]"}], "//", 
  "RepeatedTiming"}]], "Input",
 CellChangeTimes->{{3.883234974562181*^9, 3.8832350187444057`*^9}},
 CellLabel->"In[61]:=",
 CellID->2048723663,ExpressionUUID->"749df91b-02dc-419a-ab49-85330bd141f4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.00034065478515625`", ",", 
   InterpretationBox[
    RowBox[{
     TagBox["NumericArray",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"UnsignedInteger8\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "1000000", "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"UnsignedInteger8\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "1000000", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Data: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{
                    "239", "\", \"", "69", "\", \"", "201", "\", \"", "244", 
                    "\", \"", "50", "\", \"", "\"\[Ellipsis]\""}, 
                    "RowDefault"], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    CompressedData["
1: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
5FkNuQIMa48/RuTGX4cMeikMxJ+Vduzs3zTdTNyk/f1JZ+8m9USxrCkZ1zAQ
J61kjOC4k2McHcULZlNSTPPdqJvFi1miSBgmPFmzQb07qhChDwddDvzjU7DX
9+tVkLyqYtKW5ObrQW/X+zU8/LU+67Dd2+XVKYP9QP42fTuio+m4cdenuGnU
nj18B0PmYcJ3pLIBMPuShY0MsK84z5MASG/fFOEM5qWZNAlKSVIpsmNx0hGi
ZWFfhq7wyJqfK2DPQ2b7pzXwWa/4UR7aB2cS6PuTsNuNzLxX4xki16FusKbS
PY31m52KHouf3OzoLWRb+c/z6b/zu7syv/JbLjmyFSuY0ytVI8/3dbSI/gLr
NFW2gqfKruBXVzllnjxtNjTj6n1XZzxk3EXuGS9Rl38sy4gfFeiQHXw/OWgG
J3LsSTjcSWaF/bbjs0CSlFoEWh+NS1qqWJJtWIuuiTXqgP/DmIrd34D90eX3
PkSvlbo6PclxquphdmE1Vh4tQr7+K30TIDWLSaezwn/aRoW9Ex6Q2MHF2WyO
0i24duSNS9vID7cCXOWEjqxua8cNTzpEA1lAHfOiD5x/AuWxMLHBYvzO5qyR
60raLuSaRfCzjqMrQp2996UpsM510GJFrLIIZHU7OTR4mQlyloejY4e9AiGE
P/sIjjvZat7Y0+GfwuUcWCOKjUV1TEXIEy+LoATHRrydQpL+XkPWaFAVRb9Q
O+DH7912Mnnz2n5gvPKdST+FwqKA26yIt7Jn3bCNK22iY4Pqp/MYHFXd9Vz8
aGospbQafwCIVlDUQnXHW6HTajDp7ZdZgyeawqpK6GrlCnS7NMTD81blVyQt
qxopHW156Q+u3bplthAex2gBLAagq0FRKFUQ6gkG9/V4tEL1i3YY8pTwf8+R
V1uFtG1TtM6vvvogExAbXiExaJicZS+QdLS+RUGAZoPitRnUJx3QB81rZc+m
UK4JGuXKDCxmC0Z4OOTPxP6uECLKsI9iZ0t+GpPrbJ3iUc9AeDJng0j4xBpp
G2UhYwj9989vAAhJeREm+qBDURh2S74Myj1m1rPIIQbDuf249fFJyVBknd3O
c0YElRyE6XmSl04Zy4ii67w3uUyiR5+mgTHYbkkG1dHaCLoT6fNsiq7awrDh
6iYOwuWo+SyfprHIzghFOVm1q7WmFs4k9jryNPtdMHWqmt/VhLqtIqWlzLae
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
Pgqq7bQfV6JMW0ynbtzz6eHZrUqRS6Bq1D3PPZRpIvC1SiE+s1Hu/5U026Ae
cEfKHw+XmAOx0b1MA2bEIThfw4dYKHZmBuIiPEOdVvnk24IOCAhaSO/BOpFG
yRsp2B34PqJ6di86+z5/fEpTc2SelYxqgm/PdRZGeJ52ySI8qRvQqOqHGUfN
SzbkI/lSGk8bJbN79ds/d7trCntqZdxx5S7Ww/qCPn6hIOi/xT5IeM9daONS
XaxeMo4Icxv51PxL6aLEjQlKQviaq9E//cO0wXEEa7QZFHfXKhtDbJvZEpP6
smrLOS86LA98UyUym+cIPKkXP2YHRwFOkZ98l2yTYgs637nj0SNzGdjAgY1F
zfpHxZouj1SR5quZydK7bXKqSksODII0oFLVGt8epy3Rd9trQjBcv/rXgf0f
Eqn48lBcI94XJdF5jgnWC8LBWfITEE+YaS3tEBmqCZ4Vg39tEvJq+RCprzUn
2D7YpEryJRj2kUmDfFBClRUZEzAwCNlfPuDUf0uufjWaRutALpoIfYGkwqXL
s9fdwvcn9eU7rd04sT4jU4smalyOuhd2tWcar2/arnutQ8D9AXI6tKbLjmd3
927NeXUa6bJbnO5+y29Gtho3dOv5InrbYjO3rju3iRQlYRfRJiBiDFTipJdR
58TUV8lcoZQmwH//G4I8FevnDZmmJ2g39bja/itEcb6Hf0HT9Lc3qW9DR1vn
RftPXVVVVzHFWrXRGF+yAvCMF6hKMTOaRFlHqZ7UQDoy2SsKF/AOfQ4Vi90y
bjTq2MfM0a1pdzPgc9H0rm74/Kl2h+6ug5OVRMWzARc+F5wufmmftYYvwHAD
rbR5+BamxLtNYG5kXotONCKz9d/3jinudsImfH6ac5ZX5SN9zcI4UKXUZGHE
o9mkj/03RF+PhU3CKQpO2lE4U3fxpy3juaz67hg2TJ5oZo09Wyj5xLarvZlS
L3cu/WQvIXqoWFegW4BiKV+jL+x//YWO3A1rQvLDqQ0ZAgvNjfMaxt4WpJGL
6H9fclN2i58WOAUfxanT5jvJI77NevygQ5iLiHICrmtmVUR7cX5HDk7rTIeP
tdVZPaFKU3ZkdCnDzpCryg1I4D6IDwWzlmBPATW7Akood0L7FsK/ZV3HSaPA
IG7gAjLi+F9hs02Mgg8/+QmC3Zgh0yNLBanOgYhUMB0zcmiM1LC9+3EjnUdm
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
redt8ON0Kop93+0nfpWRbZ48QB/0m4Ak3fDRCejPxyrlGK/gLyu3ZAEzV1Ll
J3d6xJQlsvoxzd7tMJ3E0yRA/Vr6PJGOLzUV8RsnLhU2+WbjlPnJ+Xp9nQyC
9ItsuFZt2aDgAghwzAef4OT4QAG5OTD1odDAQMauv+1OaQ2lLzWzm3IaOm70
JCpsI52PYGn5l9w/FN86hvdvUVCKxytSM2t7D6j1BGdV8ax4cc6cbLZEFmjB
NvV1URpj4O6RzIDZ9n6CJI9BDj9BnXoD0HvVh4B7LtCvw/eETcD8YyjWSaMR
tVU3aJYv6aScX7Ns1dmh29zHgremUR/uLhkWFWpibuHWjVHghadYXtGc6NT7
/qG/FnzJXlB4kRhU+h4akj2queATch5Hadrn9sZNY6SlwhWsnd0ANLxFITnu
rQeZdMGapvNbPSQ2p42jMaxF1BMETJPJJdD7RGKcJBymZ4HCVxtkjCuDFgpW
lH4nXGpYRSAToyhe43T3//fkhJNa1hnlgdToxHuQLRo3wYhTQ1fiWVyije8U
kKqxjKFMUJppWph25HDUNkhwvXSxKRvv4fJTnYK1urVo0zArrvjnMKRNC85a
dYGyvZL3bhK4K6FCggoV/4K0kNVo+3yHRMfuGzwax/hCGeR5XEGhKAqW/SVt
nWwZvU1Ax6yGYOyP3uO9kolpb50i6TXnI/kVpxU11fK0byZw56J57yIKb1dK
jQKEK7NwZQG4GyqaUqQ96xCxfqLRVYmPrO1gAi/cqS96q2cjKRfPpNSQSWYN
94THLiIhQChLJ3gF8QoLQs7J3gZK8LHcj1pCHjkQQSjkvemaVSBh7KbmkwFU
ND5CEfirwKiV/RlfpK0wPkIT+Ui1n6E19boJx0xIOrxThod8md5khUD1VH2f
h0PC35RmJZ61TX5w7KudIxZ3PK8oZn1J3hBQWAMkwhj3G3mNfVmXpYoqApMM
R6GSXXykK6u+HYgyVBul7r9qdu+E3slBpbKk08RNiTU9tbw8+W40D7/f8ZUp
uaPT3YjBJnrCdl5WAWxEakjl0kusG+I9eaugEEBfPKvdK3hSASZ56tQHGpCX
YcBoDgH1/jRUfz47m62G5y0RwCmOVfGgWnUdSQi9yTRuyUZ4K6hUZLARPboM
60Xr74vRgawPCVVQO9bCSiE/2JRWK6rUsBn/fslhwNjLHop8Wy6K9XOF+w8S
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
sozpI7/rDhBkWypRet2KD73j9KuAg4ASlDjOrUReWEOmJu967piIpm8Y84Nf
n2xT4TvAK3p3DJR/UNJNVNbEpt9oFeKqTwSOVh9NkeisTddX+WvlOGKKT5Pu
+7IpBum5toQVPrVjboCSG/m9djYZiZUCYsvVx6ZGbEznWC4yhQyKzJ9POmbU
aPomR1XAy+M+fGjy3c06A9KoCyyFlJ6oDfXVoWfp+EbFXhtCwK0a7LXyblBh
7DO6PYsSRHVouiubsdlLgFPKNiAw9MVmAmuHzeuotzKfBEJ8VndG7rt7YtX3
CD1h34oyEmSy7eDOwTuwAjwTuqjcKSFfJG3LLez6+NreQ3QBYkGBdPz3QKpl
kevhgyz7Wv6M1N5ozKlOixtqewjCR/medAypThVTp8jSHfz2e3VB6P+mJV8C
Mnn/g8XD9k13QjkVz8yCEi4OtzrM6Yntl/rhgllOxXayyqIW7mNPCSupLDNI
bX+aEbIlDsLwTvIVvVJ89MzoNJvwJ6sRx9BrR1VSpcOiiZqRQ96DD7B8qxhq
fJx2v6ONh1HkUJ9jT4YB/DFWc+uIo616wNtsu3pYKNofnQ23D5PczxC7UcCl
h+NKlzaZaVeIVudDt9TstPEBoouJA0XoL8X9wl4Bal2ZewFP+fBMwhzne9oW
FCfdbOFbOmdQesqYjimHiV6BPwP0fMqimIBen9HNxiJbpixD3OronkN5FU7A
fiEUFvgUp1yLPWW7AwbU4fN+eupWUrfi/1oiZbIcnMttQekfEFOetHOqIHrj
+e1ELXomRxi0JijfYt1Hpt3jA5dvhZ12QgSrRypzkyy0NKcwttKLlbUPbMlu
LaiHn/ETjNVIuEPRL0Hm3gAIrzwePl6cfyoBtA2pCyNy5QoXty5vvOgBQIa7
+XRJw36mx84+b5ue6t4J3kWfjR7B1NFuEvyEt8EQLyJkzZg6cqjEnd/IqWtY
OYpeKI0dGn+o5kNl8MdYWTvgeirCIq2OCxMVTwAVBtWcsYKlr14YE3lx21OY
g+2wx0eMCBHbNDLbFitfD4YcSbhj/n2SRBUB5XQR9JMKGjx13bqGPchewapV
I2OurM+ijtD8c9nd1zuVoroGWGp5BXfXSpt0fAmwgJT4mrXYCJIH8dWYB+R7
iaJyOOtkbUaNVVNGVPOgoP811aAhavqjkJ9Mfou16DSIQpJ/OpsjNOnV6SdV
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
LqPHKqFFPfUu/VzwtcnIhislVUitUYeTbZBQGKokWLspHiEXF3zHyLANJ6Z5
SQtkfYB+rfK5/T5LTZxI4lB4tWpOK5Fb6BWwSJvLAhqI1+MLlMBOFFzdpJyh
csd3L/9gHpnN54bJALssg6NDmWuJ/zZ32NmwHsib1br8rLDlaZxQJTBNk6Jl
dqBQu9eci5gBgx+Ra5m/RHWlhXZSf5UhblJeZ1tQRSU1W1yfn0xBfGVPo8Ez
LubcKM0FtTF6Jp3vu59ex22hpSO0kUn/Cn1yJ3gxLTtKqMsUdk4PgQBLensE
in6B0FSaYBjPYRItgrrNE8hgptIA632Ip4z3tgPwcu8pEEUovUUzNVBKi+45
yl3fGWXjk5ejdvjbVZacbgFwR2vInMWqB8KZFUwMdCxYN4qoE3xf+0wdegsI
x9vb+9Jt5QWDG25g3dNSvKrp+e0rc6zW7Zlon+U6ji9eZqmVKo/Y0fFzbgXf
HW0kH1KdQfPF2aV1v/S1/CIcZE378Dg3CgxpPbRUryVl76B/dAOkb+y+U1o7
mItGpZjAOWyu8bF1joL+MjzxzUfnPs9AKI/PoUj6GIpL4h1+wb3RYl0C2HCL
kuA+Wy1DoTK8ZD/rAlXr2v+CY3+O+29x1G3X2xJdZod+9Up5BEV2TWtXP1j1
i4pi3EYZHdQOm1tW1olYmppkANvFG9aYOztbQTBcwEKAZaffAev1WhC1QuO1
6bapHQz03Hs/V0XgTLfNzLMqvKfjqxSA6yOlgeSHR6dIFzInQ9moxziXpClw
5xVXfJ+gJ963Xz0pGZA62Pqo1DA0rG9uf7d3zoTLCm89UGGveGwuCU/lB15c
nrgB2pBznwPCoB2C83ZPYQV2umEo7ZmXU7wSbq6DooGdne8GMiz7Xs3JvwOu
c3u9qSyiN7ZcSA6lAWPak/wjmQnfvon7raihq4xFCLEflYqGBEOOUw4/VVQ5
nCRcW35N67bQq8HiDaNhM/th5gFasDtZcKpOPjo++VAPiuNcPMDUUjQ/Ze8X
iaHOiuh93/ndUsgSnAfH5T3dz/DUIgJ1onIrVbHQNXadDyTtTIm8t1ZenQ2v
hJnbSGs24vh8rBpLTOiqzTV5xucSp1Csf7k+avj4GaivIcHoTmUg+BBemv/g
MdL3T/8s1rLT3YQvKSF4MpF78sQXZtw4hX4Zq5yE+XbnrOQbY4Zf1wMui0Hw
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
z/uahSbms0SGVogqc9WM5ftBqqLc7ziPbsLl41HuTeQbOyiWqv6uvIiHpBns
mLkn3Bei57z4MLGR330Zw8ZJHwd/1ndFdUpJ5w0d/kHu+SNREUikZzhW5xca
VYmwr4qwG9zokrQnOj47qxqZZbsZmMzdHbaWdmrnD0OmoEoE2MqM2flEn2Oj
kXeDFXOE4FnTph3Mo5HFFO1WktPDvokjyNfU67DVRpyHTGe8D6gW+tvRYmK0
k/wM2ohsRQAAp18RLR4uE3RbggWZguQ3KagVb/GZLlXSKYt1hQQwwCqRjnKy
7BRdqbwRW+sNJ70LhU5ax9BJR/nx6UrGIo1C5103c7uXeauV9YSBoVSfLnvk
f83ZwgpCCNynmjeYL1buOuPfJAaGaujrNpNi0h1+iGp1kgrfhwqJSk8du5cT
N9UuW0I1mFmzVzcRJLM2ktnHhRY9hRDcedVmu9tv0pf8oD6ri6OU0zrEiUtM
Mb2SUy3CL+j5C6Ea29Wv8ygO2yxdGxbJuJtGei3+U9CwNUeDrjSfnd7T8gQ7
RdLEOpm9Vl215nRcmulPUVF4AUsL8uHyTSxGDOpNwKOkLhsmXckWg363Uz7o
pWGGfa00iN2/7MtTIJiXOa+A7Vdwn7FibxGD/UnYyKOViIMCeXbhA9FK20Vn
4DH2BOPXYJrpzbaFPY3FBa3UJxkRql8LkatxITjVzspxZX4yi+bxuA1JrLUS
CM8s5BlavJtCRRu3db/TfiR0A1aS5WRrWbXnIKhl0BgIWbKMAD+YcXcob2yM
vE4veF+KfvYix3K20sRHZVpEfUzqA4fEWVCHJmtfaldAgpIjVjJfgLIVlKBF
cc2CjJt1mHqy4MpRQdJzmB+KLQ15BNdER+wxGNCGlZgQIAPAcMAQw89o5e8q
hbgv6JUt0s0zw+UdZlQ9sk3EeLft5Esf0n2jRxlZRx3SDjBSUPnRipfFPKyk
VRrlX2qpJ6mSp7SbNCtqH+yqV1NWrhEW2XA54LNlt/j1lCn6137s8JH1Zibx
zCyWMUcVr6+hHxzzHw+FMPuqs4iORfBLkY9NhbTz7Fn2dQlbjad9YhpgOqvA
LmtVivSJID9hJDo0AvUIvJhD+7OyY2rS3ai0oM6s/BujEdjesF/IQjkAXMtA
DK27CqW32ukwONamCdy68OSJ7ghHPvem0pY2tucEGNVpy6PHTZSZ9T3WpeYI
r1yXBWOA6yGoSVqVcy2uQ/mmatJs5OFJ4aGgFpdhv35iI6LsHPDnomKq15Zo
BiIOjsMIaC8rYqnSif9fnI33W9h1aoLO2pf7zZVRYjRRl37yZy0witfJirlk
re2QcJDWwFiBYXJsn2iL3B7MurFOtxPKkrncwOZuJ+g5mBa3MOEaWvxR6rn2
wglBJnLJF5MTzlbkN36sIuNooPNuAq8pYkUy8gQJ/ZKAntp0Sx0+XwUlZJkW
g238GptGp0yASrat534JudhfDIp2VNiF53Hh+iiP8UEbEurYKBxQmUa8ICFF
OfSnn/GYOdBEUfA4nEhHw56pSku4MN5g05i74rcHCtDe86sB/cVEvVkuAso9
8kzN2+uZ8KTjeue1Fysn4qrfYYy9ysZtUUVmfHC2r9cWAJWnQPSlQKhmj4Sq
InyOt7OPhDfikHJ9odKMCBvJK5miz5KOqSLzuYS97pGncTJkb77MoB4NPGVQ
OygTncccKySQ0Y3C2bML0dtJXmgH5R0+pVmZCKZheHFV118ky6xmG6q2H1J7
vDnbzE56yjQZuoICYe1H1X3zz1K+3LHuf+HmVY7H3yZPj0KNoXAGvDgQBdsX
NfMvCk0iFjtXujeXwLAY9IOzF/0Bohi+j8GtvLoSX2OYxGJSmfHLeTvaGQa5
nnHXCKfuzYQDTZEqiB/WpCy07ENTX0/T0ZFekT7jmsaMAF7whXDi7XEXCIHV
7cqOA+l+pwrNs8Y4uYZ5/wPD1M7snTl6BmQlJLk/aquaRA7qpmTzEhQK71fQ
3XKxOatEWz+q/5zJx5jbYBV+pzADSckgMo8rAAi4OuwC/+se0DLQ7wiwXa8A
HfDGxAhM04mv3S2z4FvWEmW3+RiFtVy2i5Qm4W/AfPrrdRDRYahbI0xsuP9I
EFZx9ehluwWiAFaAvOmbixkIAkdqzrvo5ScI6MptRlJ4+kPqvnFOimbsZoIE
W7dmGuMouQzGYz4T5dTlC3Dv2RCYob9yOnFY5+iCORsilEvmRyvMg7dLpkWu
BUnYRxvBzf2Tm0p1syXrHbN1+6m0cGAHA7MgyyugD4iGBn1mtFFMsykK5FEc
DCo+yHQpj7rbgq8KPo2hgHLatLfjSm3rRITPvceCYOhYgilEmzIgvjWhYRZw
YoyQEIlmUf7EmT4bGfIdRcYIl2c21duYZZdDZcsRMMVtzgK5xxmIHDAPPXUa
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
dUpjIQK290niTIEtW8fDzoPWY6DJnb+8jO5Tp8efGT6itTjon+NCiTNk5r7W
Usw86hSc9TkOt6l+oToA4ptDk28ZV2tUXf5+CVPcarkxXDzcrdDId5Xu5+Lv
XrMBOMyaKD1fiJpjVZgpR21YnW8TKl4vgHqN6st5WUjFfrwwRMMt+zUSjsda
ztBeVjY/+pGtpGWxurEZkTcv/YO6ZZIXBR1y3Uk6Y2qqVyoOPWOwpiCA/6Z8
kvgCt9dMdc8GnhU6XYB3QxXhb2vA/PS424G9gKIyHF7fRyXmBfm91HzHU5oF
mXkVniOfiLiHj7rpOLVntQzbe+qiWkcdaRFtZzWP3cTHdsov2lvjxwHiJYZy
sogqL6Uqk7/UDqkNRpMZjYr2TKSM6GRM/PXm3KXGarnxS9UUKoT48oO+0+VW
3PqLrA1vtqfJG3zr/7qw/qMgwV1WheFh3sydWd2d8Vwj5VGJ0tgGVssIaHQt
6FkjWA1yrWqewjo469uf8zVPYt7jBB8onwL4zokjfg66GqQzBRFo99uMydLK
XGm4XOsfkn7r3rBEbdGCg+bARHQffeCWtXmkRw6J03Gq24BUljj8GFSKzti5
A3yCvjGAH2Lv5ev9p/JioVk5G9vFTuOniCtFisG7hnITIYAABJhcPL2QIvvZ
7iIg3mAwaKWg7NrtS3NIsMTneSlIQ4vkDvZx9u96UPzWzgRpWBCyimE9+hdz
OBri5PWA7kdFz38A1oCieNx+uJ+1PEX8lBdXSo6ezXv89zY1nz/MqKW2jKkL
+2m+KP07BOurpNJe+WF2veLs/qTN6cclyuNkDyxTV8b7ZL6sz5eRSDAjMqlW
7AFXBpi8SqNBfruAd1oMnC0Df/6DW7TDNdVlaSv2Y9AWjlMJwFeAy8JYuUQY
iHtC4Is+BkI6gDGypZLLxjLA3Ic/Mum9vAqgDS2sCJSsY3i0m1dnqf8SA/N1
Pe5urtZIBPGaTPd2n7KXDNIwjMMu0P/S6V0KAZTNdaJavl3w7724r62VqG+W
MX3u/uXRWtK7aqj2EhIm0zknRmfvJ+NhQV/lxeZGfI7OHcrS4u5BJ3ojwDSh
jFi5ny/t48ebgoCNmCZx5cwg58CQe6GeUBwBbMcIOLx7dSkGvjNLChLFFkHr
3aI7aCprZILsg5I7TPBkNqsWpAZnRXa6ctvoyOSowOY9cdJtfk9gRkIO+UT4
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
M6vLl3JBh+Mki1UB4Uo98W5GQDxDevDydkTaGv80ABYzt8OJsSkLfBNr8nE9
gEge6LDSVMOlddJ+Fy/4f9S6F/bk8+xwEy0tCzWZKWZVewV3F62w1JiRMnfD
3/1YaI1yGZlwZw6TZza4UiEmmQUNJ2D5xyQ+Qqla5maNYAk6qBmWX6goKDvZ
4VwLf/M/nUPnjYVdd/CckuOk/R1KBu08phfDHc4iOG6IjNMOruzqBUsTCi3U
VVM2ydLonRyodObXR3We2VH2SFgys0LeFIqZsQSJrQWVUxYf6qzPUReBYI/U
7n/S76FYq4oxxi3bxNjsOK/Lg7KIglW49HJwqKL535dbWNADbvj5vfCFvPES
e5c/P+InkGo/TeP/E8CUMyjhTPVkJjtcVg+tRY5GbiEPBTLHL+DpvKmEWfsS
+gR0ecG36jXdoD8Ja+CnxVMhDcJdtY7893F1P++XTdO5sN1vJskt18EMu2Tf
NZzs/e5PCtJhaYysG+gMP3BA8eaJKMuJ54SIEo2/EOKfqxmKtJL7SdzV7T1+
3btwyVHAGowyyxqQ7aV0DMdYbEsy25x7a3s65PqOuaCMZ2fMC0YbZJ327Qga
YOS+vCd0ylbSaNhFPZ1cf2rVbKiqUHRjYPeNZpAU3l8lwjOpR/2Cf4U03xOM
bxgb4BQDNj7KDvxjsiAYdaCsYmdX11OpBKb6t8Uv5LJ3AF5ohjHMhrEOVJSp
UDT2QkL/6s4bI+V8L+ewg8BvZtzIBNpsCUffoLRK3dX3IzT8E7uLtdF2JgUA
vCZHv+mYiy8a8fBX9JGLUm+WHamHfGemB4PaZ7i5EsuKSBxaEds5n42vqfbK
Jv52uKEBLGuwO8UNstB5QPFyIIghRFJFRuW9iiSUpHXX+OfL+UrZyptZh8HB
y3tI/FrEKObZJrVEbzOupyIjCFxHl1ulRrOA1e++vphxQM3YuUBG1VQGt2RF
J4g5VVliVq7z7B/eqp4BlDX7I9q9TujAjtdU4B4T5V4W2ou1G9/CgscsRUwc
QnvHBKabBz3/2IttI5dZ54ULKDDpgZO1JnYq11lOrpSPAMo9f06o1Eogwq+9
2SkG/wPaqCvU2neWUSoFfARDDmbwupnJZBM8GkGOJTAQJBFyvWLR5MbBJLWT
E2ZBM1t/QIE9TiBKAvozKH8AEEDvv6axRK6upzqctKOWDxn1JO3S5307FQLu
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
XIcK8cJuZZ8tV+AtBCrwYZgGKCCgalsziZxF0fHSzN51VsoNe4qtFr4Z4kLl
ClrigjZKiLn41IZuLZA0X5K8LtPYp5go+sWQki71IHUzjJ+WoogI5TW/wh44
dqtvMtWua5ewmewDcEHZHFTzg177cq6tTCxluu+vsDvydpZSEIvjNewnP/KZ
S+uX/0c0XvqzcIFAnlIzF3Y/f+TXU2OwnrAwF1GtC6loAdWFGCkNSWfnkVJM
eVjK6ZmQyQS8k9+E9sgcx2+phEn0Swb2Q3wZkz1Oa0xGngNoxE7dCiRR9JDg
CFdnviEF96k+PjWmoSpJ+DbawblT2pIKO3cKb+q2PCEgZcLVjeK/cBQW0efr
wsXU9ay39vC3IjSI72tQY6vGCXXFwVPxYZODqVuNciaVqRjRtPpXPsAPkiH+
zz3yvU8DfAAvN7mWvWsGRFT8XbrPsC7NAGYSnlPqTrX++1TYGqzwGpokt3F1
kKGpq5pv+3mM+lsgV2EE8ay4/Axf/T5I+t3rGyekUmcDoKWALffL9an8ahGl
NS4k6cE8ShyDyRPzEthPdh4D8w1Emlq5qCcgf7KZrTW/SV6rGW15BBu49tL5
4sNVxMc5uJExNdyVtpc8Hdkd/iZCTa04mHaUnJyMTYfz8Dta4MAtFeGjV1bh
Vo6oevVgvt6thDXBX5DWxwHt1GqKoFT+SSRj5L+VCHe0pbaCwmaUk0B73rt3
hnLVmA0ztsHgdtJqAWsWVb8jPCrHHJoQKKfV3jKZdUeGoFctDVfmBZAwklKQ
dAJCIIrGjOUhRsPWWiGYWmrXvFjnDkae7r/XNzwzO+eNqTptevz3+e+NjFTK
mLUlbzetE0Jwz4s3MOeuexpxJuWZd/Axn7kP3FjpnmnI+pYUrZqyV3kkCqKT
dkB7t/UkqmxrJmFBy5/g5JNcxk0I9F/mAAonoTARpj2Fw1UxnNRWJpEI03bg
0LJ32TiCPtR96qVOaX3N4/f9a/z+nZ3f+iLJkaZ7nppprlLzBCXHHdPdJl0A
cS3A0alHBCer2uJMZzchhk0rHSg3JojqKHrfF+jNLYS6pDPgCO4pFRev5Aqr
DzyRNjlHLlXSv5W1fPqTb3smx1n3ICo4VqH9suR0FnCwc5XC0dBeqynpVkfq
yxsFmeF1F6Tm0QExYNaPu+DIv7zWcIcU3oJBai/VA6lt7VlJ55oHLoNNbs0k
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
nA6HGzn2owbKxSwyZn17sxexwQg2SbCs1A134EV8o+n6wKzdOjttKXRZ9W5p
7NoE1phapVmJ10rnBcsGo7mFM3pTsJoaGoTGGfOn11QQuiQwSFlDOOvAURAf
GVtGPKJV0yoXQZ9buj1J7LoxTIcibHU0sSToP/PmApcU4h6o+uEg6v1Xu91Y
zRzChamBvB1hkVhHSn41zg4vKzC1RPGIxjhuRKsCrr3YmgF2Ykj0JAwW5Nln
dLS960Lhtth3rbwfBAnC2bRrnrs7imeKP9vf4JGfXyezYqntL4YOONnUI2UZ
N3T7ZriLOWQYBvPKzjrMYb1RBch4/XsyFON5vk2aewfiQHvfs55VXUjbo4TR
C1ONFZnYJxI5MleqiOgiW7Ico+RkOosH13jWafC/JQLi8PwtC9nj+2PT5d01
DZ8MIp+FxxJjxG9wY8su4+Q99ZOsMfoNRJ5U+vrBpNmgla8OzRiBuWfRlJLB
4aVTN2F3vUQqtdlzcQHMeICIALK4vnykssrRAq9vjKdd+cMIeh7BAIR5menR
vTudal5yESCc8kTSBkipbpYtP8KT8IIhEVM/UFUrNOrZFdjxnoDD+2nXkbzj
ekTS6G8pu8tv9Ks7deskF41ZoB8i17MToCb2OWJoSTGV+q8Mez5UY5LekrAN
RxZaMCbJRjKzl4l3iEkokt5SC9TyctOHtv9nRMXOinhmgs/bd6da0ZMexgia
Y6yUZiEPGtZO/x5z9SaX9biH+dTsfYFWFE7+LjwhX9wi64IEkQTdP8wcKpDD
UUZvmVbKIXhC74jZWNRhac1vhVd23N43jUJwnEOrVKjPJtmyugqjzzmI/77n
koPq273uc/ibdyMJvar4kyM663tzslIIvME8986yCrT464KF6qebyOedNWhe
HhANP/Syiss5uysHgcsjOfCuQoZ7UBh1hcdq0xaU0cE0awP38qQC8OUypMys
yMQEYPBUJ24sH6RpE040W88lHkDb85SobUnCyS0h/bDg76o7bKzBwS09fGm7
h7dfQdeIVI3Atfd98IikDcDADQXCPuHnWcicg+uRCwzHzY7j6z74fmT7/5eB
WPXiiC2TmG94TWRGL4H4R2zxf1+Y4+yFcg8tgiquTx81DfaAc5Vl5UC2sfTf
8UMJT+tAILx/skMmJeiyW7VfLEeQtndEB4h3eFMjY5P/7YZq/1+yR0YJc4NE
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
wnk770Le1/42H959J1ljJCeqJjmvlRFgRjDkkBuhXtyiwK7sFSxiuqVjWiTU
u5S1T0G8mJHi1OuEg9qbpi9Po+nCLdIVxNqzmjytKCN+UAoSRV36/bwTYKBL
OO+CSqiJOfE3GcLC4WHp44Y2pxinKlwU9LQkziCu75ECkwo8Ks5bJ6XVZoX4
IfWS1DqTDH25g88DSLdEtrGF4zitWrBJrugTW6QayD0tUJGy/YC4pVbCZtL8
wTYeqKaVYGkZlKrMGCqauQMzb8AMwGRutRvBTBjDCjtdxi4aYZez7s9ziZ6+
Zt5KOQn2d4x9jOtkiu91CpdNEZjbMkdHIekSqHquoL22AANA/L+tuarfVT8F
stoW91YCPJJskpw+NpsuNJ2NLBzCNRw4Gzy1KrqyQDkoN89N2//LSC97eFEj
kdVP2fdpj1ykSfjqUUicJI145J4MyhNyLVeuYEhAJW1MajLbeZLwbuHvnPKK
g7ufmUTI5AsjFSngNSouWk/fJyYaRaiksumeAqd1BXUYNP7fwzCoP4uaFmgP
4DNVZAFc5QD73B0aoS9ZN9tTxeaNvOWzxcZwSkHGzYvm1TRmUuLt90A4OIsE
4uTrFewbluyEjKQxM/LqeAlvut7IJYNtoN7SflWJRGXAgcttDLH0FrxYzBlV
/t7UMV3n+v3SaAJmo7SgrDjXGtmbyuCoMx5rk3lLUarLY10Oqa9uNa5VyVkm
i1zH/rgiogGxuh2PApVn9E/rAtdfNA9/0RsOkYw8bsCSoMDKG3/WTmRG1/vT
Iz9rfPcFDFT3AVRf0FYUBdRffl6tbgIEeW0JbevUwuF0dktgtZO5NtIPhLj2
uaC4JHT63rOG2Wv33tu44AkJqf8SXifSBWL1IE8YuOqUKnrdtmgUgBgYzHE4
IICAL87Vj1aeQxzzx+RlqaRzcUFvQHCNHtT+vSpnhciCyTTOTRkhzEy5Glg8
2NWE8/euXNtgle6818jt9UYrdFmOWUoiJS2lhU4Qpvw9edf8y0qaSsMyg9Zo
p2FBbuIbhJYRXEWhWqBwgdbykUf+bshtAWKs9RSJvbo3i0GY+0bx9ceQ1QkU
xMv4CfcpwyjwdYgYyIsbGDiMPwgV+Yzb+xUGyAoczezVRgQnjOmzVRmIfbC0
0JGpdI6x31LzlSBIkI2xzipJrw+HARmyzMHutUQ7b2Dgy50hyXPbkTr4Ugcy
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
FOHSVfETuEK+najQypuiQQo41ysjLxsBh/lu9pDHpYj56kF+FFY46vAdbXMF
JUDViGjHU8FhnDV137Ec3JPVP/LgsPd2j6VrTbXmKTNOPB+4euTQZf06c3fl
51cxL7oNHXeSHVAS8pfW863vZXXijFZDOXgL8MdfnLThLM0vnnkIoDrWfXFg
FdMvMA/EhnHhWYsk1owJc5/v3ZSEsHP8aMmp9MgO5MCapmgUkIrapI0Rd9Pt
nDZTXG29Zu5e4nVvELHr/CEzLQdIbl98bFlYHusKIPg5mCb+w5glXaWcT5/W
WCbMghygp+IGQrihIm3OvKX/6GLFjTlEPeQ3uXz7YmmGbaoKd5yamY1U7SzZ
naatwKgfLpkUyX0SRwwF0RNLLEOmA8EfEIxnoityhEDLqK5DXF/FuxiLqKus
8vAKpAl4nv0CWFDufUiJAccRMQv6Yi7QzumkDyzCQUsSd2MVKiIe8HUwIQwI
IQxe2pXyPDmqJ+sJv0+hGKHPelbDfFZAgC13AtlmlF88juUEUNbh3m1v2oAL
GLPU5+W1uzKCisuA4kyrWEW8qDIQSNpzikIi1oxPNPmdAZTW08Gd57UfhZue
o6UJ5HbMg3hM5TdPmb+MfyWXNFtOgis0nMXEP8aURAK7uDkYvxf+ODyyLdVN
whc9TnV3DRW4S+kMYcBx3ez0XMbXDO1aOr0iXsJ70N6020ReydLCcAKtkC+G
FD+L3gPPfZopv83DiemfuSmdBedLrbQ8FVCydyMns4xmn7r6I7mwiGjkonKS
5t6BoRHrPA588rO3rroIjTbfkn9X3iaqRQ0RG2VGXHciJvZGx6Xzud4XX+4Z
gByKqW13TSnotlrAsZkJj9jJDjOpLFMMi8i+vp0+OR3y8mlmVVSLMIWc53Am
d4OYs5XtkybGrRtS220HKz1UNCNfyZuWOLUFXy5DzqkzEwQXQ1/q7Fr0zO74
2yE6Y2vnjZJN1y0+GP0qFf+6N7NHohWOv6af/JYXseLVPI3pWYGbuYNTlMBG
AcmDlDe3Da/zxhWwTA/ziHWXrFvKP5X3/glAnaHwf4XqNrKisWMMDRaueBEz
Gwk1uSBT3IlP7enOTRL6LGgFxi2mCPPhCCCLbFe7Ccbbid4lQM4eqAbJZxNj
46XbYOiqUFz84r/jJJRnqM1GH06pEkU3+p69Y5Zx/sQ9UxiKyoViktyK9ri3
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
HHRvQlRI8+GJnwFVrPAl64V2E4esRiO/U1OULmmVdswCRCvKh4Oxupm3hFRn
tHTNS0xigKg23GKDpbCnOjOlEmyesmM9ar8o1b1ig1NKWMdaZeMGXHzeVRRm
un06kW4YVcG3cI5tWlHh5NhF/5Il4zLCp1wQiGOSYIEUZmleeki/eWQXQtYm
5SVYvQ9HMCcf9gBAUxaYoq3y6IapP4SjvXEXgxN9BuV6+0cYuyNUk5uS93pi
4Nojkeiieyyr7PIBoHdgfh1v/pKVZUcHvHOQW25ngRBHKFqBDgf9G53rEmNu
s4JClIjGH/Lgk4GW30E7OcSNo3mU0YIZe/b0w+r89bLu0oM3OA31a7lVlQnW
ifLXLJ5yi/ta5qhsX3DcfZMDWA4uXG7HSZnojue4U+CWVKUHdN7toKmz/tks
xvhfQ9TiAk6O92N18wcJNScpkR6F2G0IetkIUfidovnd1RRjjmuN8qAqDZUN
xqZJKYNRE43TzKHTHsIeevel+5uIEQZ6dQ/QxaWr+lts3+kKy/L4SAoke6fG
SydO4xtdd/toAvTjauOFMhTM69Jwm9z2jepV+pdfeVG79+CL7mmk9EfKueuv
tphhwGIUd03wk5exZ1hzW0197QPz2C05hg3ST1xJSox7yHBE3o9gBBadltxO
npQ6KVyRk+5UnLdht0corRIuoH6ikLU4n/nNV/3Ku1seRJpC5cuid+SChcys
fd/tR/1dE0slA/oK8CUB9IoGhCbV3od7UXfiwXx2yn/Pd9lOiaaLHgVDQaBw
cxVwYN8LQk7E1Zn9LW2UBNedVhRYXu1w4Ptv1tT4pqTDnrLtPcps+lyM1uvu
ZKoG8+4ixbd1Dwizlh29y9mYdgEV8dcBkCDzC+RF8vuDpEtKTcVDdd0ZZRE+
XpKiVdhDGeLlNrEfV1f/MVH9N4zlqDe7RciCbyJmHwrcHV3o24lWYEsg5wU9
kymxLDstyAlmYHgGkXCvbFkkhOZaBsracEmEHcmEs8wLzlcZ2/rkBZmUh/af
AzgWWlSIt3z8aWj4xTsYGCIxAvdLS64bsbwxBgvWG03vznlZjI1HWlfy2KMn
q9M8c2JznVaSFEtI8PCPOlj/BUAS0CYTMQHP45DPUaBE4RwoH1zIwUTSchCP
aCaLoNQPPPBqP7lNTXjg9bUr7KLitcQY2p9YWdFePtzEq16XhLovLfnt2vaN
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
rheFCOYjrjhrYd8Lylq+NusfWYwRqZMnSWc3cmhANDkJwWSePMW5HzMEgCd6
O1JCOvSRa/fgYUVaC4AcO7CaJeChEneiuzcRc7Y5WIcB6KMQUNJU2n8/sAzI
Z4FaLwAc/fFdAh3rSuXEtOcZFA5PQOfomrwaEqICu/8esoWMqzUyM37JVbPi
RC2ayrBNvSt5PDC8V2qZUYmpOnG0vyX0X/17F+9bFNCCSX7dt3dp1s2Lm6QB
4b6Wo7jifg1WiHNR3l/gpEd2iYg5vitY/18z+tn7Ip94hjQZTFroC39RwRu4
qMbTfo2xiYiZZtQLPg0ROy/AkBY7JjsMPtxQd1momv63jl5mMMBQJj795A2u
WWPuJY4qGv1eNzHeUCsdtvB8qBWVvzka2lkEMivvBmpWibd8AFxmw/Hbo9d8
NJIu2uZk0j5ChGt39iAuk6I1Ltd12RP4+XzGUgNZT6Dwz15mnKduqMIHVaSE
vWptxV8GQ9dAHLVrPSlwR/4yOKZHLNEwPNEngxdwYROwd0ciK8+Me/L6yWp+
2pph5GFB1wyBtqWBK+AfUd57/QQmBf/AjJ2q1avSWuBqBWLcZNZOwip2j7wP
ksQa+qA/YYqbPHsd/UEVVPbpldemUQ9JugE9TwXSDG7DLqW2l+zCDygrrwe8
QYymlDdvACPiZ6VVy1yK81iTzAIDIxet8EF+QqbNmhvgQTcYRHUGriyHqNtP
1K1gdU7X+FoiKyiJA7x16ZmSDHTFs/+M6U4wXWzA+mz+5Iyqk1EKr1thLRA2
cm53qnTp+6f6WP5SrPGIia5tRAe661u5VYNtyg8MUS74spq+tQP/rY/6Mjhs
T/YlweGHo+djZRRgyoa5VZDlTXJJPyyCCdM2rtbIGQBVc7NrplGRl37AsHde
kQE4Y1k1BOQQrT5s3UWlbg+D/pjjMT5OhVYLJEjtTd2xrVQ3JHS3Gjn4UmD/
kmoYsh4R1qINnAnFERuwAW/V56Fu6ZO/zda9JkHsxrgBc9BvmIo5L3RDZUQT
WqqGgZhvJmxzQZZTrPRosqL5eIWAuxoT966ZfOI/grmz2oKsEe2fcnDynjOv
slkwDlQiKciidE3Thy2ZuoPv8mmzanZ0KQrwcYn1FWcpeIbOuE/+bCjQn84m
ZjPVCxTMS/tWAgoLh7mzayPHi4BnaAdfIj8GkGpMtWRtPU8SvSBr6gKnvKmI
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
vs41HeZDmZrLUyCqPl+v/fIcoQp/jn9Ri02iKo0meis1ut/fYkCf32/XFW0y
kiLOPLH9qzAmve3mbecpCUC5qg/YCavaiE+iUO24TDYRAaxup8iAlLgYesJB
ipc/W7ersxcVXNjzYGO02abIoDj89HnkDpIRJgoTNqJNMzrcOTzKJBoZkzJf
ZbcSnQH+Pbs6VTiVZIVlyjQkH+wZntCEG979HmV03iwvzYxtyQ0dip/9pryT
V6bERsOllf7tIu4grSSF7ySElDasMUCbUs3fsCtWFy7ih1lXQO/HxtFV5KfT
tgyqUjWBv4zDSj0Mdqi2BRpOQxrQavSRnwVldj84K5RWDEioUwk3tKMytxTj
860gTd/EjXwL0vQorhgI0Rk4lpO2TRBecAdolwInX4pnOapdDsXrImJ/RyMo
QBvzAEHRfLPjf9MTBvE6ea1vouMjfnXZ0jV/3D6l9VZZ74Oyc/+1XFtWwpAu
IDWzpm7bWD1mmz4grecaQYhm/OG4ds/Zuz5nDBwM3AKyLj4yjKWizrIn+l9G
okMH9HF5DWER5851/IbQaWDu1a90s1S/PXjEWk9DtZUjcvnAE9fwql5wCqAX
wKGdLVWh/lPfaUwnZyvdFMqDiiHedIYEZsyudcnYDq/k3KVJxzeP4XEIyF6P
n4LU1+sxVDjfMFfXHr9ls6hngk8Hik8mP9glQvEUJyH1KKhO338iljarRw9p
G7rRTHBlI8odcVsC267TTYsCxiPLoobgkzLeXJz62c8DUunFoM3bx/WZ19sr
AUtNADLqMCyq6ZOH+0lGoQ3ALHIkQYrCu8AzqV/L9iYL6063IxNdR8x0rC+T
up3h80cFVRCzDy0AYsDD2B0hGr8chI981uqaQJ8h6y8dMwx9Fzqd5ZgCdHSL
k1VHH7PGPggq5/mFKGf+/8MMiGE5e2TTujqLDEFBqPDdUJGPahQjjNE6TSAW
h+bOQ5DAjy/0TJ52luSHt6BklzYYv+uPRmUHabQmvX1KloZzOubPPN4Qw0rm
/x7UiiFM+AvJldKeqOY/opbPmUwC/Y4RUXeTERBLklFJeR9J2tkCSBxu7JjA
TAE+iolmo5NLzXij08lpVV0h4YeXyr2cHOOwNPYIJXRJIk9sRvOgd1WuC8rj
B72Nyx/15hmZIMvdMY5pk+GlZw2ZAsndEUZfTOzgvr0Pn/4r3Lt/zdoakBGO
jPhgKdKSDHT69/Qt1MeIzxnZ1FyuDNGKa7vSNzNTL0r7kEcabll0V/2NIU3K
CzsqVnzmdSllxujksWPgIYORBNJXbVBB3qpEfpQm/refaOHdibY6Y8DLAEJi
lbgESW4E2TxW+f5ibWNFOyygtrDhZPOtbfeWGVKcVHksBoNRcImQbzYr86Lt
rXIQJGdSsYI5oWOFWpVoNMe6FhI8Sw1jWQLUPKu0MCbib6lK2hq7/Z/zSbmL
mnv1+xo895fQIqGSVu8PYuP/B8GHOjYMBliGSEI37cTpdETQctbNJH4qANsA
dzz912dg6ULwUdU7bnrYGWwRGKrOqfrbk2zptJ5cQatMDjvfFoDflWiCkgFg
rWCpF/4/iqMzjWLWkC4IRAtrv8PO9Yri317IbA4pYfFlQK9b7F9bOAojjHt4
kNVBm+UkIbJMkzqfPrBOF6Es/3N5iO1XYQ0l6cV8jzz5hj9wTohWUSj93IRc
5M86wAWuLOCjRPbRoz66v97vAF/qlen/331oq/1msyFGJGiHmGKzi1w5kgiQ
NLB5a/9izNCXJImDPZ8JMNRZPOnZlmoFQWUjiL1t4Fd5+z5eSDszH5E0nstY
6mXOQ854k2OD4/yFiJ4Hni4EuuS7p81g3HPCMoWQXI9sMp4zUJqMB+odYYiN
hxyclxxW+rQXxDnDeC2iQNur4wEHjMOuG4lot1uyYac+WezqsEmA6kj6HgM5
ATK2TiSiXik53dMS5qPhNz1Bu+vQDANgt8YhJ+1yfnLBEMDp0kYRuCD1zypk
6JPBljwdy1Iu4hORFPrxDRMjtDd4apahCPr9NYNi3jPjcGNOszOKriG85qw1
IDsBoxUGg+hVCo4rAByVCzxKF5EdgRXMaqwbPit1OnurkQVvO5bcbOqK+Yq+
xEMMuKAH4CLdjtid00sKHH546c/XZvTzO1W10sc7r0c9x+692t6617zJmM77
1oKXxGy1q8jPvJzUuphFuOa8jko8fFUI6ksOfSYNRgNZuQHZz6TvSyRHf/a0
uF9ZbPUGoNjT1TkOjlMGJlNEjPXZZsXpbw+G3UrvZzS/6SNUYna3w4R4Ktl2
yb79G5Rf4QCTmXMZsGvXN0QEHoujr1KB+vt+d7Ay2T3e1ggCIOG7cNhf6hGQ
Z61OcZFJFQSWt276r8WlzP7dva1lJ3SbhyUgAH1sIPqzWNK8m57zTrSMehA1
rQm25TUEVoyn0dg/qXzTSDEEuDfGXKRKKXoEdjTh9wwUI39lKOScW6CEDc0n
0vgAEK8nfOil+slXivx8zEu8FCMAIzFtK9IfgCjIlcNIlMCcmvtU/H01X9bq
Xv2R6JvdOWHzLQDxzSWNghtCTIeQFZNkXyNfuUyteMA8M+OK3ioLm0pHf7d5
WLmw2nu8wTVI4obkfM/aBSTb+pi450k747EITH7hjbgOqiC02MatvJ4ZJ9V6
2tpEBhNV9UPC7sKcYKaiOQUtXIJyR3TXUXDcjAFATFOVVKqSLH+Od+npQlje
nXvCAUzR+F/9CRQV1xTOPiVY07WWI2GTNU/dzdwKyEKnIvr5kDFs96RhaEAS
xZgWxJ49lykHsfdvhbWn+eawwuMD/+KRaWwnOF+pBXsAIrDn1Huyw2xiAv3B
i+KIgtxhZUIDgI6M9VpuFBAaeBwKV9ANPWV/TmFCt0rAwVvNFm26oZmCmGIT
qLjPfTsPFgnJG4445wublln00OdNOpMSufHBXNqgqsorPAhtFTCJranUNYvP
rV/MQQ8YxMPCQexDRv/8swS1vdmG27syOKQkTtwUpQkshqEKauoTI3H947pn
2bgElILHpvep8dyeujyH/LyjQ9KkO6hbEwdUk9TOF6O+dVsbkZgsrd/xOJjA
DejvVn91n/htpoNNsquy72CzAng8stFE/Q17kAFQSdW/wYFzKXzgfQe5SpHL
Fbmr6Z4MUDN6Nhsr5i9BAqTHbAo7LhpmW9DJFzhFctB/YzfhIfe8THIPLVn2
Kn0kB2NJp5f1eL59yGfbAe2iPO9pGuZ/nuFyRvtQYKjhg5vg6hHRY26XfaoA
Ulj0wMhwQn4MWlSvbK0zk3THCbMOKz6NHLv/Mr8HdamxxJWGe+7zQASuwFVs
uYd0I/RnbN4wUQs9/cKrnkk/hYtfr1P1eHbrovrXVCq0H2laedwCUCsjTsju
wIwXvv7d+TM9SWwJBYBJuszQ7ZmSlvZNMMbFsplxXXBN4vjXQ+MXchs7y4M0
MhoKsIiAA7TBztfHzgfRpr2OOYh9KHwGe4yu7WUU1t7SsxhC5EDvEel5Kctl
wlp+bfPsfe7govKsZiHA5Jyd335/j4fTxckiNiw/MSjBxNXilWNZINLqU+lj
UqLq5yQKWmh+NFFMs6M9K9PYi1skWfUBybqlfl83i9bE2zz+nAxWWfM2RNUS
T9degoI4ju8pqzw11WVoTVxTrD1wx0IVm4G6+zGTiGxGp1EI1qiz2bT1UOV4
j+vyg+caaZ9wPN5uvD5DwzgPZCwJWFyj+HvV6tP627yKr1OYL4/OcpQLFBpm
P2uBpIKbi8upXpGjkO8y5C0Js136rzthjwmIp1ijp9O1NGVeGC1foAsD2Z1i
AN6iqsq2uRC1TJ2RHpMkwjVN2RhkaU4ALAgyoq0mXj71UlIjr2WWz5BSycsN
lSV2B9zorMGuQzkhGEVD/ECzZJEtBmIq2i7rrR3FbN7CGnE4N78UhyVFBv3t
zDxrfHeEYlRq1g03SOs7F1W4if7RJwE2yfNaf0Ijlgzgo62Jy4PjudPyQ5AP
ItVaCCoXUeNDRsN/oSmUwP7Tvor3MGPEuhcAYpNFXag49TxDggOSdSm8smGA
H7Q1hf9UsF0oWKhUFcaUU4AcuaKBS99dhLYR2CaAU48EBSRtZqgxHmGefACs
Qwp5CMpfbWNlP/y8F3Z+o9Z9Fn6AycepOgFTgIIEaYdyIQP9IUi5RTzY8QSz
Ny0FTgsswXJNM1+sTqdwGNNPBRbgeGHQoN5LVWMqEkumEIwz2WLHmkUJ5+0L
sUl98pvTTvYzvNumdxsLaOy43Wpp+tIgCaw5nY5ra5oSaz3eXeG+CjD7wS7+
YL7ntArDb/lbAcg+OwPEEFCG8T6kIV5aYbfD9zmieqFifXg4lKWvqr9A/hRn
T5t9tPn0g25qNf8En4G82gP6lIRrTWM/8zY4CX7ZZu8ZxftSrkeYuSPwBy11
pfZ+R6XcAINVorvZSiYoNL3kHPhFfm5fvqPblE/dtDCV+dCBybEaNR9ErrrY
PCAJwn9dE2ExfAJsKvs2Q9dCNScI+NWOgSY2gX//JqP1RTtRl66ykxqJkQAV
FpRDPfKM4TN/xTmWCiLFiBC/nirJKJGis+KXfPP77HKsm1aZTZy7K1m9HNtH
0Q5fSMOHyAQgyRhmqhjKRYOGT5ylpfsbFcAd5Tu5sfTcpiEgYEu+Wi3ssSy0
/Rgs/5/domtb4K2M7h+jgc2W9ZvXxI3IEzvlhxLFSlDBf8rHIvVfpBsjZBLx
rIaT18LCxcuyw7TpyQgS9CN+cNXqoNO/2ERSRp2f+HjRFmSnmB8lPS5Z3xhf
555RtdcBs0EEEFemxm8Fj7LoATeB02O0ro74h/fDvW4vV/opg3eb0Pot3I4t
ayessEw9ggzBI7BLu+HsErD8deF6fJwlJOKqXQ/cBr3FqjV6oRWH8mvHSHlQ
HnhFlHtORDmd7ORmGLtot0prqKx2hV3RAnCJnAVmx2pJ9oVkYTaJy4qKnSht
6c2byuzeQIbTomsmTsgLRNzo9t6xFrE64MYI10i0eYDEhzSrMPulfajaRn88
YiQaNL1rmkRiT0hjF0ivZnPAzpJH6tsvKM985MfABUz63Igq3P/3UghD7mrp
vntKdCwAPVtIOCpjFiWw0VkG9w2KrBWlQ9FTwwTxcc+hlcCAiL+EGUNBXcAp
NULLTZ6bkHmy6vT6rfJdmCTj1CJFSAtGJpiIYhG6ndJQKk6zaXbbDcurLqLc
PVqVDjs2in1KSr5rQwbgM2wOcEVCdeouIoPN8WR/cGWZQk7uWTurkfCl5Hc0
YrG6v4nC3kyigt/vHrmGesUroQRnkTLE8JVrLNDTlYB/cyjqqy0s0lH4SGwk
R0keXxNYOnqk1VDODomxLiZH1WFRUFfdH8PZ94O/aR1049Y+2vXprg4aYT5x
3hItOsk8mv/C7euifGktwUDTXKwVsDkG/HJ6vwOcKPVQ9g5Tu0JwEdK5yJye
fSWsu6Mrmy7zvxasC/HZsR4cJzOP3wxRwClMfRsQ/7LyZnGl64ZGSlCdsM1/
QJNxB87OZCYEfRNuUh3Q4Hky+MObxDX8tewfHkkZLHrAMvAtkFDQcqIWDp7C
G0P7Bmwt7+vpqLYpEIvjdI52e3h/P4NDlR1Cjr4HhA4KtemWlEomKVwtqdQd
T7hlrbiigwk80BXGnWwSGastt0emBG6hS1nxZay16gL4JZ2uKzfHU8RrN1YY
cGT2ZXgTS0YXW5DNd+odZAkIiNeO6ygq8hkE9fU8hL8O1pypJGiANWBH1nqh
4sQYyzHmU5igTINfNEZc9yoGQZnIgksdJiAbskdtWLUCBANcD3FAaDL4zts+
d+9QrO73iFEnTNkWh9wByz6OHHGjoR5Pn3m4ovhc2QHRd20RgSDoIRKZQwiN
MGeoUDsM5ahlNQbIG07wqf4t6Oni261W4DvjfK/6fRSMak5ccNn8er8D+Gfa
EGmunuQgCHleDbrXWg7RFvm39Uu2J4Rj8UnMrszujyTg1Ek0271V2XAfU0dy
FkQjEP++tC1NRlJWBfmR5qHDBo8ugNuua609SHX4susaKFdh2NkIx/7AG33j
6Ubg1d4JA/CZ508E1wntZg3/A/yOM/ZUCM3aRMLq2NSym6ysRn93wD8Ny3JH
Ms8QrZUDeuwm1APRJCcncogym8q0lCiJApHtb1GUWTZByXhaUQbd6r/xXytG
xAioCxo2f6D7FEBHbHLsOE7BfI1d03DPTRE7oDPqgHcCiakI9KCvvCZUhsZm
mQG5ae9NdKWEj3O3zWemnnUM4MsMuhUk+ysZCzfsmuGFUpY6rFl9WoyHuwwu
MQcEGIx4mXqUZ8Ms31zGu01Y+wIJQqwhfCDCla10PAswWdnyANrkIUy4M2hX
MMy3vaapn4Ey0x4DZmqzP73keYRm1FTsQfo0vILyJQ9p7qqJZoBz0D6DeOzd
bYdCugfYdzzDJnJt57bgSJ1X+aewcCfaW5s5XWhleFhMC8Qn1Awhi6KoBWAh
dctyn6n69R7RZIS5y1IfATsvrk1do4InQpPUowjEe4Pdn6t6m/Xl74DvhQIj
rYGEVC9N0l+x/6pBuPsBi8lvbY5UXTM0ewVNmvjVTqqEj9dFRqB4m+lIlnMk
+NfAoUG9luUJDTa1J872FZbugJ55Nn8r7XQ+XJ+BlYkJR0AYILahvtO+Da7I
a6DV9cZJIXxD31b7rpXlbzYr0vC/f5z5WJ4M7YS6KJByjYd/Jm7KKFnwM37J
2hxc9Jaeb26GNPQUU70puOaDaur4WSeK+wRtPOqe/V+xTQKi/r9rUEb+3qQL
Ij6T6v9/wj73DFGwn+7m4HBPPD50/lW5WweitDSawp9J3yxKd/Fmn6TjDDvP
cLUM7ybrqMJlJJv5a9elN5BXf3CKprlztYuWVHJGb2rulESGuIT93CCnoJWT
itlylZ4IhvdGr1rp3Kyy9BA2Oq0ltKYMp5BwBhsn8TQBoSJK1vt5wTMPWpN/
EdKDGYilfZHqnZxR3F10XxmCrtI3wIslLORQioVTahwA3iaqHi/hOwWxIb6X
+LcyF40jhA56VVyoThy94kSEDsnj1lNMOCajBacpy+QlTzZnC05qyoCGmPj3
wjkJBbv2gdUww411YAk57H3xpvjJ42wYnKRoVZ92Yz2fx41r6XOUgXymqPg5
Ho1L1bbIHO1OA4fLKQp+NGwUBer5p4nEMgWYSO48W5TxKRLxEvlbnsJ6i6LN
5KLisxdV92rWZiDhWwLmlpawF7gWXn3OCj9rBEI9Ma5F9DG1yYUfAZQt7bxb
uFAaMVvalbIiH8zXo9q5bYof2vsWHxo0jaB0c5YmMvvQeylg65j4noRt9luh
5xIbk1UFmbMgQ69JUul40HbYbaDZBui31Gt36ozRm3+HflmAtzw6N6LcFULs
eDV3OW6wkYeTDh+UxpsHRR4FwAB32DFzyDTwH7isZQwARlEwzMlFk327b3LT
YLLIuRdJ03jfwirv4rPYuzYPzT8sAXu9SgG8nzN3a2VeccOywCnhJ8czaS9V
WbzdadWlOkTjsjsNZDL27JaGJ0EDlbPOnPy5xI1C2Z7JAzBnbYe9FsO4TW2g
TniztK90F4++I9IBy14xALO4nPKlDjUSe4NhQkdQZtvidmpw5UlSqzQ/y1RG
Rrnd0hMuVOq6DQOo7Axoylozjs84RdGVw+rfNFluELxLjhaH1dLtD/lI1B9C
PSaAoXzZ4+zcAKoCmucbxdEPobnTa98ob5ytnl58HZu1qXi4ptrpH+Jw0oS+
TJZd5JN6Xv4DOqNz5a9LsGmtCZgRXmUrru22gtnL0SwYnXBR+tWwZh8t8hb7
PiuwN26zDX2QyyGPp+YrBOghzarZHU0Wb+RCsz7n8XXd6AkE/W9XO5VCSQKb
QDoMgVzs8TCMRswQc8bFGa7h6MvSOzlrLnEduCqAiS3RytK6KFtMgab1iJdh
vO8Iu4Ek/7LyEDR3JDn+OcxktgMEFxcGHWQGWytljNwH2fxQltZooDymAbWc
TwQWH6FN7pnZsY2ZBRIgYi6wRQn8TuLoDjwlAoJbCU57VgBURMxfbSymURWK
OO2yELkw5DX8r2RNmSVrxuFxgqUvXGyoD8kGDdyY9yYMgSPKGQxOG/sdieYE
1cxYrANcbAGUwFAx+U5k2Ea1t/8RkmGEtXOukJr7SVLCKgKpFpF1MZxJijcJ
RIsdvZXn1doKd7UOtXNt2TAYX7z7J6poSMm9xqIYD5rc/9kmDX7L0E1mA4Gh
XoCHA1w5NJ0fbOUnK6FBmiWbuMg7PRqrsTqWRUdeKVw7+D3qWto2yVtnJ+Ot
kAK8qDknanQgIJXK4HW9Va8ypoVG0KQJkXa0QnAUFVjgYBimynfoKSA7rj++
bLgL9UAAPG3PD7NJDNmnYsRwKu77s4kihSqWCCi8ryJIhClBnFRPNkSXXykS
2SKhfhaBKFCL1RBaNhjLl6/sWo4OUkeWAAypcIspppUPdQB0Lus/p9caetP0
VGyoCpPUYzjKldJvpcgoEP+NnNvuFxzp7JZyPmaYU80ySm3sQO6pPsavjy7Y
7JtkREmKMInhWCqKLZjmB3uhviVNBSaqK0M/bv7wyGsZY84uMoGTozaUmqV0
ZT2NPVzAiDr1Lw4b2zrSsPwIZmcgBiX9uBanp95UOpPtixqsrVVRRnYIjVXI
H3PdMsJ/GX89VDPUyc5/gGlNGQbpGFjpw0SF5mujB5scEL0pB26MaQq9tfB3
q5IbvoHBUWoDg4uvy5ZrTUjKrP43QbnsMB2HZxa3ZyHMF+3YuVpt02+46OYh
E0R5+Sm9ulUyEZKop+8gHpGj9pXxKyoGfZK4j0tYnavpgXuRDADnpSB/U3IM
XbmDKvobJXsODKR59hheDpi+nzNyXAf4vC8Lmm3AfQ6GPli8/fucQ0uVztD6
Cew8FCyt+9c2ZXztApOMzY74/eGvGZBjjmBFggYe49FaBFXEJ/+fr/g8o09z
CpzvnnVDjFYjoA5upthWKKkL3IsnOYGZpmV47YKDWLVR/Q0RkhziIwGuLupa
LOhz2gIzkW26ygAadqpiulHx3PjzqeEDyDHxehFPc+t+CkUZsky/bNgNPZV2
I9tNZIAxKUJw+sn4vhqkrRgjazaT6maYSm+OIjUHo8SUfHdf+nllz/vwuPtE
2DVoZilP9o/aeuuXmcLP0Q3xp5kbIQfnrNNKWFl8+IeFjbQaMQR7734odPvp
QoS+Xtva/BcM5wxSuSYe1FR7qlgxMew1xKNLGQUPWKspXuIzd5L+ml5ldA3r
uvMxWXuBq9bpC77woWAczXX3xP+j+r9VRM/k0MM2tAykb+fnI6AzxFt/ZHef
lWVQZ1Bot+TnN8HaXP/coUS5BRVpna1E/pKMd0QhKD/RLWaPGVWpiaJKUpg+
JirXGylTY9qb3uZVIAsuooQIHnuh3a/BlnG7JS4DDyqQf3H9smfQTLIbObha
Jq3RfR63+jndpUdTRwIIgEUYcC6+JR3zpvNd4NEXXI0V5vvU03zcSd+hMGir
K4w/6OZdBWeHND1onOrhfXNHlgpCe0btxKNqfjfJwH5vgsZBnSe1gH9Sm94v
GWFNPI3toSxP7uoru2oLx9QyvuhA/yMyt+3XJ1KDviVMu6Ik3mLFyiaTJpE/
RJA4PFd3O3M5y6u2ZMc6hYW30imqqLhzAW6sc8El2Uvoz1yCIJ6canFDyKtF
4iiGuuumusoYWWYRDODTxL6+leTWVCdTYqUqOyUAO8BO2zCWFnlNAW/mlpdt
Mbz/dTAGPqOTstPCabxaLX95w6NiFyiSOLejKO9ei69fWwCvKsKD4+R3o51Z
L6oYH4PQihn+U6G/oqN0OOyg1WqaTW5fxHto6aZbfBTpf0HAy+CHt0AS4/E1
Zjs8qQfUJLz8rkZkUoHppa8Zo6D5VlwdTQTci4elO69JP4+fHtRTHa8aeSS9
xm7N0FMxbLxaTcq/gdD7RIa7O8C2qPNoWVF2JM7UMFW944inOrtAAErQTU0I
+PbN6tQ+TvxwH28l2gNbVlmsGpCqw6q8rPZYHU/2DmR6k1KO+gwU5VzJFlmA
PUn9YhnARDo/o4DQfZxKQsr5t2CYT2Fd5suE28I9IiP2yOCpIBrONRu9HNBZ
5I6/Ud+n7pdOBmkDD8KyywvWjTSrKFiuCj+JgIN5obZJlBmo12WJ0Md/eJOl
jUNKG5O1BWAh1hRhCMcpT4Dtr1DnjRJb96ibsqaaFODnuhWL8VPsyA7oEA7f
JhodRDeyT4OgHn/fpoMU1oeo/MZ8QNeGtba5ogF8NWkQRwRgCHQC2airo72w
17OwP81OIc/NCqdrBOYujiBo0G1kD6xUA21BW+geB1j3HLZ6F3n9GTCnQsQG
MxpK1ZQdWW6JQNI58Rk9WOYTBXx6XCCFi+theBPb5CV98x7iH6dB5aNp+gst
h3/4PWjoOb+BOZof7hXOkJPJWwF96fygEfsaG7UmyWHkpwiTvYav6PfjNpqv
GWa51itve2QGgQJ8T4YCp5p/SEA8f8s/Mi9/ru2468yOAmc37cfttEmx27d3
Aniby7MSl/AtG/TUH+6Teyq8Ia3+4PURiifTwy5lDRvXOkbhWKz63XUlezGh
/WmHmjDPUiJowjsl4cB9XI97AAc8lfNLAfKrHQ5SVVdFh6VpDqfHbmLqSIVU
LYAFBGMP/IvV33e7O2qntADA8IMulnYvlTsnyS37fiVVtL+TdlydoflueZoP
7yafuLQY9hPv0LcldGpyfqWas+CwBu1I6bYd1awPyHF3oQD3rYYj++VoBUoc
zPabT3MrH7mcHHbemkzTjD37Z2gcO+DVdXaiQ3HxKjadGVvBZDTEU4x2WxFp
jfK2H2ZF+fiNMSuaDIc3EkhY8UltBmxcjGNmGNJZ2GjJQBvFzuSL9yKr+a8h
iSE55gzwzMwHw6Vetw6tlB9Z45K9orsGp3LdlgTANCPaJvf0s7rIKu+nU+ET
t8maxhbhW8p0S/kDcSKTVJ4Ew/B2oxTGEoWufz9UaXIhw5TzscJgbU25Nwvl
4isPnjdXR7gxSIyjL3J/iD9k2AVz59L6iCv3tZ2dZD5i8g3Qvm4rUpp4CMEa
9J3rZe1zaGRy+9DCAHeLp21pBLeNGOpW52h+xZgGLUeBPiM1M599iYm+e5me
ttUcXDIsjC69we3Sq6EvAoMWLH6uXhyvcQrl52vsdnF6UxkRTm4aKSBn+Jp8
m06BblY6bLF+sx0H//HYxqo+I3wSUYrs9X4b3WqNfoMmg7bUg51+3r0mS8nR
hr3ceYNWppGRvLeyiVs7HhxZBrTWVWcR2GIn85mD2fH90Hh1si3/Udy2aWhh
S0ZkDKMgSUrmOnNWGRnD63uslNJBBaF0bS/QaY8d25UKtaiFMQZSUZ2Ubx8u
Xhft5eZWx2MrcaRlwuYZR6OpjDskDIcuAVxoqhW30QDRi1iC6ABHeGQqy3O8
CaCe6lh18BxZ3wzLG2VNX0SYFSTT1SmOpZsZeyLzGqC/iB51NEd5Hix3NYeJ
T9vlbon9OYPAlGN+2YFfphCbVIogz9mPXCxr26WU1rAa21/+XvceQNs+2jmH
anS/N0eCMspHHaMpBbhFW+RUWsNzd3PveWqeXWvicwiDsAemwCjgczCSnot8
+HCU+PSc9TxuQhxL68QabTScknVbmVa+PPW1ymc1zLuND9l7N6JlmOfbAQ+G
dg9aLvbyf/8woLHmIb0uQLMLmc648hgWB+m9AWCeu6+LlQhT7RzfJgdmMmzd
O75IoJmh+VqzLY+OBXppFXfD7zNRZ24K3y6gyT+QDM6jxF510iA7rxqSxKV6
bC1+cIbURd6jYVcu9799bv5gw+4cDfeBdhqBYMcdwBxXeIS94chHRsWBWCVJ
jo5NPGTaPyqBS7kvD2aMqd+ZNNBibbdhDucTvOzDjiTVa0kMfMkrkhn5U8Bw
eFDisOWEf9Pw3FoXu3y+kWNtbVsAoATQQk31T06Z0f9FNS/CNLlYKj1wxZfy
11fYWIacbbdqUbnEEW/NguXV/vil/RjNmxwIjjiBlhLryCgcduzLJuh8iMoq
TPtX/TE6yMr0CBAP2TQX//o9We3cts7FDQHt1Udg1BkqSMh8zZ10o0okevQX
rCPUCqnYjuiMOdgT6mYjtnWugkTZJIWTskhX/0RHHMW75g+08tqOzEBga9Eb
h0rAZHMkqVUWgU3q4U0LAdq3K3h7zkq85iYzhNlZH/CKmFjvTpO5633bf7oA
KgfNGMRvNGyDNeIcQKa/GIvJTnSLe5jJyTxdR2f8eKWZ3IYTyzysmszKFMpT
VctkvUhI5R0My+JoZVh5pi9c0x6IjBbcTA6I0A1Y5d1vFwFBssmcEbVG6lJK
LvXw8PjnEmjI6OajUdzB15sjXDeM7EBgNngW9HIWQdXn3T/Wt5ARVhejZg3r
un/tK6MglvHUCN7yET8NsousZjedEZy0uwBIiJvHlt+/bLtIGJLcRteD/XZe
wrrGxdwSMHGbb4vTzM1AQzN47rkNBbpNyMpi8QUcOruRzUviAo7dXYyncQlC
eMODf/oJLMegHesKnzcmFYWiMp+sOtfkChrIZVPxJpQsS9SgMeMmXeIjOzQw
k+0L171AwZeb2VIa44ENySigi+SpyP56hZuEvzQQee3IqevWh7arQUMpIGzQ
k0KxbBmA/wHxAIbEEEO5N5+WWP4Sy1+RTI8b0uE9kKNV0WQAGQ/jm92qaPpJ
ULCuk6vzv77kMjVa8+e9q2ufHDK2TC+oObuuWkBnybqPgWiJzkQjtPk/e9L8
x+Yilmp4ufE1ah7sKUNh1JNcJZUrOz/5yTX6GFu+Fbia+iWYZLuU3Tlj6Lml
j3Q3gocs7sVhYnW3QbhXa4jSQWuDamsb/OvkLXBtMroZWSa5fflCuSROPLeT
9Wzpj9kF39LSNLlBdhowGx/a4WLXHccvqBz1pdiwBJyoeJE5+OijF2OBIW3A
j4KTRBC7VX/VhwiM3asZUMWqrFH7c3zmQbGvCVV4XRWdKODdXq6lwXmE7nyW
Uhc3s76xfAJbYLxpq3bZ+Nv7hDSUsq1qEdklTKrvBcMbxB81i2ftwfCQ6x8i
wMg15AzYyt6O5ezUOoN/L4nnEM7XqpBuqSjHxNVwdLoFRXNwsw7zqD3yDf7o
5mFOAhwT+mZneIJs/bbBZkdjqBDXtpFfLS7BiSy6SoPl63S9YBCA3Hde3kii
d/IdRWcPdXy3uRivhtB3ISwt5MJcVHqw7ZHHuNENZnhAtbENgmnRrcfjM8ps
hpSVRBW5oGFJhco75n+JPsan0WYlHH2B9FiLeWyl+phvx71BF8aq3si8dsPo
z8YTmhRaI3KxiuMLoHgYJASlKUGA9cd5mUFAvXT/j6UEifJ5roGmUqaaPBOH
K07Yr9ZO6DvVTex9aauA3Ip19W9MlEdenKQmxDltKSmN9Z1Pn++mebY45jC1
5k4dZLGwFl2Y7C3uAWZblIBVRI3FvVbpUfYMhUuLvtjgrbkmaDOpdRSielEg
06FjtI6s1ECMsj6KXppmA4vywxl+Q/iI8JImekYvHD0/CPfo+WXqdhPhE1bv
eu5P/pKtZKhFpuel7cE8kgwv0U7WacIWvw8YhaP3bO7p9OrD/W031zW7lxKu
UyJ+QJauUgWG9UbQZPUFPsBgc2QiESE9fHap4sN6e7h8w4dNszpRscLLXvPB
o9DbctokQaXiI/v4NDvknXt5uHfoGpSwCzojzmq7to/wNFq1Uffan+q2V2TP
3hO8+FbojNuTeDdzjR0hq939OhvL85XmxKskbJGNq4ytI5pWdq4/Ly9+cOqN
Sr/7wqZ5r0E5sgBA5LZRfRjUSAGcWZAgx91xvmrRGNRHTgMSuVAxsHl82sR2
Ni190gVbUmISjE6PBWBeyTWdjsvBRkyBKNbN7L4udf3e6v98k9JoY7w4DJZ9
dV2d8SC5vhKmVvQyHq6LrlG3cszBCX+OIIuR8dzuCbrAae1Bzsn6pLwj9apr
fJwn4E+2zlWQjD5zogZzANJRe8KzZHPJ9yggxEpQ/DTAi58lyTxpG5dR5iWy
oRjiul36TCtYIkFAvEHSQNBdbI7yGZOPaQ66f3rh10buegTEm3+jqw2MvCNP
3xx2cxT6zHqpXHuNaiyHhWe0L7SgoUbAS7NwR6/ajR5m4/9z80QNOJ02rGd/
XBGmkk4iVftNsgud8CQd6/U0dGSoQl9B+P83JVv4BJQO1hd4eu8izcu17Jqo
zfIEaHkWoD0DRBXtnS8DiswJg/Y3j03aoki6GLz4vSgP2eZa6DGaT2c8Jr+5
z/EnGhBoX2CH1wwT6GuKvcmwO7MS5gft0WKh7OcEYiQzhByz9W+Kd3qX5EiW
U/K3E5uEogd4Uz9WFtgh3Sa4cWBzefwAdy0lYM62bcQLWMbjEGsQFr7C5nsf
Z6koCt9HieUI5g6CUrN1f2e6n6MsCDnUqvRdumHEY9z4pjlUA5hHOHPcrNbV
MxdLJLpANBdLyUosJ1ZEqvzDOf0XUOJhhjUXxc0d1c3fvwhum2G4ANvFeQH9
MAbfwnfDhN49myLYH2C5n6vuZx348iAQ0Vreimyfs/p6W/VvF8WXIWPtpZ78
RC75nucjR6fnuqKN2XMY9fJ7z4ctQ/UNzV98Cb7wUsxleWLeWclaLnL5T0Xs
4r6vE54oL2wi3bI/TJM9o6OIALQgyNETB/zw03DNlnqrtPfMpxfiPh6u5JaH
wS8os7JwjcQ8ZJItdsiUsDnL1wwcANtmiNQyNac9htTmvP0+dxGbNIoocCzD
3j2AoO8wSzqPOcYuytCHhlhYn20dJX59jOq1bvIM+tESMurV964hy6HPNLWQ
u+8ryqD3Z1BFd7WqYMNqdPfMbbCoJ8OkT5V8zbV9XiUZNXdJgZ5HP1fDzJ30
3SNQWWuNDAMJdMc3VN9O1BROnomqPE26D6OMoDCTVgvnzVmHPqPSaT2sxYvr
Q4fgY6gEhEDcnntr6TNoa2Wr5IYq0Wbec5vMyAwpcgm5Ku5fB66Dy3s2Lw91
F0pKU6rrKaFpqu5+p8EAO+ETRXoQH1uDXHMjhThwelp3U+EmrBNZDniTTseH
/kPINCsNcELa5qyGxmQEVcLC5PBAR3vAyKuGJHu50LHOlhKrY2pAuOpIGb5v
wn9QQl1ll1Si7qiEQaU2Bi2kamXH250ntPAHL2kaqHvVLYhiQ68RNyi4hFN3
oVvhuPINzp5cDU+vCCoMZkYn0iaRJP4ERdJa7j5hrC2/XtJsMxCa0ohBoX5J
svV1uj/Kci6BcpwsJDbfEIeZvdaEGTTIMDzFVab4gixC1SmEVUaSN5ApmLB1
4X0czIEgZrdsnu7zgGIzA2HdWhQttX6USariiAQqwrZuI5Bn0Zwo3AH9hIpZ
VqRsXq1bgQkZ1daq03mP9MLZLY1h5FxRJFObOtHpSxn4CVzc1TnYWl3gVZCx
zWPHzWAfkaPq3+n9P60kyiK4WQvaAypX+Zo5aSDAzppiz1xyXc4gpCEgh1UM
k6st3ADlod3FqjxejsCii/fRiUsoDaOSxfjyvbz261RY8Ig0CODRlL3UTPfd
PxiCp42wVdl2GS6hcXgkJ0G7z2qAKhdhsZNAHFN1qbCrVDyy1FLcKxoOgR1o
4MEBj2Gq/00ELZZNiZ5hPoQvrZBfx97dj/Eol0iv5xo46WNArLhq0QE+Vogu
Uld9dlFuY/Qf9i/ptkmUpRgmgo7pg1HzR5sJKFffDXlntf1yRrPG+yLm3MnA
vAbCB4u1DLA6JyFw5NhyR0KnAo81ne6Wv1TfMSfn0Zm7BzGZ9tSOyO2WdQfx
RUAjOHy0xNYAetEdZ0kR6d/ecrzG9giuhKZm40e2Jsf6mrZvZm/1l6SXugmY
mFo7g3ViTqShqaZUsbaUkzcFrHg49w4/I5hvPoMraWBWkkApsPjw4U2lRL2h
DRmZ1kuy9SFYCJkQgYRxC+wqYdHxcofHnY/Eb7akjOdpTmPq0K8wg3vwLzwl
P1iB124WnK+KMbKk/vqOy18EqsiAHV3yT0bkfw3db0zs8kyYb9eA5ctwsQsk
jL3iyv+6cJPYC4wBlc/cnHDL8oJJlhxayXZCCcL6KChv02Vi4dGArl+ex0Q8
qA+FRNCJSBHTXewIcTDAVD4ZCMeJApeoCoJa5bzURXbEiTtx6pewpFiRsq22
xv702R+MtKSSzLk0XYzT1kcj+LSrwH+4NMo/1zD6TOa7Xzf30gTl20CSNLwO
lhG1xlBmi+KdfRwtX+WAPjO1Aj75AL5FkutA2TzGTshbkxzOLhVNL42E+yzz
GQbpp34APiRHSPm4vSGM1rYI9CC3FS1nJ4oIsPyq+QfbryObt53wqZD3qOZA
xqFJTKto0tfUWzPLJNeLaVHJOguEXTVfr55Zp3lmKAHHwSomCtc0A1mfbkoq
qT2p7LLeuNtHkU4x+6wvC4TFjdZ9zWOSUqgzIL6QtUXRuPMArS6WPCso/52M
ZwK6CNrnkjLNQbx5oygnS6bkZoF9qea57YkMUYYrTRWZCy5G+Brz+7IlisaB
I6I3bKv9d1Fl+Zd/I1eeZRTnhdpXvPXCuvbfEgi6oKhFf2nZorIXORkufTGQ
GTDwtpT++v7bx3op19JUUQE8k9bj8tPOw7NSCRqFQMCLF/71BIiF397Px2S3
XLvd057fx324JzusVvcBcNfmramBWF6kusWY5HErjudDS2kBFYmcebaQH2Fn
15+6eg3/Dd9n/YMSxHXbiBBTd8+b6i/nPHxidYjeaPlqvszRZU2VWgSgvSsc
Js2+CEc0mCcYQu8XfbhwnkAPMSsqXYtjvw7N/OqCP8dBn3k4sXPyX9RXcIJQ
C0epa5RC2zXiY7W22Zk89Q1dnBqdm/UGI5zNMTAPJHCeyyYUtx9Af6bBtaC6
8/+8Mrg20lETfGwSNAUIfs+3CYNt7AMcj4e/7eBVuPEzpQ7eGqoMPzJiS0Xg
hKU/GkNKybZFZXm2aGgGBROGODhgZVuZgXVvz/xVjUgrPTEAoaaX0VseGHiK
5VU2AsJCRkKNz9XOQgpa6Yyo0l1MNO8UYQQE1S7idvlxJt1ZrBdXLukVv5l4
uh3wrhNtxMnuFBVhPL+73bNQI/hK9bde1ZHnMp38mAAxwpAez5aapIDDaQOa
FYIOsYqBY4BWwMeX7gQG3PjUHov2v27YkzN5HcaGb1cfosCkQoe0mg+3dGTQ
h1wyNrRE861uI8LYBkPJuoyk4comHyX8AcA9tqBh8tN+4V4xqwU1z/gBo2AU
XhxxGjygteG+CWqORe4mUuQCkkL13IsE9qPZ12YJq/TtH7kxtyj1zlclRHVc
r9u2MLmEiLRnVTJyeHbPTp3yXy8V7fHOprounj4rcKytF0rHMdRmvkMdad77
TKd8dMfmt6VgjMx/4K3TuC2FTYfDg5E6l3jWeFjzPgDEKZnZMmW42GM6MVmm
ziSqrNOpgVZvoSaqLLjxIzqDQ58nTNg1X1/pf98fU1TlJIrf+SAlHFewG9w1
Tzp5WrZMCcz9iBnlS66V5qdDPWh1Z8fQWGvs4TpCcut37gUDPO7Bb8P9MQEw
0Jmx4WVH7q7aUHY9EuBvg2xAc/bp50q4MUGcP1LnoFjl48xPHQ29c6aejglM
1hh9fl1j5rxD6CWnCd6O1SJXXzetNvHMgGJM73Y77c5ZVc0lD6lpSXWP9fKo
bOabYytmvlwWIaSYaehgokcS3PmmUdNs3uhpUOaHl5/F7Nff5KF5ZktvpHvM
e52wMVt246YzD37ui2ApeMEO0+DbfRYj04R1mBZGaDL9LMO7USKV5L6uEWqB
sL5nsvlXfxA60eM0gB5+Ykufv/p7TfZy+Vq20rbMcqqvCqQcyTc+W+jEDr0T
mM4nlMZso1pgaVc33WWpWc9oQxh53LBAWrdfcFQhjhkFqgks4Y2P0hym2zVM
aWE5sKYhpAnP1tKf2zZLe93D2cIQ7Y42U6mFxOhU+VUU5NAv5EH6nhCmHTh0
8x7qfgSrboEtgT4z0dlGxDmRNfTJl2/fcpEdL7j3kgKGWOJPCTMHOO7RtdXV
hg64CGIwTj8KTHvd2tM6yF8C3gO+p6BOTl5JJOWsOJF4N9feXOsDpf6NKX6J
9FUFrXoeAToFlYrF9z5/xXSLLagQ+3qUk2TfrqdT4dYSAGqRNkSX10GSf9+W
wYZfIEY0OgTYk+GpMvfL4CFCKvQTTcoTst4h3nmEK730s+y0+GQh3muNHwEI
8+EQhxmD1HCUyoKHxHZiZnAvDl+b/mOi3AchfbDBGk0E2ylLPxjTYgd+3idH
7d6YQPRpxqPV+y18s77vGczVOk+g6OswV5zNElHgecZ0UGSloz5ZJauvZ39g
uEkGMY3DaBEyO5UiEndsXgvagMB7C4Da33woZ05YYLWyLrbSjceeN4jNWdiS
XnCNyjKTAW7ipuGA6ccvB/nVqVN6kVKK4mkA9kGRbc44lGRTqBSIktmlRY1p
N34GLzEQT1oqG03TmhhxlcQMd0Yjsr13QWYngovq8d7cuQTzrqvB2fzKt6hh
bQX2mXI5mZBpqrLpO7vc2IshEjhmJlMg3BSJalj+voIYptPD2lQ0t12T0eKm
pq5UHkMrjcskeobrT+ETSjqUHdrNLYhW2X5PwuZuapcAAzfKa1IY5+G6jsqR
jcAqcEGZv81jRznELIp0AwCGHzHeu1I4Vi0HrrrCnTL3oJEJzF+fEaYgEhyU
VUVxsUW9VL0fF8jN0qPZFoIM/YytllOZWAZCm+Rh1MJmoP40/Q8x9LYpTGuy
nFuKEepBtS1AAvQ7okmgXZxTaOkTtuZWNwrg9jNPkBD0sDHVtjr4moCnEb/P
5t6SPTgEBGR51LAtxaNdOWxdqniaJZ3n1257+Lm6578AXHseT/RfaFCX5a2O
qcbJOBr/bTjAFpL9vrt/a+NRs6jVILqqIHF531q6S2os7JNmWntcQkqM/BEs
3ykE1L8nOMF5KdhW6rbuwB6B4fncy8K7ZrfUSfuKFW9kvFkrBEIegMJiXG+m
oKhfKMJy492xly6WWUpXPtC+eYDcnBbJDLAKKG1yJU7GxlhL0RWG5a57be+P
aSap7PpxWY9QWzBvtAkaQB+hJgRzUuD1ExNPJGsCAdlv/R34Fc47NuHN5k30
iwokRHcZ4y6M82+mMzz87eu61Vlfx8cIHvOF+iCQAVQXf9Tw82neERaeaMik
y87LwAeHdl88GdktnAeJVRx05kpQ5XroIILdwtbnB3syIes0xorI8CF7kbr2
7Q2wXItVshLKFiG83NUJzFCFwjCOlN8uvgBIyKvNCIaS8qZyYUtGAZEzRKRC
Q6HdNzRAWTHQ6FTIj9M8MI7V6g+v/tw/oxUvEfCIHoa8HwXjuRqROD6w/G1j
8F+HewO+Kbbv8ZkOCS8ml9lGMODYG90bedogvna2KwjMpHRKHWzwJCR7R6XM
EO9HYbwJuF1WjEnp9KYnsiFDjJONHoH/epbYQHccQtvR3cQ6Tq+QoD7RQaYP
BZ1JxEIxMS6OpDHlkKBdjoolMbzsb0vimXhVozGwhc5iSNRmewDxBPt7tSkg
gP86OveJWWlONC3gjQf7VGZAsePAsQH/FnNF5Lr6CzcPO02qC5HfzdGlimBE
ONEid4a8cKA40YvsI2k1cEuLtfMxLR1AspJYoYMPh6q89Z43h7vfwAyZdR8A
B0bqQkh/29L2pPBP892lW3yYnYGm7ni1wbPkdsi02KQb7go/oc2Q4KcGW6y/
deL0lvniJMYwAkeKiNLWRaWr1LRAHEYvAkIZW6Ug+7XIw9Y0EYZ1REslCUtV
/baBI0iMd18zt87gzaE6aRHE7yBLeO35cmJd0+cIOXZEWYn3rH+l5IJizqwO
ME46JP4QJNE0S3XOofSaMGkqAYRs9pwbd4p2BK3YoyoDGdZhgUWAXd9YM8YC
iorwipjCbeJEZ1QEXWCerSJ2yPHLkrxot5LaWdMp7eQl7+AOLOKTqRgSkGNP
DyyoPsykIBB2Xj2Ig5FBCKQVFxisWcIGpR2Um70o0N1lCTKgl1ZRAEsPX2Az
8xJmBznMPX7njqfcWGwKZ/lF1UHT2wYHkyuFYwTQLu94b5j7riVYdxsrLSBP
O8SimzQ0BDVnMV/6/tkVdeyzB6Z+NBvw47SJ2H83NvL5FLb9DHP6q0sESiy2
bu5njDuu9XrDgNOBrxvNBvKbzAf2Ej/8ZYcaBejbH0O3ug8oDGINn5NpRZX/
jhvjMiF2l8rsGx8chyayxOzjGWswzgt7/qYtPkTLWec3ttYndos2044GVrB7
9lzO7WBS6ICzKduEXi4uaVOC5y2LjWqfBW/M7YzZ0jKbvzp2P/cfPw8TFCAH
rm2ENZtWkDWXhEGz/bU03qPNTyYySltM6pr3vJ1jnjczm7Oaugo1I90k+lk9
cqVoysbJMFPCKNDwPxD37CUPA4lug+N7bqoxbc5mwFn7+fzaP16HWqzOLVr+
RbhRX7o3VD4RNTxlCRxQJBWVIeYQ2esTDAK9jJBnFPIRLtu8HTCdJfqwUkhB
1znScF7H10xW+MdEZzsAxbiHtHRhZPvEoSOPlNKQ8JqHbpGgu647U+tj5hTB
U9lPuc/74EulfOrAdpPdz0KYxAK98gqyWrvIe62gqrqGWoBNl8QMNX4EDQ91
Ek+6x6wPtbK9AdpEdsWUgSTLfcI7bKQwO/tmWgfA/7G/hkfsWU0kGYwFogAM
6O+K2Jy/ymNORs6IYNH3eDzRmcdrQOt59WzznPPYjJ3nrzpMQfmhG+gPY85N
mYcKpXaAhJHcKxggM8bYiOeo9iz1M0aACUIcQvo7/Eys6rzCM6jUSjoEzTrL
wLgJ4MzFGEpO3b+7qnlnWTEeANm84MoniBbQlRE/VsbmfUV5EviZXFbReqnN
goahshxYDxLKmOj15vmQFxyD/26rvzURjQZiECsugaAoSSIuX4RAsS2AZBb6
anjoXpytTHLxq/klNB2LS+4UtZejtG/GFgjErrmx0MFFh7CfGJo8tGBhA6Or
EPpT02hr/uN58mhLHJZTQiF+J2x6lfh1z264x1CEY4miqfvDiOFwFsLf3Vks
ncuc8LgJokbynFqVQ3KClsId+cOQpcKtWZIFhpSqmbG+wfA2LcW7KxbvEoLB
rynXv5R5XYCT0BZ7WFRcDD5qJ+J+ALhsZJ4TzZxkMwJfQaULmgD9sOqe2ZBB
Vz/Ur9dMNLGbV3RmmA/6y8U2X2FiEJH/TQfvEK1SNunrnYQjJUygD2nCGGar
0mmPKbCF8ZH1dcbRlselsoeCpaNttMj6pZKdENeDvDNxZPU2sgwrkDHBZLvK
wO6wIOJatrwaS6zZKgveEsr0qW9TkZZm5iQK+TUn9wiqjkFg7bb7OYo96fUS
cMw7J35MgcBHfk9r23KErFod0HgV+1/ig5ppzvyThwpcFyfhrZV+Ab/8kxfd
9h+v6BOIkE2AIZI1DJNc0jgEjmC1aI/XczI8ZzPofUOnZZQAqG+P4scK4qsZ
kNR49M/lK219JbeMklbYd3CGKDTEqWMBEtV+VPCPG3ZnIcqND26Qy/xc3SzL
Cuzp2CVAz1+faMYj0OFlLBgzG6gwQ/gxA7khrY1o4n7D9g20b2seod0qhKOI
pQH0VM4DrYkxYhuwUbLWKoNM53swibHBhi77b2mPHCxVj/O0ehBk3eRbaChb
WS5TwAey/FV2rWgiEIBxWdQBhJOTHPYab5TfjDO6pBfnnxnCPF4ULoNEAJvK
lXNegYCR8/FIOdbGuiFufokdgzS6R/FSdRXNNm70We8J/4y6T/j/vbMhI/8D
TPsFbaoBrqyaAMIv1Y34jk/67PFD6eJR5uIrA1g0GSrHx/NlQ/+hhREyjrfN
35cHtuwfsNt8DNLAKPGw5ZiKW5JzLEFQk2dxjMzC0LeWA0O5kASLk7N6u0Bj
JGk/qFhaGOE9x+zmUZwvnKrxbNUjufOC+3QAAUD+v2j2QwcNb94Ak5qBaVj4
G7Co6pZZFh/zHE3qj5xlwUQRXDBNrmCOmFNn/bIqaHx7cOuJfaWOzmuJFGwz
3XRu3R2oo0zcaHPv0l1Bcimzq4s9rg803yAR2Uy58kmniLmTiOl3bcUsLC3U
P6DcLdh4vV/42aiwY3fRgQlLbO+fPenA1eJ4IsWg98PfRAGt2g9FCM7LBTtn
HWPJ+iVqRNvsTxHGDPPNeb7OHTal+D7IxF+5nAJWE8IppvjvbCh0NkU22WaG
0HU7ZWofwkgGCySQZ0NQeJo6cOjmDVvhbEEckm3Mk0Tfw6/JeI48HnjouSsJ
lWjSM5pm8BMHgZcCa0wrNWF0qUur+pFvfVEu/MTLHLgUROHuO5qgUxnhilz1
P4DqadWkr4AKio3Hv2/6eiXB7iKzUHFCm0ysNZKp7ThrGjMDnQuQy0aC74Kh
pkOs9cji/+2pLubHoDpc9lDAP85sHT1PRMUKMfGO6plTyOAQu0UNuacoItAS
ggzY9qgNejHqJTcptDXxlrjQ3J3SD8WoOf4WHdxrmlJG+/OmeInEOcK9bhKQ
Xh+2O/AgR+k5GhUUBz+ujlb0FETEf6t47m+NFD3grQrzFSWn5+F99xnQwQ5N
FcZ963uj3G5VkKUNpewzVhAzUCUA2QfERWOf0UmEjlOEFOZrKyX20PwSISMJ
uQ4XO/eS19h6Sr+wPsagX1nj9FVkgYhWST8eBV1afhHgh4oDhD202XON0Zkz
1YYGLLadh3wgVjWXOxZdtIyWBtIK11W+rU+z/Y3YOL9LCMs+sIm9IlajyS2I
Paav2Tey3LZmawIKy8/a1g0tP/nfZRKKJLMUrO0TwKlQt8g5HK5QuDWnE3jD
6F8BSomYyGSLJfvimSnlQ632l6X5R2MJCww6IYjuJX6JlUXJreLu4w6+vvDa
AdkxUJvuqtxjI4POgiaEOMEodqqxJFHJtDWo7NQY3NZEqoDHejkfr/2XhzW/
7I+/FszLvQmpVfMRK5d/JVUUA4FUFdiedVISes7tKZF/t6qDybm7iCmVPOkN
VfStNLFfcP4DPCo7aiVd4o00yK9Ww3fXmuEkCA6wlSuZt7bDak/eC9mV1rVf
V1CPFfOKYEdQiHdeGlfPnKRk0FdcAbcp0NGiV9PMTo5htZ6RAt9hvdZUPRZj
qGGxxXEA6M9WAsytCR8XNUNxO3oSv7+qnVOTDFRy4Avak3qxuGAFOZp/dh+j
AqpVpX2Ilh/HfK6Ra22KHUqfPde06WHBWw7VY1GZ0g3mKZyDs5KvlZcpcAGK
xyADCRP7O8fbsYgJgvcFOQqiSHNzL5koQb9zLHRzSSww5wMqEEJrRdx3JoTr
hXkCatJdnRvtw1rVjEhmMnyyOO/mh/ATl7gyWQ1/HpAv9HI/+UahWswwoVf3
4FdGKuH9TjJiMc3khH1jHWUFO1vdzDrXzRCDZh7y8R9duLtfesxQzD6p1e9F
nsbd1ZEEVOzZ/2sct70sZdHEE4v2wdAjRo/Am4Jpbz+HE9zcvIEKoP5euA6U
g8COUpFtVzfOUQuOl2ZKw4kEKyxsrkn5g5a/8JDD1zdNyLIdShD/4GtshLEs
7iqpxc+MJBte6t1UskSJMBk7iHr7HCgHr7IJL0Uah3pfuTef8cPAD/7m/Iod
aK9yDGk+C/gcBSu+Qfo+Fq0+y6ETT0twAiQr/xbsyAwxPpgB6aLjFbY51Y0p
K9vX8TK9bVDr9F9p3/LU1te4rcfiDU7hOPudbRciXrUDv7Scl3cbfo5kl3d2
zxpwz07D8pMcmwLkTu04S9QGMMvmqRViaE8mg48CV/jyzBbPj7w7BZvGdbvf
JEgTlJ9gg3QvFRlYDjSCPr3tUjEPe05ZSYLHrjmU+UHhRqsTE7oyesq42hex
PsG/NMYwSx6oCsnn21WZx+y0abOdrHe5hwgqJPvD3fxA2bthRH9qCs8tNoN3
yalBz0gabAd1p3nv8aGHaconhwQOMBTjxxP+6oWDhqGHLsQX9UKBLAu1UiEp
VNk9n157mCSN57/bK2+bUWfYuQskReTPcFre3Aqib3q1P4uMFMFyU+0T9x4Z
Pt0XGGyWELWhU3HnxKPMfpdQX377ShqiQwIWpuGbGkLoD31RNF/wg+se2Nb5
ZUaEJXZCBIY/zWoztwYY0IIeQs01/RyUrYTATUug3nS/4fMlccM2DSHrQIMe
DhZEKnEZnNwGAxVv2gnw+jclFoxZxZTR9MvsGE3bZ2BnWN8SPRCZtiuQyHK7
yFRQR39hSe1bLX6hDVe++DbjHMCrYLgFJsCCo/MPcmC0Sqxi0qHozBTPkjyt
6aGLrnBTZy7MRpehj08psn8xC7TDqrg6gGRfD+zy1zhoO2v4vG7fGxnN4pjC
3+HUD7SaTwoDVzSf9AqVQc/0HWO0ffjf3yRMLkO7imebnEuS80yDOWjd03vT
seEnFBxbErS4T8vOWAepl0IU74++gz2OCslbi9RaQ65dh12ru3PgHnM3xmA0
c9giPKlaifRqNmO2KBFdMjDPZmo9jBuyLjN/fWyz0yjeMkGLyD+3SdlOqgiO
7fEX1YYAZt8+w0FJnO/aG06C1gJVLp2bfBoC03vY29sz10lVPIG68gxtrfqE
OcbMYotcnOkuQA2pCCEJMnwMogDAfuWwLKR0CgUPn4VjRntBdyn6dw+yuVnV
gz2lLqCMr/l1ZZ94oHqCodu1ldW3JCChD4zMCZTxBMedLBNZ3k2JVDRYwF0g
JCoEk9FBO3gzs2gLBItW+PdBfOJWTzx8HM1ed2VofHgnpRIZP9oUoQMLz0j8
uGwEx5xWL4gHPMcBz2Koxci66dmrCpyygTGP4dYRE5pTJN+a7tVIrRdPeqJG
O+v+Y/CjlY5V2BEbErjMX8LrRagUNXs6nOs0xWpgtaiyx3hOW260KhcbNuWq
zcl2JxaJFAC0B53lox1V25UtWrC5+dxk6Od243LRsuSqq+aPjIh7hRdgg7Qo
bdtHqWBDhV+SyFXeuFWyyO6yO953odtBgSv2FVTz/i/2V7WH045sXTlm2fvy
q4QG9Jq4KQwoeq9ASBy4XRAt2jcS4SPxdE9jAbhWLQyPSK5eLuGPNWfPVh3x
B6ZuOBzhAVcPQJIbM+VQt5SBV1RFxvNVLz0ql1dJII2mhCMSQg8zV6Ytoa4J
duNdagWM5uAJBxJggAwZ3XFEtnNOQq56kUIMMPrMTYf0B4HggUXwXl4sYZ58
HeVx42VBGMsaw371HPevVvgaRLP9QARMU+ArrCPTcN3KVU3xJwXctXNOlScW
ZvrVprS4GOl4mzKxYZEkAM8k6pX+NQIpTzyy9pt1sV+iQ9ZmCncI06jhoFpA
qB1/K2d50xECtAKq8YbdrXKWfr1nNj0u9mFM0vAr1FX4kDH+dBAxwkmRsiuA
mswPA+sw/8m8wFa7VBLC3AHPoo56qnFyKZtmWptoKUDPkuhBbpRa9APJA8b0
hul/m66GAH5N/46U3bwGYa09MuEuT4o3xLw+JBLuIYAqcp8p9c3mlsjohHSf
KhUho+ynsH1BIU937RPpk/wZM89x2XITDlNrpXKJiM/RvKmVihlBbaL3PSJv
PBLQVeI5jSY5NQS6Gn7mm5GexDmNEvTdM4UHLOWt1ipIc6WYcD6ZqvzDxJ6X
pKG34VmwvK+o1AL5xZWClEBXFvQ6HqBDqIvlJkftFU64tg9Qu1e0TkBU97vu
raHJqrtcYyJ5VIpXtWm3CGLh60f4S0cJFtMy7mQxhG7v+OqBoBHYkoGcWd/d
/fOR+2NG5uYsyT1N5Ku9w5VThEzXz14oBEplJNlvtGOnh28qz4VDJpwXdUT6
4VPonOV1SnUnedcgvdIGdNPllxBTKTzIjWNGmzkGRIKWT+5cclGD8GBfScp8
+TY5eMHmPiysGvLQ5wEGG6cDzqPPfyCnhFgQKW5nHrdJ5LiAZn2ooBnTmO1x
rnIDbUmOktQY9xz+92LzmtKsKMaf9DK5yJvjmkLDpG34A4v2Xk/7NKsRuYT3
E6Ja8Bi2W30MPZ68BBLxpt5GIufpS2HsguLlvLzKIthvt+TGaNaEgz7v1FBB
ryO7nD6RH+PT9qEgHziseec3bEkNSkQ5pBZQ3Q0S8eOY/3r9lLVBVgzkPgxj
+S97jsLUPWzIK9J4Zuim6Awaz5Uppf6kbmw1nfjK+zQiTFMFkAUzTLnaJIc8
x+Y48+i+UmQ1B2C1q7/sRpObiqQaQJzpgbcRx3DZt7iJCvhrYIzSmDcJEQpe
JuRVf6VSE2nI8zGdBUrl3F3G/4NO9zP4hkL1RqcoFgW8QYDia1ysDq8PRoyN
YnOHUvt9D1yZpczHyRnhV6wcb+oDpev6N7kqA0gsxlMK33AY9KiLT89DtzaG
2T1T2Zw78NlaSMkosiaQ9VPABYabkxwtXWgVxyXGC7SUFeMJoaAdi4VOLpQC
KCP8zzQo7P5MosnoemN/DOdRqst7Rk803Aa9UqVw2gbjjbOqFT0y0Jouh3iV
44Zd7b0A63omTNDEbp5jlfkudfq0qKLfKmtTXSKjvRZtqKV+2lbmTIeoiA8E
i0GvdGwJ79hopLTxLW79qdPpagM5+k3t4KmTQ863NUNPn/W7avYv5yCWAJml
YT+hbODpoxX+bjhaeTkvYq2YKEXKYZme9J8sA3VhGRnaxQI9kTGBVQseKK2P
2nB0fT8dCVQ/BmjkAuUncv5EWD31LBu4giFV4p22n82wn5AN03rTl2LW7DMH
iEot77QGr6GColmlfb6lHXLZGTuopA7gjighSqSVRNVWxJXaAcm4wdQIr+HP
4VHFUpjy2e7HkHqA6IlkRzrIA6EqD6Qe2gOMTJa6rs1TY6PkgS6XFH/W3zJh
+rgu3FKHiniughBQuFIVuQhtEGbWbKXFuZG5NlltXW/SiXtfhClvXQ6tI3d3
SPf+hDORMJjdOPhoHQyrkRqkmUDpPZrtWrto3zR77AmdwhTzTT7oIkk91zUW
A6J2Q6AUOVF0dOnHHPmIy4bhkTtImeOKcwjhng0r65+WkVjMD3RND2hCJeiW
XPZsHMxTIpnpdVylpLgfSDxaKN7z/wLRml/dhjknhYLxBfgQrpX3uVRLB4MV
zMGDLE5ECJFnUNSbqH3rKsx2+CFgcrWA3si+f8+8UCYRpATY/I5pKhDRRS0w
dnje7sfHpS4UxIohFQ6ZV19Aoi1JR3vbOFpaUtf8b+jYFImmvh5EZJWCclW/
moq0maGJ+JgKiLmo9bYNOsi4vOQrMH7TGiRlEwWMJYkZMELQ+uuodQtPWZ+v
vhII8P/yvxscvxTDl6ckqpooIpwWVvR4yQvdlWsoBg6nwijr0FVDA/HNSwyd
NDqNs4SiO64TPzcwpV/eRYyk1enET8iFizE4u8TnC7YhghOf4dwXACRVJk1F
NSQifX3fj9NkH/oNRVsIUR6xu6MnwUDXrXNm1fohXTTAd1o4t7vwtOeh2Vma
f1K3wYTxqHMHIL75FqukPFNbBqHPCr+8DtvrfMG2AsZyBsLkzn4ZuvLR6T3U
9FJOP3sRAaD1CilQVsBoCsariz/lX4lZci80GocV/Y0LyMrRqz7And1n9fJN
cRD3/PnEf3YoGN7/AiEIZ+Oo8qjVZkpYguYGgjcq1v7jbw2abxV2Z+F1OJUh
GyyRttIdblm7ziaYP2VYQSg1uxN4veJ2BekbUI0T+VFTjt3/cpaE52mVv7th
1DeOuG5Gf+eLqKUemfBgoknMEQGug8LqD8U2p7niec1cWW9mUQ+uKeHLDZZS
82Kf6HI+Cx+8mwkOLzirnbQ37RGgIWI45oQVEkiu/APc6GhEO89e/Xj9aX7k
jXJVAd7eCFwkXZgPHGyT+pUPY0U4m52ZuVIEtHCccETdYF8Il62WIgqQ87iv
etnBgqIUFlOFJdLODYd6hlj4ioWO0UKBKl/MOV0beEIVDvyRsbClqdnUfDXh
C+VDrMpayFX96yzpGNYpm18PZFQ+aoGgaYjLUnp1lJe2eF/1gomvSMW2x+Ip
6lVayF9FlVanbb/RjKSBzfxUiLCcupwWc4KmqgezCj6/JQJX4q41ZOVlVFCr
ibMSXUEe3qsJMIim5w3UdAJcevKgnN2GZWje+IRQRcXZXS4HnCXJni0DcRie
+q25kQPjk3/oMVGyoNYtDKmWxInEA0OQYtDxmBfGdc632d0WaWejaYKsCKOg
UuzQw4KA7GYik3uV23xAqgOT3d8+/BDtrLCZb0tcG8LFeAn8EOllqPr1qxoP
1LCaVizHOWr/gvbvQRHXNh3HfL6OaqgcXwOBxuruwQj4Zu0p1yBh26moRS/z
KZzFF9fJypa7c32O7kobW2JlVK8MgA7lOhuDXPyXXHUN1hv/f4fcQ2NdqUvb
S2v9UZVoEQ4pBRx0ujfLobK2TY79e5ZWfcVmzzYX1EAFHSl+octrwg2ms00r
S9THis2fCXwrtdL6FVV6Ew7rweS/434eGR98GNZhMlffgeKuAXGeP2UbU8SB
pNa13+bmhIjrWjUPgor7/D9EEIWXif0WxxY1zZOJLtSt5z/6rWOrFKCNXwqY
36WeefwLtZ8IXToeTRuTd0GKs2TjUCTEFntaJoQr/HhO6zeZOgbeNPVPBiT2
uM5tb0F93NLo+BHAKmI4j0UZbnBNHUdQhqjQAu+NZBwYXCYyqjTIdCGUnzxI
MSkllEKPuAiEgP8vvj9U9Gs9CJNaCL71JW+JrfL/Ory3VC5b7LlbJPAxwCda
y9FMFRcaHRhmr/mtlhU3QHmW6hqRpsqVDvT4eNXxz2LQ7aFMdIIZHRwIVrCq
ZqHEr3tJh27sj7sRevU7sojCrrIgykWPcVRaB7NvwIBFAHpL+6ThOuT9jOIR
6BmCAYXZtocdr5264vyNKW1mk3zbAAEKkYBg9V8fDrDCjaRjOoSZ0fkcAY5a
NMm0V/JwQGuprEWc6c2JRtIWy11lvhYVzkvPMg86iZT5A7BeL0BUg3ESSz2i
fML+rUGYPfLwGMqSQT8BbZwQvnMuFzLOatyL6zWteWuQaX6pCoKiwMShpruv
/BG1AgnGqk6dQ13H1fbm2E1rEWJ20ZrfbpDuS1NNiCtgP/bNgyXNuBLwvH5i
TIjpXrwnT2ZV3/hmedS5zwe/CAHNrkOSCB7iY8S1p9y6HwXa43OG2BCdhs4G
DtpHyiNfR2Hkk1bDzG2OkUkFL1OfxIMbnQK+8IZTYBnPYBoFMMG6kJxiWnIX
k9EH837pHY+bPXMw5ONC1DtY7zW1hZ18x4tEEpDIRY68/6JkbrJciA0ZE0bm
GtzzmPN5Ljal7lwbf5SMd1xFPxn9ud7ry2jrb36cKJfqVF5oVfVb3ekrIi1R
gXZ1qC3YF8+GSQUxgQ6Ql7ivEFP77XGko3AqgeQSJfIWyDaI34ZlV7P6Bhvm
QbeEp61XnGLXpCkLg8Qq+59ha/SrJWvtGhoYqiy5OETJ4oYWhl0AkI6rMmJO
EjSS853SvvWRbxOyWmqxkMBxfVf7/K7op1TsmC1VR6fsJaeA0EuSG3Pqzklx
05kMJTd56pcovUg1rmu0veBAc2s+qt70l7LFm2tMLL6XIxnuuc+SwhgCn8IE
omE9eeTsQGxlbBckfHr800zyHJ5nmfHMAnfgmz5dlttjGYWJePldjdClGF78
rLuo+vFmYuqbUg9F24B9nH8bZkrG5Vq7yH96HQU0CuNJgVDCJiSrJaQfGfuJ
uLF63Xp+VCda+83aiytWLHrDuS/I2FH+ukNc/EJ/A8Jd41XcAwKJ0E8sUhdM
BtFSxISxEDY3ohmRc8nlqMGbh6QMBNq3Q922xESlOB1CcTI0ih7e8XCkrVzY
fPsbM6wic7D1QORN9X+VNHkBSp5RRrYMI/sdNS7GOrnxZWuxZNdbWFIkzWwp
JiV94mZFx5aJrSyOB4Q8drv4NZ502gWqAu6rR4iewwY3uNkwRqN3WvFGPuV4
fxH3bU2YLTePnbvfrWV7kNhd5KJRoEO2At+WRMn+LPbfIBgDr86mJ45CNJdp
MWAWMxvLz36dxv0FhfTx/ef3oQcGnEH1mVAgi8vVNTdrmWkUEyR+AoJtxMHx
KNPk8Wb+y+xVeO6o499ol+g6yDjf+clkFMEhtU5b6APLyASKaZQKkq4ErdRj
m5A0DL5l5lI/CKIBwqRGu7vv/Z7GJ+hjN4qZQOTsHmlLqJI5m+IoisH1x/e+
9yIi8QaTwT5RgIrLnelUYAFJNLTN7nQtq9UuTtY5SiJRO6o13E2sAGkeb+dS
BV4yPS8gLPSW3Z63egJuYwqJyilN8kTWZ9PMq/nFPA+WLQe13YFFmvdWAbHo
U8ysiA5eLwS9QD8xDiWQuXx87zClsGbniy1rWIE4QSWLNo6xr7Dprqgdtoeo
xlIbnYlaY3guWgFv0Li/jljNZM6ZoJ7BU96rcml/G9DfbtZkNr8bNo35oN/c
WjXNwy4yePSbDliVgSEghA0MMtteCjSrixO5pblWueZJ8iRjX3AdWrrwmhh6
pKNP6C5mvh41RBPkhjJbGrdpQ6gDxtlw5ZFseZap97brSjclOjfFMFLcwGnf
K21Vu9qqm3+tZ05+1o1D2+LtNrSky6j0Gg9Zo7QeipkXW1R9LzszCZ5gowxX
JVxMCenVzGMSb1b2PxFSGEsMeNKiODyVL1RibzRomjBCf1W59UVyhwDT4dU+
Qf0XxQCCwnfjP3quWgNMb35gNqB+qipLcv3/scmzZJfU/bZiBfpBUjUhCxrP
4PRMjrrXyq/kpWRcv3vD2tsHleCWaiOW0NfQZsybCgwk6m0vwCTQ4outSDtW
rFBG9OJ6zDoP3AbDFqVmJ9QxAW3iVB3hMsnSsnPVkv+J771muLU56Gfp005B
/bn3qrz0dD79hcRLB92nAmK76r2oJxGqECZoEWpHRqHWmr7nYQmCik/t1iZw
mVKgz/Yy1IBDiKTdSHAokFM1N/3C8Te/fg8t4qgVQE+GZydYBqAlarfQWAZl
iAMhVUI823pju5A9yNyXZMvy8vBFasqvLfE96x65dvm/0tsfUgs+WHARrlA+
Phh0Lijjo9RJ6F13Zy5l+2ID0c+0WpbAcv//eCNQM6WWzlDYelU1nGO0HoHQ
a4yg6qOKawB0tmkaHPX6GRQxFaB46gHh8ePd9yo5kdEdeX4XYWtcJ/t6om7V
uXQbEOHJyIQPlvdTyf6SIrPrVxS/r7SyueNYnYk8WV0s4KEld9x23j8NQ8s5
ectvC0WosSOyDRQkcU25bofKfd8FzZU72d0Ks7Ah3FgF3xnRnuug0h1A4LIb
LbksakxxRl8IHr0olfYIVqi5p5Rlkf5/2TwKtTYj98XpCq0HVerYl1dBINNF
OPQBvFE0JN0vshTezolVqVs3luYDR0gdLc4nqshgENHMjEHtDkFyjWE4F8gt
RbhWpGgypSqHpbiDhoiHb76d60lJ5xCOD9Z/B2GYIpXawbhdlpZI6tsXpoQf
a/fvAec0q99K+0KldndNkASpW33MyWgRmv4SxOJtzLsuHiB+gLINqWpRkvqw
u1W/JMZbnALjeMfhMccq9C8Y+rEGH0WyemSrjjwikwxuYip7QtQey0KAYyAK
SW7Q5jXBfPtO1nNCgtEwZ4kWTkWyVGKhqzmV2xdEapjWnP8S1febnENNevwz
Y7q5qGKPD80i4YmqBYNfjR8cmSGn4TmiEKnHkPsvrqHRb1fXnXljaN2pinfC
idD7FKLD2XmcJ0JJrzg+5FAZZt4biU9VFB7DxZLdW7Fbv0EdenKr+iu4b1uh
WzJqa79Gigd5wX2zl26vm+ajoMzShAZPGfqMoPHR7DzOBMD7S6gY7D4oMjN2
bbvYSunefBAf9h6Qvp3wE0voPaqBIJa3P9UxqD2auQxM8+1tSGQ/z5DsgskQ
MRHzZLoelZHISqQQZny+WdrPFqXtrP6J/IMaeLue0er1FDqcYHz/thHkYorm
1CcEvPqulr1QvLetyChCSjn+OSeYAcvXN7Q1HCh4RFhohibYu8pZRVcf9IeE
6CPsJK1RRaQIRdW4cXbA4Go+pAj1Gxa6G0mHXDhpVRgdUc+l/UPlQn8kWY+m
GsV71Wr2UnDgxv+PHt7Usq8dQM/1/3ddkjf2RPN4O7OptysM+Xdcur9+MCoE
y/J7tI4fdHNnqLyYgYOUPxLaaGPE1TQaIMa1hKAsFltvHQB1nlY5iEiGJ2le
OuSu8HSvAGatc2ooX195rgVWSYZ9MYhRXWocLxKt08RVA2VsXLc+8IYNOeBs
Ga573Ik47NQf90lqKYsP7sKfAaQZCCcjBy4ky6K46giOBz5iCto/4jMWMFgy
B0y8EYCZ7cUvSrUWCobWMOv2YNjhvgufoLs+I+hgIAwqN7UkU1ptG4/TckH8
X+8qjApEtUDRfRrqk8q1zEY05OhFgnQo5coVoxcPIaiGrFsWtfA4mIuDwiwG
NtoqcueYKrJRKKPEWEnARJ+OrLIcJvWevXFxsj7/RvfUVK9WX86ivpmb7/LO
tcaUFU1KJUZ7Pln1L8V5wpub4CGABDpYR2UL0S1CbpRIce2HXErD4CE7lFSq
IrQLVscD+0b+B5BFHdcxFcjV/CaB0jG0ikwFHrJts2X54VpZ5ISTno0RdYk0
t83WsraMCsHx5XUB5mJDlfQK4S+jbAucBpg5u/kJxLXYUqpnl0gZTzgVJCHC
gxj8VCevwSXUuMgPWZJe9yucFxww9+6C65epRjOecAyOepcCCZ3a+iOBUaEV
Gn1krudFFlmOddPwVugZjyciDNFC6HtcipTFm9j/1tZ0Zs8F4E69h+pwGNu7
GRNfqIAFevQ8YjlKBNqXk2QOUSvQSEdVxtJ78LBPcupqPiDbayHzcHwrmH+c
aDVLTfGza8+0ALVBdKjwHPJM3iFsC/2dgVQyaUV2TpZ1vDqudYrEMmxcPCU8
fixkXhRbC0yn3AiZGVeIgnD8PGHX6sagsXer7zJVeSY4CsBEZwNotXqXLw3l
CtdX0raJaWH+zGv4Cg/EwNdjpKvn/lVJCe2gamklH1AtAh75BpOLV70+JNFO
cRG2hdA2HMDn/aBVzpCSqWgZajWKcRhMggYbJuM9qtIHFi49/FLlTM8mXAD1
eabo+/darDuAWUdOHGD7JW+oVqCBFsaHMk8OHeAmZR+Apojoci9EGZPq2S/P
kAZTDGCxEhu/OMaxZAbajZzzEN5LB/rVmnvCLWddyKzlrSOozxK/+pQOt6xl
qgdDGgTQgEd06tgAjEMw2vTu9ikHQsrOfLp3IOjs7VtrX4n70eIwowxxfnfq
mNiY2wEBCcL7mpHeKXXUJdAaEmOPYTMW/Q21AAlgXPBLaZ7y/iqB2EUQseZa
r8uI5lUdZzM+7t380FYx90OA35kXtV7SE/yoGlaJXoG/dpoUkvNtBNDBVA0m
ImZx2CFitfGrg+4AmMTwf7S9uID8ssMWAt9gFuK8lO/U0hpPCKq5S3TUDc0x
9wxh+mAsw5lEOh75Y7FMp7nvRwEPNmvCr/AgrC219d3x1TT3zgWfpQYNrRRP
ZpFZN6/vyDI8ITxQxdRPaXvON6el6Aik31EODel1IemScxZnmn0xhmM/vSep
drK8QFKH07XjJbVSNntVZTS1GYwrSQvOEvMJbpbk8ZWofI9gSYLB9KGCfA1L
z3t3BSFG3ZxS/aoRphJWmrozCsA8ooN3cf0opM49IcqihF+/0zY6xyMpK9Ff
SIlmPRIyw0b6OBt5R4APWK3JqTK3IlwtJNYRX5Rzht5EUCOo3TkxNWyLp74g
z1ChtiZe64Ss9xOW06t2dMr0B0srglPRy7kp/Xs/U1awrc9uj9QtD6h+k/04
nowGug6d4TWjz/h4WBUxLrAqxrmvGw8bxmi/PX2Ai+xPKZOtnERpAP0hHjA4
Ro4jANEuZXnNe19j0nWPdWAhTTStKtABSyQml60rsMI8Ue9hXC85ZAqndKuO
ua+h7F0n3rMP4D23CfxMJS8wfFp5lqb637ng3PNjqpjOXEU6fSioeDEHQWrj
haV7uMjFpKaZCCTu2gTEkbcLIqerCvKFpZrv2wxXJ00V5HBYzA/vonQUHVju
daKgl6gJQqmqwTbio/S5yrbzR0IZytsSO7bTdCVZ8GFdfvIBlpYKjnnMmN7W
EIKJcDkaExQOjuk1bvqpzFnOulu2dXFul9XAk17AUeyeszuIKL4uXgxapJHN
eiwdKOC0QcC7NZ0M+fSq38vFtgv6vHQ0V8sDSOv5t4bUva2PPDDw83SBathV
6+Uxz4V0i5h54WVeelCnh8Zx9yudXb8WlOvdLl5AZKjptRsnwosBzjA0TQ+U
ah9qirJqmGtMyuccC84G7ZT9/UZFME+sOpPpdv2ZGCzGl/27+IJB/kVXkLbj
c9JycSLsa6qpw37HOlc8XBvqHokEvX5ULF1yW42VWtJ3D0pQLaITVvRfXyIq
YpiBQmhdYjEMgxjrNC3JPVV1t1+y3UIO43JQEnpiNNZq5//CiFqG2iD/Tg04
8V1ApFc4WaQNSWEcvmkHr6s5wGIOJ8OLEMn+8H/6QlqM4YzRPyUHHMrt0HL7
oIik44fCMfRVA0M+0UBXGbdv5AT6aVfgLQH/Bz4jYYuLBkHgvjG9X+c2s/eO
pH0qWIZhLhHX6dOP2RQK8aMEIPxOhy3gdcvUUa23Cdd5okWzB0Id/5NlVGa5
8LturF0HHuna82NJ4weqISE0E5vG6aiSs0rVWZBHuMUSyVTi+RKt+1ypMhX2
ZlHhi+/usf+mFEPfeZPg895m8UREPN3TPhZpa6BaSsYpjorENOF31pNwWkEj
l4K1SsQYQkhmCv/t7QT2OfPxy+Nm8c9TAlHU4wwrEkY/NbbbgkRAercFzyMM
AaBLP5Qjgin0W4egrmIruPSGiLymFa7NKWqKzVdInQBHZlzRwUqYSi66cQjF
W+xqq0iXZPHojsXBjTapAb6LuitdkRsJYxWTQeheVw1avsJaqRL0y4cM6c0w
vQ0ZKsVGYmZc25v3n4qCZODSLirYXCWcmnEWJI36upB8umL91LzenUpWbSAH
gyVy1A8qiSDG9ZQpWC+v/u9aTd+drKZpAq7ONm5S1KS3oZiike8Lw7UQ6LTA
cBOMvo9poxVOGl4ZcdzEQtODCgbLGLbN9nySJHNkPaev6kwO28UvK94GMnQG
ibYm8otFrVCESZq5RCW7L9UbVYMH1iMb/XHCZdSE+mbfbCm/KekTH0vKlzha
jpzjZLgU5+0IeWifcTubqbMr1fy8Zd/UXcS8HlVnuVHLWiJWJV+Z5DFERJKM
6HYuEo8zX7VtQGJKwz4WUUs/XLNCCX+IHxlqWNcJvq1gDgcRbJuoOvjXeWfT
33O6RZlsSWijlVspS6ULEKsUhiBaDu21iO85ZLA/JjS6m+809gDFZMPw0VkX
vtIYGN0yWuQLvKO9/o6YKg6EKsfKwTd3RSfMNB8DxPoRRtLMw4B8KDBBPBAM
wyoVf6415RjZZTFYNNLaBivD4uIVrfZZFmun0ttN3jR8cBvTqLS8a+4yQz+w
zbayjxKp/dD+IgjsqevTGa7fBnRHfmTl70VM5osWgP4rp5fRo5MVA9PczEay
WcdyIPvEN34Rvwvpo48cGbk8lOrzQgt5p+6X2dWFyUOT4dCOik+4TSSwsv2e
YSnXP8F3QNKzbnDHOwbj0KD5nvpqUT2MAjgkPxWFRO9j0wqK5bmErr7glHHQ
8cqdbOtXh4073YY6zrLNP9X5a2FvarAjv7RX3W5JG8koQ6ybJwSCeBE6aZ7J
fGuI4Js5xmzvZydyhvuk0dBr8pKFc27+M8KqQgFV8TBeQJsdnUqgKlF+uutn
tyiKMkCnRK6/3GlUyMjenjsYAp4BYmMmAtAm2w8qs3fnmTfFbmBUvp75SReT
kKEQ+/MuHjlZrDS6HfDNp3pELLpovHj+SjBKNj8CxMhDqgcqMHe23BnIUh8G
rD8tyNn3woj1edOydiMmxO2xBait2d9PQIOYWZyx6kFGIWtuelkJbf8NijXR
h4s2J6A0p32jiqd6VoAzYgkW2fNL5uCYDwVRbH2D0XyQHV3GUU5unEdjULcW
jnaCa38R4mSdweZXdLX0QHIocVYSc2C/3+8nJQHrd/eRXBEOEfzydKddzl8W
WQ42ufhF7hBx+M5Xe9uXqz+JSGvbxWlvKP0LAzWRelljVJ/SQVO3akLB+G8Y
j+WlvPggkDR5a1CgoPG42P7QsPON6fD2ZT9zfPCXuSxf5lpWp7RxxJfB50Sx
mBZF0RUO1vYzC5tsTc7lrtAfBAebjU17qqsGV1CjB1WHEmGrT9U0hS+/Glcl
4VaT+XUzmE1hm7UbKeoGBKCBFC5o/YZF/Y205h8GLqgRjUCSeVyVk5NIhywk
LCuSFn8EIrogGU+9Y12bl6Qg+DcDzNG2aHfPJRUwZTbEl7MfLZ0QtvW011um
GxJmzRuF4ei1ttSnaVl57wO8g9grAeutwXxB5H47fxJLfDUqpiw8CbFeKB40
568axQhi+RN8quY3Rnkh37cp8w98nND9Z9VAaZHXS2x1Z8Lqi5CQi4M4MUsD
eLNuOJDydyTmaBzmeGahE6MtOvhA0fNrZojrPnNVDbLFAQh9AUEG5UFyThjK
7yDilnlPy6l7/JskvS7gEW4zc1fckZR6n+JfdiNY3TjJD5krWYudhfQP4Q49
CrquoMtxxzmily7UhqY6647acrhU72yqvogSkrxgJLDzZth8/XLysblR4iya
ANTEszLTdUXhUUvwfuhYg/fAyFZmbfkSsQXCj9z7NYtBEL0fPxHyn0sSsB7b
lIV3DpyQPYE/s8yX0semj48/IXSuFI/ZlXDPfjt9r4Tz+0J3IB3/efUIoVgw
pn6QCZsDreojRrXelOvjvk3MAjN9xqa2q55ozJu5JwcAoZP0ror/GVN9MGAZ
bEg3aMVmkH8F55XirxBi/OP+A6Q2rd2LknwxqMOCFfBU6Np/qeB+d0fUjYYv
TOR6jBfErnRH/nYfNEHhQuFasKSdmkUj6MSkBEUEsm+dWuUGPs8oj/vIKcms
2CB8v3oHy1IrGjOUAvy0ItXEpE28MIggTRA6UxYCViC2w+5W0bRERcqLvqS6
TC+7RUzUHfpKmUmjh5bq0x9c3uZ1LtQvJBA0b/lZjRT716jq3LMG6OR3omXv
rXUQIhVmMJCA8rM80l08zCWj80qvbo5SGRhpY/i0MUY6BbaPmSTSS4b+dcKX
6UpbuXawzcpmH8+T3q2KgZq3rvV3EHAqp2oChr32bLcbMqBbtEV1gBMVmqmM
+wk3HaRq46OFWrVjQf2Dus/VqKdjRKNG0zNbk9YjBbr59ff+jTZMM7MoIIw2
4e4s1KPFTjWnNVX8CLi72zkfz5djftTP+FRD03tF5oFfieJvb5dMY8QKknaZ
i/d6nIE2n7qXOXybEFfynp2zJP+qnhpeaVyMXRVuYl766Idi6lVmxlWdajsz
lCdZ9uSVlr1BHuypkXlTuyI5P51WjgYmJMbq0w6cSF1Z/VrdgIhZl3/VfevZ
HBy7K/MuX2B2C0ayxrnpyrtF3LgfSBfjF4PqHkTDP94MmrB/JyI5RJ9PK/sB
OgsptFBriN1r4dsGffk5zFtJ8aHvfMiJQhES2ilz7AxfGOXHcK/e+ENq9gg5
NmvrOv46P+qvSkHrouuCcNPY3qtZ0NdsFUm7XDOCG/k4yXcGANvNrfXgPnHy
BgpeQLs8gNJjD7Kug6GwLcIrt94CVeIGr/VNqHaWdQjy9KprSk5OPBoz2j/W
IdGBxuETJLqISehNQU01NOl4lrIJk3CAoWsqXG9nTJEXKyRQazX3wb5TTLlO
Cy915ArqbzaC5A5r5pXXiX5brBAxjixkJM6V/G/kkVY7QFYBJy0rn1wrLcxv
1VkmPu3MN/QR5fDrGHsaw/KA/e2mDL+30F8oSu3+Gqr+16MpKGto4IPrvr+P
zd3MRUBoeeeWerwvh11bB834Wsyym4whZVckzXA3aEerSaF1n+wN2oib6iGU
FTPW0SuesqiQjb5kljNJvgu1zDUWsjvypJHwPcffU5LOiwDjbT4jwgzPcBZf
wUMiYtYA5NTS+WnL5lDKy0ZXAD9Lw+uNqLCDIYHoZHHeFEWZe08+huH4SFvD
mJIZMyqc08unJ1m1hEcgjBqYCIYKmF9UaRIZTjyWhFCgYHGgKpXUoSRERZYM
Yhzxk8e7KYH8jgdx8xNmIAMUvoGx26T4uhDsOBHCjlrX5MuoxlMp+qYBTQ/f
s657X2bYLY5Ba8sS9WSnFka2NHnBoxnyqxNoaPz1a6+K1U96WaAfkhm5dC3p
jLGuiegxsbcZbOV7shkjXQ+/jHZu9wa/O5naZb22d7CRAh7eMwi8zQ9z9E5C
/is/fGi8DT0FVIywBm54l3lpOc1SmzRAsANFiT8vTeIWXPEvMr3zMPmTz2kb
ku7cS4sMoLkR/3KT62XDK320BuTf/2+FxjVyapFfL3mVXc2e64bavVof8xqj
PJmUkCusW52NCfYJRgceI8roE+rhK1/LRjSGV56TLEF1S0wXlIEqMZoDOt0C
iRU1OSZM7RsvM1QNFnzDFtp0R34dqd2dKJY/Ju82hFZJH3Pj/i2e5PBryP/H
JyK7i/I/M+7DBFfk4N246IfDfahRaaiPHhDEFfoWVuZRqG6TefJp95n1JZfM
3itN6LiBnVl+avd6rMVoIsgJe+PVWwDS/RfGRkr4d8PoPoYjnhWnfzefA5TA
9FQBYYIdsPxSDcav+V/VPpBrTdBjKjfWdxnY0vm/Cvcr/9/sMNNJKBZusDYf
PcTHKux2nhe7x+80+QjUmmdO/1o5CcfUqLX00KRxjg9fLyCWr8UfMXRsbkln
hOcEALPp/g3ePCUsmtB8TvTE4w98ZNYiQ69BedR6M9CwSwCWHSwQrJM+XuiJ
8CA1qaR8iZhj5C6rAucxe8dpgVq7Lx5Qlzz4fqHzuwjdTaizBxT4vhsA9CKf
BqsbF7WNwyb6BdgijneOACHhoNYwtN30Tm+a7D4lcm5Qk644QuJDcAqGF3Ar
VwJYZERphNTCr/jcHav97MPLI8r7chirr/t7RABWFgovxhCxJEjsCicr+x9k
tbZC9W1HAvyl2XmFT8zbZT9iMvTbcP+/mpTYSoceJBtCeQ5nqfUsCCSjlqJK
qi/vddtVavAvbilzg5/aqFYoqTKCNhLcir2UxL1coYiDj6OL+Q1gXNL+C+lR
Pf0CUaDfAw7+qfTQiUFT7zJMahkVVzaTe3jdtlsLPnZoGiSBwgpOxUOs9ooC
1/kNBLgVj9/jFRewGBAqCQZYh/VK4/KRx+PFcSRbgucp5FYqzjleHK4W2in4
EI1bGILSiwGkeypximZPmqtbnhPXorTk8jTadG/fZfTZXxgUVB+mKOK/roN2
vE+fC/5OGdcBcV7VDAkJaICFMIqs3+O+kaYbiPT5+iuafgQbb8Th+PdLgxLr
EnO2UauY0yfohLkaCLLvu8NBO5ngce4Gw9tGkCenEORk3ccz0mwLFS3iSLAA
zXtr1OqNlcjnVa8qnT7dsHLBeByB/+wyMAxxXQj4rz1I5oRUcxRYc8nzjm+B
FWbUAkoSlWc8UUWaEaBeqCdXXHdFLiog+J0elu7UxQZFAo3CTOTsr4+NCCl1
tp4RZdt+o/QTKR8zMa/qtV6jv7Lkhc+Yr7DM4BQ5OqJAEqIh9oExLR3n24Ab
DBfrHLfDDVfCdZvATAahRANl+S5/UxpVbA0p2vSppTp40cMC9pKDF35xZNb/
vmJ88Z2wu6z99RKZG0EQm52UAOzum790z9nA1CsuaKuDCvQ9OyPNBPgRl2kU
GihfftG4QVYS2LIJmJx/2EtVbjmVYUpEO3Gx/hHxV/33ikE0UJXMjqBoIZEu
ce+3ipa8g3MgvcKW/7ErBRm/V7JVnwARMRb6V8cbdpxfd3Q0KiCk7VDtufmJ
g9mWeSbEwtI6diTQI2rXBybhdD5gqYLyt67X6F3rfEJOcaC4Cji9oFQQgYJF
LkJ0LBdfKsdhbEu8RhLcxUT0LFf+Ln14Cww/ppzdeUUvQ2Wx4uXucjLnDryR
usxjWRPVoWcuymFNV5Jo/46zjbbGnwq4Hqp15C3kUj0UjhcxR6n7jZsLIDbF
MWMMXSvx0N9VN3ucqBeU+IPCnS8I3K+j9omUZ1nBx5f6Y9QInOJBnBAWx7MX
vyAmKATGMYVOaR0HmAEvgzRoqVs/rfSqSEsp+obwfaBfBbyVNKIkX147FEeA
gXy3RwfkVToHk0gbi7srhv3VuFO+nNIfPokoG+LZ7gRUcMm4BpAeB9c2qm3a
p2z3c4tRA7vlEJbAZW3qgA0FrCUdyITumnwo5PHNjDF0BCkXInSD+OlK3qWJ
WnCOAc83ICGyt+VArRx2xCSK7PSSgIYoSVSC+serqzgGBAniEliHw0in3pxs
U8nxLBJdRLiRv5YyAeVjcsGN1cq/wwlz2Q6SIu0SqqD+SaKf0eLBaVPL/XYo
Pq2qWvXOMEtXc6Ou3HBrmft28c24aUE5are/d9BpfuFMIxbFlrJ3sKcYQGNH
QxNLs0NAUv48A+B7gP2WVJyiAeZarg9FsVlaISMqYNod9dZTxs7oXk5bP+N+
UeVfXGdCbaQqHvaB5eQzaXrYnQM0kKIB4L6arwKmblUUISGSe/17dR34in1w
55p2NGqS0dA6DmdtSyh4s7SrOA0tp2m6RWaqDMyNKvEMshnebQjLW6vM80GI
kbx2NWH9bPb9Wc5vycxc7/LXvroWAJUeUZNeifbhaS2OVw8E27F9WJwcqpEK
uFanryi4TIBF1uXphovHL7G+DvED4Xj1FrVuwpOdwNVk4xG7ANHrloLYU2Xl
apqNIw8qXopm4xe6KnO7u8lRMbDDqAJ67abM35+FTZ2u7zOKBMq7PM08JjMa
SCXCFFjt84rXhsMxw7uUAuJXAU8yEEoJK2aF4z3h0egbxLnU8wrBvIZADzA5
6YvSSrhneKU8JYcWJXLuTc1YHzmfNuPNN26vLWHh3wAyCnQ1bEkxrAPFa+bC
KjQJ33L8cC/dsLTIWZhsg2ITEZ0dPz8VpLUkXvsLyfchIGP0qOWKnfKKoQiM
hBkwWqse98vg9R0l4n9ItY0yoWOVy9tdRislZXhDD13eJpcR99xfbbZYBFuA
uRI3hDIKy5GcgJCGrLGtAh/cR8auq9MOqhRYvOEaGcUN4HbDfC3utzmcdV7G
VPCL/JbpbnLdBGJBmUXuqtVrN9LBfWy8AVhAlT150MtzgSaMBwasiP7049Bb
Z2hqOmnIj98PP+fbAHQ3Mn9sOp2XzphP4eMuvePLrDonNM8MKsfE1TkB/9Yj
4E6NZhSA8uXN9/v1xwr/q7J2AHWaPIGT3SNoG6STGFYkYGPuPq5COM4uoygx
wr/dGBKk2pkxcXJKpnPVw+ng7+HA3WiEWS0jUbF+7dUpFDXEE9y3NPyvkQ7N
6StWT+MjgJdYDGqFCsmAyTUfARbJP8IhMuDazT79dliL0gJ96Xiuq30GEc8F
hFDGmTxxXQC387P331L1Eqcupw1WO2QYhjW8s7pjpyHWjVSe64QsqaS5+E0/
N9CKFiE/SpNk53UvQcIaxqcVRO0aCrPTAnx93qb0I8bkMjYgNQTy+h0yu7Ks
JE29QbaorbR2vWqqtAFLT+976XlylFphATCenI8kSucOP3XPtB39nQqN1GRA
iPvZ4V/1klhLvMjKQhZCrreityHpZZtfe7Sat8GD8fyv2yfWn/UXYofx/LlN
PxJryV/3C2oEapBMvT4YiI4LzrBy6OlHRozO6uuYCPzL3bZBfO9IzfyJKXpD
/z0Zfh7u01fAx30eAGuwsADpYnLv/CjMEtdwaYOgK4aaipvIshVTDNybzVi7
yBSps7I2Fcf3efHO1cVtWRzeAHZlyU+0cgXWOrPKHlKg65Q/pXKS9AAbftm6
vN0vJKtjNkl8lFg3vGuHlnbppjsSwh377QyDu0i0cmFKxfUorNCh7WM28Cdi
BgOXWoR7OdURfSHcFltub3LySnIlK8a+OIG6nG21yb6zp49CCsngIhkUaDu6
s8Oy8TkFrsC3hwPnK6nx8PPlRXgPhc+jxwbP5KomIDKk9EIwGFV4qbpL40S9
7yB5uZV7wPtvTqYZbFpJD7D5lN6kIfDsbStb/PYpMZYYHO4TzkoEgaz/LO0Q
RACZdhscP7M39YbazSWi6RBOogZoFlvTC5cobMypTcgKzJ9vqgdSHYVcsFN6
llCm4eMbedmg5NkkeOU3esjoNP4zbN8JWw13fFZBj6GykbHUn0OLMMyI1gYa
8UMwpytPMcLsy2Ynks8A1852pgmYpy1KV/agFZWjOyr+t5LKOZXAnOb6r6tf
0zxXGuFEr9xfUJtzPxYmjim/0xOf4UZer0TQKSkgBfiyWLYPEaDgtQeFailQ
jU3H9aEAh39sZQIgob6Tb3OCowmCI1HA+Rby+35AuTMGHFmyTWbyxfNWRa72
CW0rZ0fqEfvo4MtD0wZYyF+zq4uDPOVy4vsvBO8JoMG94u4kCjRxPbIHvip7
O+EcTUg4+lcnhp6WnTxZhgNbGqZofjzAA5hX0RNjFwoiqnjHm1nakqN5PTKs
IQSADDT134DtehIyCGxnuH4hIfFyRCQAOrEMkyxRJ8isea9cAf2G1Kc4EDzE
UwDvtlQRhuNAhS2fyKqOo5V8MvKaNCecpyOLpncxIMDZKpEp1u3NWYn+teGt
IYYTHLPeAm0M4oUYlDclc9Z79lm53rgeWPI20i7W+sb+n5TTVbEGLZkC5pY3
wjRjrJmOpdjtITs3EOeYdp3YfUWjbCFQr6vIaiG2fCP7WnC6XKL+07l1lsZ2
oFxDLYBhX5C5snifz4JSU1CRIYziOt4ur1iwWfIqafXL9+WiXbc2mTBcPdp9
ocoBMA9Z+JHlbRp/H21wyFnNT5TVADqXngDILZHldT8saHsiG1w/56yaANEM
JPLlChefx0gynrQbz6iPnnWQpdaDOghT1jnTmU5GNeNx1KJdElsH8yIdfOVC
zryW/8PP/qIrDfI4JH5To5b8yXHh6HVP5EZ/ho5N0rG58/R6IqmrTdbVv70u
PClNCkccxvSj5ra1MmaZO7NRXehL+51xjuknrL1lM/6DBIYtOeEVveBwWIFR
LA1/584VKdkVu8xN8HE2Id9ez45EIYQh5KFakpiw2Fjs1t7SSsFcxZoxrZIH
Xb6YzViI2AWbRARFq/1MEU93eJSbuZlaDNyl/42E6Ae+HFd4iPsAmbg8pTvr
BRuq3di5jcX2KZLBCvqMAXJQcWiKDCRxblH551pNoc+zUJ9R5MDGA6DWPHyW
2lW4FBlfiZ9HXYpo3RsI7KApZRbqtBVN6ciTyv/jGAcaLzhSK1VMsxiP2VoY
t3nq6rHKLM7xNLx+vACSmxqi+6ptf5kBVsQMEuy/l+J2ERadBw0BqfX1pn78
celJrQBJQzqBntT/6k2MKFEFPIT+wTmswn/kwUOh81uazHjX4DXL7NERTzio
OxxQZZEugUldZvwy6UiCrxXnr2kLlcV3eljgSBMdPpl6blUzhI5DczX7M+Xu
xAx1h4e0SL7sWILKp76Ex/JOsgkNJJ9OxqALyahCfCsKbQb1AgSoi7sO+MyO
pd8aBTRalg7svbNHSud/eXer39cjfjuTfUlBpq9vrLERPZGWDx3XEiq39Wcn
ALgFFxUHuoznaMdleOFibn52x4coiSAiSIThIlFIWRnofKyCwUQCEASCcKTF
cDgdG+s3jyJrxM7AJfPc/wjIgNcuOvYnDyYX1rSUeMafk6DW+u8Wt1szRjIp
Jdc7pYyYoQfhf7iRWQjG9L6FuIZjCxotUXhzn58Rdxi09/XcTS6daXONTRI4
JqNWd3rKBRDK1dWigL9yORtfFPgY/fqRQSYofICQfOQQgN2v40Eq69iGuePh
UNv4MX5F5idb1AjFcCni2jj2EGZa8yesswnSPcZ8Uw8QzSMeqQs3wDqr6orY
U7NLywNEe4i1v6LKZk6DKLQA7efg1m2l24IXeOlX2mx2Pi5gAAtA9L/K/pKy
uc4fVjZrdCqgsuHFfD9jG09Tvt8ht2DBINrCT6UytfDWWdjWgbSUzkr3/+55
4QvyYpLyIord1MQwHhS9kTIF2/xVxWSaQIgJeoURFOv5S/+kxI1wweIqPvE9
kwPW597+Ye56/aKN2YHieyt//JNGyARZ6de/rwGjYfWWacP/vKjLFQ87zpdm
eigEPwgmk6dPAOQIPxX6mCTtz8v6OLO63Q98yIAhm6GrUsPZ4E901hA8dMH2
6v+CnFxXd/OPVbhXiB/UtJnDZ+EQRq9yc/ift4/fjD+rucMAOEqCXeFbvNrP
Vk0v4zib2dZcBAX4+XIOnocX990mge/omxmLpInzLmlzn3NgnZ4IODwzEGtY
LatVaQBrTsz3XPXE0qUrDg7sdol1xWyWd8640cK3qRzyDdz3BqAXBl9XCH6l
GAmDf2pjacLHgb2ARjCqm8wW8Oe+qjqMy1mgE0k38o4N4AhuG0Fj2cssu439
Bi0Bgfpqmyva4JNnKczrZYVJdfWkfjSglLf5EnrkvCeKTIgAysCd8br08sdp
eSKqyQw8N+vZ5YdlF1avM1fChev0DMBCjOC3o7cmhCLcMfrSYQFwYWc5rgSB
WvYLX62xtfnWm/bzLml9I6P3fG0G9p1MMMqLrzOiVDtg1tOhUmLqNSEvk0hA
Dm1ELS1wfG6Pv3+R75Y3syld72h2msAGWD7NVV/lX27gI25+fIdUvqcxT7Op
YyXss/YTX51ZYNvYkds2pTPfZtpPBmaZdi8uXobo+eXMl5xp2Vn8ZbihO6uk
UVlKuRBmgjfnK+eW4rFOk6w8hqA93ZpL6e5g7H+qHtEshWCOU6V22Kser84f
19joMa3bIQAXeutBD6WKdutV4BuoAFOer/L6bf8PwViGJrx17zvJwCLAGclN
lr3+Mm7x+ysBJCbiGLeqGKr+bxsL3E2oui73IEF6zSYS9e4eDk077Z4d7xM9
EYO3fk5gktgXe09BtMOht8maDliEUJXT5zMe+TyV9J5jNB1O2qKyO7wnbwNl
tnLYcD40fg2wIm2j92EZLRJJSEx+Hmoy5TbeIiqHz1RgydiWRcVJ4y8/tiEk
1srQE9m+pD4/i/0HHi6brUMPJQ3D8rVgoDR6KUzE0efNOkOmwpXx508deEys
MZwivyFSOl6KaNml+TJ4ALRVYEsPvDInytNkLsp4g/ykFplF09aMtONP4a2f
DinrP4rWmZeBtElqKWU7fEc+AA4KLzIcXtn9gevLxWLBiHAzEBQRNzeOGKwM
AIEDROqHKPO3x4msep5/QAbuxte6wpNpAbh+RleQSasP8jakGIPeZeW99zWw
wFFPXzpWrfKfeRq+ULEFAT2tgMmBydisr3aE8fa9857fmSdilKxYCqoHzdZ6
hhOnzMF460cH14PoQpXrkKUKcdjQs96tVE8Cf22k20xOeoBbwvijH8jkAryC
s69XbDQKI7lRVFWlmVEjum7hrX/x1WdWXjXaztNs15JGPqByXBpobArw8j3k
G7fxCaSl4r6m1azjpJou4BeKQelIJnXV35Z4OzizxHMxKczObUG1J4MO228S
g9WNeZOuER9YgIyQaswjvAABdq89b+qd3dQbP7Rf+NMKQzsdz1VMDZn2xGOU
ojT8+lQSMfhiqVPnnvkBiKgGUtYRxgaSgHkv3ERzGwfSZz4od9KbwjioOoXL
3N65YN3ylqVh62DMJiNrIn7Gm362aJHtGm67n3o/M18LaGccxvkwn+qyDqIc
viCB6ApkM+G10Xbg5yOkDoim8kzBfgqB/Qwea1n+BJC7GzMNyZzKnc9o9SrH
1ncbpYbLwodGruLntiQIt8H18FQX3ep3/wOUW4vrXATJIMkSrXL2PWePO8uS
fA1ZQ3xsOEBqm3k9b25cJYZK28v8kbvxSrIAghUe1voaAsH3MtYSgl7A6D5T
rhNeT96v6O0oYnvAuHKN0QMy8ORQox++UbIUa2yKT11EW1V5eefopdp+PH1e
gbVzoJ7tcOv9U9RZQj9P1IJnv48CSs6FxsFBr+nUy9TXX2Kt1Zk9ys9x0JSS
pD6GL0nYfRYX5q0gRzQFmiNrDWzXiP3IFafnzCdb7OY/hn+JSF9SskJRQQ8c
TMp2WOVQhGPrO4HklMyFZMh0B/ypx/561OwyyatodJaZqwIsQo1h9E+FzD7e
wY+hrMhTPlzenXQBNUqU925ab4OsVOLilrt/uR8GARPgao3RYp2gUWkPIbs9
7I9c9clZ1BDt7PHXJGJHTOi+sapWnjAxSJzj3+gBRpIq3bxnPN+eTn88Vbfk
jdSKb6VxioT9U24AcB7LuUMYIavx6SUNqdwzkzK6UfIIdqXs1mxj7vmlJArT
tbl2PJ2ebIcxenI5Eq90HKrLlSpPHMTGrlCotiH6WdHvO7/vZIai1hcwmxPw
KfoW45qx7oq3kIy+lRFhP1Ll4q3XPXV4w6zhHxGUYkf8kx7xVdDdPjvGCMB2
OT/aZguCMiORmslvIzocJNP1PgActRcysCkbbEjnF4LFLaXNFzDuVEMXSzcl
nz4FJfLp4+GsVWvA21l+QT3mvZW+tnXj873MOXjJDWCiV0P9FzhfRjvFed1D
XEHIHBfbBwuJfV1h5hmmgPNVMkmR4Oc1/nOrEtIPHaAd+vP2OEDEwFH6nHx1
KttxN5WxRE/UWvAn2T/q/og0+7E9dO7CypliUk57LLSH2MR5rCtBT/Mt5qlT
F6a1ukfETAbL4uIoYgE+Ccm0ngd2KEtD+08LbDZhnyPd4aV4K30YYeG06RSo
5NIPnK3Sja99DT63/MDgSI7jV+ErrgdDRRT/otdQPxU78kVlcv7o3KklmB2n
IIK3/S7suMk4/XsK1fUxwIA8prtyO6OfNVA+Nqp7g9gxz7qPapOPYU+rf+o2
DuHMdq4gQ4DeX+H85QItIqJl110tzZ2G1YLwbnNqyQIzhS9GVxtbLGnFLCSF
GVBOUmws0XWmz0K6ygoqkEyDuQXJGIn6kQQ35bjHsLyVo/qrnPvt2SKEFPUR
5VI0Z6/fJykxh1C5mWyOPkVQr+d/y6Qlr7x+8j4h2GxD9E1ooOHc0xF/kjbn
d21/xNwPqX33Q/8Gz2mq3UKAXcjIUZnDiT0x3R5MnHWmfnY4GyUJvh+U/B/g
UYXrtEzkuYv7mk9RGTZXN50JF6qxRiFjD8UdfoL1VT0c7+NZEbqinFit33Pp
kaAzV5HYcED9NzLVzog+yy3cf9GblsbuaqWDWT50nKTADpOdQ3y/k0HJqNCf
nHlxlNaZfuOCuFPLvgiI0sNKcOBaiaoY35OphbkqyhZkq27lSULjGbORDzS/
BOSZupOEVCrMZ3Ufh9zBy+CBVvH6xSDEM/ixbBOKksoUqFHW4SV3QT3ZJuF1
uka4l4coO8UCkzEqf4uSee+bxXR/2IUy3N2pSg78H1cGwJ2WV4cBagQE9w5s
IvgNlRR9dsgyw/I9qlu9PYXTMgpQ6H5PPcSt9K6xbqV5ZWOnspSBy2PHf+YH
WHX/Rt/wq8ebmWxlClAsnA/v6OAppYxR2FP9iJSne2Rsz60TRI5C8gQb+KuY
HFEoDWH+zqoCYjqxCHxdgnj2d+BqkpnLJ6T84kM2Nhm9h2OJsXugYUb0v5py
erkuY1TV4RnYz9MK5lSoetwZE1D+FfuLoNJivg/XzrImJLbDulTc3Boq9+DT
pJHRJfEzmaJlyCq0MTn0HkSA7ohswy5pAlCekaTDeTB2J+g9rPbjel0DStDI
KJioooz+i+cHLRmEQo4LOE+Sd1qcr664CQTwN75BzheshQQsAvBRmpy1ZNg7
WYXyDNO/kWIYQEIkX0vPl76TsE1TrSHVL7J4WaTqlaEorAwDmtFfdMFpBsnH
33EMC/8fSYAc+LKHGeKj1sBgwSlr56q0KDMfxcS8UB2aLlQWXkE6Vc5oW+VI
MSfi5Md2C9xDLf7ERAosVkLtGoEGEWrk/pdX/3ZKIMq1JtOpAlyZnWYa6qkQ
EuunJQwJzYqNypOT+NVSPLwmuNWFDM9vcpGb8dn3dRC5CKVKxXLGDIvFxdwQ
30rt1gmnZ7VoctZwssTqYYYqL1iBXPK/QUCf6j8ecVPLK5wXEEkXz6JS3ONQ
dwiEWqiWc07SmKWRn+mjbjz1dIALnbN9fa1cY4m3C4+sAMt2GlRk+Fei+Sgr
/rdMbYMvtKGeh6U9I+L/WHPRiEE6ncVElksAKi8ynJtF56/fiqbyh9mt4y2P
SDOwwLpTOI9TlNRewMyWDcxPiHQGaP/gWLDx7evPmAVmuTOr6JEB4sAXZjTA
JmqnJ8IIJT1vrNHNFjhcFWI8r6zIeNC8itB3Vlp63RPLwVXiILH/lXBHv2hJ
h0IbLSKiKSPmJlNCiFv6FPkb40GOxpVSmyDbAIG1NY5xA7svNpPc9KdV5VPt
mNtC7967cXWCyjqewszvl4lY9EVjg/6dXLOzgxz/ZYjhrdqNLDpO5P0QNMO5
kUCq9uBVbgX6Ydyw0ISA8MnbHSVJBrgDf0gbB05EQJpYhe7G31mgjsURvuYg
njCyJZXf08FFM5NX6USBKnaYOasgiMaiuObBLqzbModcx9NWngQ7f7PmfzoG
wJalusFyH1nuL01OqX0SEQPP5qQnVqnGilB22VvElBVMA8PXkm8qFrQFQ3Zm
kYk78DoaKxGDTw3WwmvSWQZPcDj6iBR/J9gbkQoC1LWZb3YR6WD6NoFBATOK
Q0thlg3bx6a9p8W22NndBjIvkUbNCBNHPMsg4oB0hCiOWGJxoJwywjCviLn2
rJLPrgZ46NuQg+h8WkB3E9sSAm5mhvpr/Wgg2vGgK3M+nXCIcXLtIGwk2es8
MtvmAjRwfyya7ny2BW+TXUMvlUJgqGmcCyTUClKqeRWjeaEXCaqvCX7Dul93
W+qaGQb9CC0xsUz0lqM1W+y8c195XhTSpq6P/5EH+SXQlyTKb2WQh+lIor0F
XyPbqtIqRfvuPIY3d14EJa9xaTscCMdunLIoW/YDcVA7NdwI1PWN8oLB5zX+
vmTBFg8eDCPdJjMeS5qsGY0LLnbk5u8adbd2/XQNP2VBh+GSj7vHOn5+tC2l
aG3ZJ6nV83+BXhHAwGUnggGo2xLg2oykBdJObyF/F+lmijLxsyaHSjagSkLR
gTzmMvFpNaoNLEkzFG74xAY+en9L45FvBr+7jGU8QrFvPDfXYWlbOqjW/gc3
aI4sH9tbF9xDVMdtoAPczmsDcOiZ9dJ3Yhe6iTORsfbKoQhFgsPwgXhO8gWY
A+PMEvY1ZoL+wBXLkZrUDuUVFTvUGW4C2qtYJPvVMgGdpEHeVhB3teNQBdA7
ME1po+9UUCoXbfANWph4cdrOvgfwIZuKx0oUJRGqJqbbfe2q5od/zuAzpou/
RdICj01vcVfNhg1eel33IcVwyo+1xc/PnAnXlGRqHEwKr5gnIvRwdEIWe4u5
4uoAhHFLW/1r8OGCnbr7SditgLF3lBOLAWN4vcmxy4FYYk/SAWvqevlLn44q
lWA3I8NXR2vJ7CRyYHoPWMz2VQPSh36LCMuPYmeZJerAtrjNqXupQxmBIcl2
I28cEE3DALszuS0YnLPN2DqEg9xvy56A5M52p17CIvwzAnvDnwhxZzNuze12
Sj3B5TCUn9/3TGmSsUN0EnN65D0hD0+3EVngXnwAd3ptOg91fHkA1f28JoY3
+2UQjNIck47C7BHiQ1RtqIryV1qDTSUqiFchi/u0ro2OeryotQVR/+LBvKg1
3H9QPG1AOeTT1OTP9OjH8gxIQp0LDkXM3S4KBUZdcsMdXvQKS0CFCLbJJKTf
pYumUJnITSvw3UhjXe99S89Bd0oWhcZktiFNMYBasha4haSA8tr/mFXjKtUU
3ucBEH3RChuAhbNypR0ZdcfbPx006pfcKAWE3VPnVlRhFKxagwEmHaDcdQAr
4BQApGmJS1J5PGxlch7xS3VwSw8VfeY4MTR/k1lVL1z1mYXppg10xPSsUTEp
MmtP3ZytvLNKptTszcXrLBH2feFHQNKBmjmuEwFQZCRI+FwZ2aKxWi5fkxwP
xAPpl/VA1Ze1OvQeXknvRBKLXlhW3M5j/bO7YtUAQqoqIHPKRx8Adf7mKyI1
lDwE/xUxhjOzsM7riF+6tPDdNFDxS135r5T+yosfIwI9qSWZdXJ2vNFFJ17s
LkBkppdEnMFoOQgrv7L7VKbYNUSkCYXfOcognLZLBdghO7u4y+of89F2DV5K
XIpcafBzcWps7MUhzsF+EhiNxnaplLLhfC5NiKfMpcpVbb0ZM1WHCLUB8JxV
aWsGtt1RvgYjbd/BnLXz4GdvCcBn5wUPC90g9E/lUCcvwLENhom6q1Rq2/4p
io16bmNQwzOWpg1fcAZ6WIvu5RQu1xhVpEXTDNJAQrbvLItj/WXBO5QTNXgq
no/drxXsehvO6UjIoyBkjFRuvRxJX+eeeVU/ytR6ZXSCsuRX07qrnVC6yke1
8L4n78jvzlP5j9lqZeozeJFDmKwDSqmtDU4HAqu6faMQVb31wqdjJuhWZsW9
BzSCmfYYHsWZuWu6NNW24ha3ynPnU/mJdvlNKMcg46XoiLCjUX9NMdF9hMQ7
3yQvGwlHjo2bIyQv8s8IyuZeJCtNdl1TAYj2ZrY6vsGSzdo2zhwTmfTzRuS4
7Z10VvSjc11QlGi9Jxs4xEzP1ZPr3cUMjITSYhSWi8liVBcU8YK2iKxciQwT
+9VMWR3eN9DW2lR0GNOaXr1dmo61a5HEnd88elLwVFQE9OHhI2JvnwYObpFD
WvEJTslyqf3MWpjOAHr8JuE/eKKDWtVzi7NZNJNSLACnxMR1RxZXDQTt+vH/
d3srlBPSVkqdzXHUlfMA4tD6xL/9ZnT65SFbuuPMS6RnH7ikdNHTHy80x1Ph
uiH5ziyq9B5EAtJWMeeRoXPaRzp6FayMeLbmhPO+GKVl/N8w23ImXTrxciid
HmI2xSbie9pMpMv4JY/XuPuuWGnP24xlBOPbUofXw1aOEEF1vCwPo0vqEdFN
QoOdMe2AddLpJF/2wcS2qj9iWtFAJYvR2aGG28BdBq/1NAIZmPFhAl72aWQK
ZY87hT5wS/d7J9vkWVaEr7Jpf9YDgp2SVm7knfvQEq6fepx6RQeDlWe8tOT9
2ix5t6VkDjnnHO/ZGlw9IbxYfeKBZfU16hfB2V8DekzJCLfie4YCWMS8IFMz
vgsKi9btSpit66KWKxJNDDJR/hFXcBzqqqrIYal4KGx/wZUYjprQRd7vEO00
c1oJ+AsaaEqRRLkaFQvnOTSy00OggFiOBNVJD+tbshMqwsR9y1IY5bdO92S9
G6zVCEyrglobptql+Yg8rr/IxBtTs8zv1uYpRBJlFjgpbKj9gABOKsE/kY3W
OXvr7am5yyoomNnoxC/o3+bW4ll+u/DrNq3Mk0pSehvP4ne+Mw5yyblrnkt/
VEXCexcFw9obo42Gt1VEAAappAwNzoYrTUilfJ27MrUEsvjwXx3WhqdjiKGI
MeEokThiUYDru90Fku9b+aqQ9teVZ8wgbiTOY+EN47gbq1AhrvRdfOKS7rBE
hnA/JwiPJjgERo9cUqY82qHe12C8HIAskNTrXsoJZGpWeKs2eTsZtNnr94C/
ElSfaPmCtgNHFJKzZSqQAh6+rq7FzzsspxkIgBEwJs8w6zMK+CTl9pT+pzmT
yaBf6om4qarMR2QRiLT3fAZ0rvjPIGWvKpS80YlR7Kiqcx8XIE5zvMiaGSwE
CJ25LiCn+h+4NVZXWxL06WxQs/EVigOI2OdRTNuILkHvBWhEzM+HIchG7ejD
VoklqLaZMt9jYg0HlBJL5VCkuytiIrfxfHctw9/wPTy112bBlYqGVSYWkMLc
E8lFQlf84qBcir7IZATBXVXsvzJdZUMT3AfZwhEM2jdxU3BZ1DIceBbnuLt7
jeQ2TRFpxrrzquuZFmhpetyNaFaZ48VEXaUFfXnGEkqcJ2MSirzFbuXqdVoi
6MewTwdktU/uBD2TUt2h+pZk7tmBNR+FMy60xap4sdiE5dZV26Ea1sXrfl9b
VGF4kqv6AYhlfZJqbquGy6BUQGYUGgmvSn4OptGOcc885GwwXiom80qX5Jpe
WjCvlOVaQA3n4fcbZN/x1FV010rRBLxgnLaNqQaXQR6JJW25Cwe4fDORRNIM
pBHpqTk8FD86egC9JXWMXY2ZfwV8XQ3eFQ7QvtDs7zDxULQxGR5WooYHGDtc
zX8flIo+ICkCqE36LtCMUkV7fsplqXMd2NqTpON/lqKr+OWSmdFvhCLs7sbS
uZUwK8VVIYby2BP8YeQWOY7nDtw/xGKk1CJ3uf808J1dE4IK+xa4vaf0PaDx
j5xAjquW12IMTv2DO+tvyPdy1L+iqbtIfi85lqqPbHFWme0onjLLTeNPftNR
cOcE3irRFxw21CmIgSaFhW/sooE2j0puQsULINzgjOQlilxXALdg99fXFF3B
RRLFObnpGbUsgNrh5GznS9frX+YpyFQQ2TztqUpL6i6heZ0UxkwpvARhy/Ja
XhCAUnQWh+NNY3J036xTGQF3oVblPKiGCWmAmX8zbTa918Lz01BB4gO0GHX0
OVxKdPcGSJTrEVcekygQNjPpz23JdrRx9C9deoHNikqVAZgtyIvfPa6nWRRs
+n1KolPon6sbchBjUVca7n1JwDd94UV/sXdsFLSObdim3eqxjqHipXULI7X0
T/wERE4tIW8CPEyvH+pio9oOVKsWfthoxJIu8ry4GyDHe+F6HdurX313rYvN
mQ8w4KhmXAOP29F1JNPYwR7NKF5imgvpuJkOUtTMCsvaSiUtJSBrZXBgKZr/
Dq7ZPywxbQaD5dyQOyXEWeea+8grFEtqJrDASsa+BXE49P2PjyVi5IK5EQn4
7T3auIuVZwp2V/Xz6oN1bsTm/9jRiHWAP93ft22ZoCD0giQbyhdKDo8o15EQ
ln01TeVgZszNF2WXh6tZRdnJlXmhZlb98pJTnjHemZdg0Ryk4ITUdKfsQ5bl
/B3Qu8RH+F4g4bfY7+bkim1kMkz83G3WDAaXlD4J18ixkPAk3QEYmfkYsp/n
9blA2zzr7k0TegGb0gz0fqTfkB13RWDKsZ7WdLT+/zsjHRULRPQa9229FxJW
+56SVd0pDH5klt9l82pt5lVBZkD9NjDGaieY9W59PLSDFfDG+OOC/hujj6bJ
WwP5EQU2tnKmag+omZNKlKJGFbO571C5yxm+bBvZ8VcLua/WCuq/o4EimLc5
8eZiTZCpoTe/G/Zs3sDNNgj6C1/X8xZJjaeQZck3yJoS9SfaFUFq5BHqbgyH
CNwiPkid75nuVROIFDslvDE5FyA9aptyHGd0qEGO4pjx0D1+r2Knup8NLxmI
9GrCx2DrS6pSrNsupjKIFdA8fNkNZM/iCnW8ZodtaETziBBIduAKxdwuD24t
SO45Ly+hCiJgrKywJU07vES5x7WMgFSMK06vNksVE4XLdzoxSERFnJ9r7qJq
ViU2ht8od9+xBvqqfhMgSdnR/dtUsdDMoTJZDdx364RqE3BWajkbGmxo5WMx
600FoNo60uso4UYwxxAQUfmdVHboJOPYkhq4LsCzQGI9eUzWacWP0Z4H+TCB
5wwMt02lQVLlKHz313xki5CwcqxSgw0dp1a6rY5Iw6CBxqUSnfcpqDEQmt64
8IhI5hnv+ukzjkI0T9rnF3GkLuFv60C9MrguvzqzzAk/s3ieYZgN9pYfu1rO
LcfKzTy0FtCwwDosEDv++gHcwtOaP2WhqrscPw9GFrI9gZeocZfyldu3XPCo
C2RxpqYSciPZyMhgrNuuurNBxCXX0Qx6dBwnlqmO0KwdqOhOf8RqotN8cU4/
8nEkPYsjTXfCHjgGLgQuczNoCsnyNoAgsE3vqUA/DIsgKagf9Awht9D/1MN8
Sun5DRWnrJlddeFZNMGl18dOJ2E7LrmW2BgZMhabUF3F7rdwwpNdzTVWyZG5
e+0vCR5r4zT740DOD4BhTLogv19I4lS7jFEqxWXyNy6aSdScRT0fIY5pfc1L
T7Uajwmk4lx1hRDlMcBm2UdQkFrQ4uXWb6Zirqpda9S3Buk81wAjAYuQ3k49
bn35/m1PDG8yd3xTnKO/Q/cujxZ1mMVPIAaCNtH8kE7sVDsA4TdFtGpsSQvs
AVw/yq418T2SYlGoxXtW2Jshg+UIDSVrDeUaOHVPu+lCRk3LPndkA09aU/9V
R8XrHWNxlUbKzZ2TA2SQjE/L4OE5in+JkdDiosEmVhE48Sf7hcx/5btUcyDy
4pic4dTPjwmuVxTknQsqqJR7CW/aVObG6MAbNU/eFPa1bOY69ENOiciZ+cGA
UrJm7o+vuyK7+bIidyZRnaQ4nfj5eH2TeJYaBeTSTSG0KdYIPQUxNi3q8o0K
zP5xOjrW150LEiHrsul9ATJJocRA0xWwCOxnyiM86Iya6Iq16DHJj2Wntbvx
3Qb4qaHlzERt2POVfCeuyfjzmgcrFppC6GyWTjXHGdIxpntuOKvMuk0g9MP5
KrZxrD+KzLAaNFcIK+rwpvm8LqokNB6nygV2+AG6OASqkO6MIM7h+cESv5nm
nkva/MZFW+V3lL3WZPbC1wX/sbNPBfhEVCP4VF17FNN+d6uD/HPOKMlgXUrN
mDcl35Hs+yUpemswwTMOmexP/F3qD/kTkC805euDMw0zr7r8RokANPtYEY3v
jOM3A8YHXyVFJi9hSt7q8yQ/52gbWDHjrq2hj5cjcr4+8rRqxsHbN3C/RB2S
bwW9EBtvVe1TFvDafUAjA6PWxKfp47tHYrqvhswQmpYp1rvkSk+3Rzk6BBVS
xnK8S9oipm2I8WvqveQSSB+RBLUx3PJU+haJ/uY/q0xrcpuHynUD0kKy+37U
WRnuUAIewyEWQCn1cKSZVUq7zeDfLDnhKfdlRtnCIhWFI1FPyW0hgSAX/v8U
0fsZkQsgR/jfoRE8wn4jODgiJLbTipxtkCqYYYrSxGhNl2EBk5wUPxyuJKYS
LjMazGoKDEHCnZXfgXDDcvaAHqlYkdoFh5mUJqkygYyaBpvfuWLVJcQ+7QcS
+5xkJLrMJHNXegZQnr4Uk2KeoPin5QPRB6LAKawRtiHd9KwQjOLKx9lpHOl6
kDk+3F1iULNplxF5eu0eW75AwTVWOBpnzzxlupmeJkWmK8SedElXIUouj1Vt
v1oC1opFVJFt60R47OBIH5Hwx4SdBAo0w9Y8oTBEjBijyIMZ2hdw3BMyRiUP
dA/i2/fwRCAKtR7xbR2czdYtgMphAlqU+3q0VyDc2N0a5S8CB6FpGfbArpFV
5UUcfPiUT2QuCSQxFH9sCih2QgfeEOBzoZQhKVRr5dkoXyPc0iiCH2oXSof2
rN5nMJ/SZtOgBlDY1Gf+mYoBUJ6pv0DAvwqt2y94m5AzIvh9QGZyOF38COQi
uVl51/kGl3ZYKmmbW7VhdgABw9B5fKxBNtCQjXUBCChbbdwpqj5m2m74ADgU
IwK59BS2+y2+xyf2cHiPSJ6IQjvboLsHh/pSmIfFJmseUFx4Q5Hc/1o9Zn7U
cJqCcZmGDmubQXCvswsAbiSgz1TrE6hUEq/ijYrKP/cofeMQCcJNVrzeJrsS
rN3B3mYfOuJT3VFrqHCtOr/NpchOR2Ly0uhg3IklPRt7UPLjvnK1FipqOkzZ
5DskeZ50/hmY0MTuyBp9lovjSIosWYB9ftEmLznxpDQT9N3lWoNKC4VzaL/C
HJ0rTDvutL9lnb/ERjCnWz4RYMgjAupn+RPMkvHSKdSmHFNrhUKoop7ViFMZ
6z0owngYgHgsg2z8VsDd8prevN2AyHtJce8u8ePJPHsJUx/ID/Ew6kgoqHfP
O9/LVUJ6CbA9lpOFYTU0AU0W7lsKaEmHj3zpq7bKewLIxJ58gJjtukKgDpqB
//2EKAPBpuNZ41KcU/bIxX75G3+HXIGbdnGDOFdWpo6eXduy13M4T4gXU66P
i1oHALhvRQk/alLUe1Newn9wLkcoPyYBttfYlfIVjjagikFIPGxIulHPqCsB
BgMdJ5EjiQoI3C2HbOnjuEnUvSJKgWo+CC1x+3P0Vi/0+yp1daQFv/47LaYf
yuw6tuM81DhuqjQZbS4zpoGe7Q19xTUADIhh5kpO2gsAxdHeACdX74yydNL1
Q8M/MZDTrfNFoSnhtt1+ZIRXe7WPIwcceYgpOFscvLPq99iEzVXViEsLRlHm
2nFD1aJYE+Chk2btEo5wNT6H+WUcquw6RddFkjNP6K8PTqnjThocCkfvPmUj
K4J6lfoIFzFB78cCp6uDKpup2Id9V//OzobCNu9kwnRXfscHR+zPYlmCD3rt
M3VOQknbUAUGBNNZG63gD2j1oDc6tUfpM1lifb6B7g/u05u2opM7Yo52CUDG
EOwegygEdbc81YOqGieFLJ6NzbgnHn3J3Y+1hsCWMKNHtBX0gsmGuN949VNE
VA7czD5xSj6rWvHkcgwHjscZC84IjJ9o4o1tXKMm1+Bh7wOqGBqEFlZmSHB9
NmBJwB18gMHLJjDMXTPGhUEkSDmnQ2pMCe0S3Yt0NS5KTt4ZedfFv2AzXLHr
S3bFryvmkFXJdWFvUWjQkwSizQ17A5cC+mU6MLxN1F6yOCUceZMgBEfjKAt5
rHLhEnrhLOl9e3GRyyZ5HLnslI+S+bSgRv71rjk7PWBu20CNIUYMnrw//z23
iEVn9mEOlR58KrVno24OZLwGnuWF8HHDGyC9jb+gzoh1/LLQ+XfSzI3biC4O
KsBUNc0Jz9Em+EDsWBW+3ykbsjwwcIxR8HQuuSgtb+sz/O1sYxPH4seQQdhh
jxG38LJTmwzS4LQ0v7QhW19MmMC65/Bm+aWUWodu62Qd7Eamn5MStMCoJZWs
53l/dOpFcJFVBjERuqMJqXVPFO5ea8pCRG/ADig30jencj5z6sAUt1Col3Im
TlhT3fyc7xZUHBcLQ1xlyf1zW4UJvdSbeTbZC55fhTgkIW6hexm6sZRHSYkm
CTlu35D2v5exlobv2yRU8lT+eIOmv0QR9vu1HwDTNbm0plD62eYiZ9MUEvEN
iErJdKJzUR5FgXY+Y7ntx59bK+sPiFVc4qYC21xIcaqTN4RRNEL/Td43roLB
rwzjN67+geUvz7gJEDdvIzlCQGHFFIn05XPq/ARXcIVFJ9TNVXTPhU9/YScN
NASHjK+VuLNlWJiO6idnmvR0B9D0Uf4erAo/ARmuxBcsWymTj8oXkZWYsNmH
8icRQu+AlgBFWRbj11tiaJarJAvTkhp6mBdIuiBSkYQs4OBpu4JBAciErGps
I2IU9A2in6U7bDa+ipoo1EJ7haDlsFCEfklR7vYktRQ3C8UZV2ILYjOcI89w
DBH2O9CJwjWlzRE8RbszHNU2MJ7KpxZyEph0FcFSNu7bAS5vJMu0KpCMRi2u
9N/1xkTME62U+3BMY7cHsxoVKniuLl6kqbXn7Ao5e7vlVEesJiRC6JWn5Nzf
z9UnnBOv/eaCbOQ/zyMehkZVFsqBs+TnVwOqDTIxArjW6VbeEgNeRizI8APT
OL4CbY/j5BDaaPxX2ZSN1326ahot8OTJZevqfg7L6iariMSmwX5uYCfugCNv
elCJYb9KJhCWBj8/b3DmlEeIiuJ5NTI+5JiXhxumgFpkIbDf6A7ElxD+5zt1
NgSRb5uReITsHmI7HfgquYTJJLoeZtP50WmD1NIBazecp3jL/SMy+mckkPc2
9JJrxNONxwZF7YNudUJTy2A8s56gdwBVsqxYqP5T9WfE96ZXwq7fdqn6AT4W
zSW3wXj0ZJM3mFS8x7aoRmUedjOgoflufR+ecBsWoEBPrAEovJa1Iujd9enR
2yX8Y6J2NsH2xOvIQ1cB55BIoAgl/1PsplCvdF64jl4XfuBE4oeIJ+/dPIRK
Hbksl8zd9/c4l53ScqhiXyiFnmXTiC7Nlm6z2WG/R+RCZZzODBc13SQ8pSsn
bL4Ei8kNIxkhqRSXQrE+8QXCheM+oHtgY70723bhGy+bBEdWEpcFth4koCuG
p5f010CGzjOuGovB3WHVRp32dRDJsOSaYKip59uWS9TAPCR2ilDzJ+QYvYux
CLehoLOGI813m7fgOCMr0hu+6qfhWaNuj7yqZ4h9h/mC2nmK1r+GiYlZDNHj
jorygDGrkiHxtqBJjHw5cSeeZBWFTMN8zVGjE73EhSwzr7EMvBKN5lkM/J2U
DJK0qd3nHT7zXLzr660qVMhdepCVAzYzK7h0AS/c34YGDV2x8zlXHujGhChR
kNfNliFX+eIC6DL/2xQCHK0jNhzMy7kmTGBcAyvEz9+WiiEw7YMWnV26+RuB
04SGzvMwS4In48S93IA3Gqg6Q1CfHSBdGXXqcK5h/oG8IhRuuYdyW6gbPLHZ
0TRvgvz+dql0MxIS1jUtK36TMa2ATDbs0eqJMXfyOOif6aTI1alzYivoE9eT
9iV64PONlZTP1avjmSwYAqG/xD9qXLmDTE/U2qq421oEOfNlt7YmARWNqQ8s
dwTPz03sIj18UjqwW/HLFq6SMirRKRoou2jhfL/WgzhgnId2cHXoI5W6BWhL
sARpPqrMrd43DYVoNm3ZwYRdSPpPQcOkU2w22Rcrn1fP6CtkDQaRiSYCZmYF
U1GgYaZbitJFzSpNxNA52A71BGIGyQrYWPgIFzQpFLoTmujK0vE+qCibciL/
TuFBwgsTHsjLewPQT4lJTdmuoCLqITsXwTicjfVWCfxtjfuomoWmXfKS34FY
xn4ZAZvxz88MBRW3TG976sP55B3w6DvECiGbAnN8wKhfhavt1uoWG/X6aRB5
mlrphsy6P7MtlcgsYSeVldJIfrtEUxNojEGtO5LMNMz9fZOfj68MGxswnwa2
OGEc7AhfNDiy5YLlHDzhjLSJcoCEbgiHJCG6g1Caxl16zNjpRir69BKwf9Da
ep3zDbz+PCuUWYcOWgkngHKafFDNWIeUXdxwIzY8rG3e4Zd3WHx6eBZkzIbs
sSp7riReIGTFX0dTlFhMU22b+bKLi+8FyTdsWgzO+HdWMW+a2IarpvtSpbjW
qoSeabLjR7CoZnTyyBg9cZ0gd5JlBv0XdS4ZutzW5hc82QvyQvDOywD1mIOm
H5jmHFt4W4QTqaHGD1+WG2Q5rSSM9aFYGRV8hd4AQoRkqQGVKGoz8dSlsUor
+8XKXfBUCYhgk9zpBEEdkMs6CTnRoZtZggbQFlNWJkfj3jEnm8Wlj9AarM7m
OegiuoHC1Q9bGOIk3iT/71QXU3VSOJ1zehVwhSR85/LY26sqshoOqTDA9EP8
3z+jV429YaGVlYcVpIBMDIiK7Jr1/w//Vb+6TYdhOLEX0M44Ze/on7DQl3Zc
Ap6lFzmkC/Zpesyc3QUuz2j87scsk+WfhYQqR1AQfhekinADDXfObSsp+R94
sUEUvb2i4EJ4kFfzQ8nn4LgnDaRKRrrr8ajxDwJKNBlPfI/mpO+FxsvLlEWS
pVABUla3VlbJU73RHV67TQBDkiuSYggfWSEe/jRis+e3+JNv5fa/hII7DZjJ
MyFy9Y1LaxrfV87b5xcVY3m90/p6HRzMWjHFJ00j7dP5e+FSUDkirkahyncz
0UeJgPLHNmazUY4gMOZE0oQ+B9y53lWul7Jt7o+rm3baZ6sq4DXZ+f6W2xPW
zv4us76UDpAyQw9n1cHE+eH6U3q1WMwnzIMKMIow8iyDRp2nvu+IqGk3+o90
LYLj/VdUDHIp5i3gANB80mvb56vHb9xZmvQc/yaAn84B1gowl6oMK/fgBCp6
BEbkb3tXcvuhyJsFbZEkRe5fOoFV9Ql29O3KZR46Nnkmu1LBL559REWGos6p
J4NXIOqsNgC/VDLDN3s7ydaixLXjKov+Yb/V7eLWFbz4rXSnm0jsSVhPLuf1
n7jRak5IqdWYoHVUzdnWPc4MLbg5RzRkvufy1j1Xu8YEEiuPWDcLl+JJNMzP
mwF340LoGHTDK7XmhUD6Uz41GUZ9fuTb1TdItGo6XcZPN0KLF5dZ54Z55T9d
LHR1E6GjGfvqEfrXKVgQZpQYAc75BjfEaJhW9hc33FbkUAj9PS02JQK0ux1d
2xBPd/QBu6SQlUr1ZLqr3bpyAWCgtnncyKs9gXpbDRHRSiBEvLd6FPSbN0Gw
2ndrxyH9enpsRmdZe0A0xELCw8TEgCwh/b57j0p3NjBUGTCs51hc5jXESahl
W2Iian2el41gONj+Ii8O8emogSdWdnG8HL6Ko8x2JeJFfwQJ+Qb+DA06HiE7
Iv1gvFFq/cKmnXdpP0wjn700yMSFZqQuQaGkeaeJifTuKWbdRO9OduL9G4AU
vYOsyOzIOFoUU5H+MftR0LHvmK3Ns9DkYl6rUQtXxbfMt+p38oUyN3aBA65a
jFSVdBkVcYGeEF1xGPUMu+8dxK6HfhXxqoMXuN1jsbroXfaFBavUkXhAcFb5
krAW0i/PNxwwHOxAImKuYVyVtye8AMMEzCZz2ZTGgnwNnUoONUn39ha3bHEy
7Xv/ZTUzopRPTuhAQpwiPkTomx7vKFmyxZ0d/TnmEXXL7eTf6eXXqu0t89ir
aWXS73RaGpeVv4tba1jrjcmNR/mBHMFEMsUvMuh+HgO0LP4gDaEZe665jL07
QK6x3kOcj9L/6Qlg2qWEg10CuUZ7mKLT/+ROnRjRAadu1Z/4TxROb1KRz3P4
6bjydIZydYGTI6ainFiFSstSu/fUAiP7Ge2II/3ze7nAVLPLjJ8jb/pT4TKu
h7Mjeb4xncu3d7PyDIxo8uZWyugblW5XJhOqZSFRAjSyll0apfSSbO07tA1b
NA62Aw2tijguuEntX6rfLjIdY+8VmhM6QF21NzR8r2pvBZdoRN7DroOXL6TD
bvXanx1vW5FXBiGmSt/g0jl8cs+BoozJtcoxh9JF3k1OI6XBcQN5ajuAOUZ2
ShJCo4dfFLQcY2Fa76POee2mn/Rk7Ss5kalGra1E/NIjZPKhO/t3uXI7XKgv
KOjcC2QhqUE3j40dm9qNITPOEk9Pdd30eES4/nqf4+TMnVAngpkm+y+Djktr
VvokmFmWb4tflqbP69CKd79gawGxACINBOcfHxLOuoi8bD4vxa7ykXmyhmUK
KI55Lj6uITbZCkuKvsdIFLxpHMCXjbO0o2Z3ofPEGHH9lVuJBFgPPPJTFCAl
8HAkN38u4sS6EN1Na+BW5qgZGQiHLPdqoZImbm/CUfeisEqHiyf4FzS2Lstl
GdFsLByiaVNtC0nbQ9x0NVIKlmK/qhkwY24FPx4WQ9qrFTvt4LGAMiDCNdkP
pYrOvdYv7kFfCZtmuxCX+erkc5k98uJaF/7GO3Nh69V+0euYqxmIcK2JzrM3
dlGUxwBn9/3VvMHdknaDfTY8Rd6jeQZJ609vslhKoSShD4ftuO6T5PFC4tbU
E7uyZNL4VrB016PJXiDfJKX7/IsFwnqMUVffmpc7j5S9Q/HMb+UI2qdEnbK6
/RI23ZaW0m5YYxoNA6oZZSx0Fam1V9am+YYCJblu1VfGJplePkw/5pmSWi49
h5YNEXqTOJseOlgPm5Ei37RE50BLOFMmcV0fZ7Od2fi8zNqzV3AnP+pWTTRU
MovaWDDHO8UgLtb+zCH38qau178OC16hspF5njn7o2TIaAUI+hCScnJVQgrw
9EXsX8czykH/Kf7Q9GgLMAIj6mi2GhcFKeno/TmS97OYxktGTi946EX9XVIB
obU30pdq4lhtVNWdpaaqR9AJqTSYVqb8gbkVK0bZWJ0zgdgMLjeVjirPqoQK
vymzL7kKLTgBc4riyvt2eliEuUErIGwe2PCzHGYCRAiFBPj6v05+WAUQUnRD
n+lhQ4K5h+brZRSX0b6ct2WnXTnHS6TryxJY17SEEi/NY9jE4kpMc4o9CToN
Y5srvCAoXfBfl1vSJI3FXQfWOO29yW+Yq/xm+ycEwcwTvAnXPQErTyiL/rIH
5W3Rx1yok0OUiOvFbHbCdIosxG1aDyrY6y58x8Mg9yzwTPLpDxHLHOKaump8
jXP/sjy/uGRqvyw5f4l9pYLu5WCMXHXfz1MEbbYvZNZMPBbm4H6G1xZGJa1k
JLlCxvjqEt7N0r2ebyyZZbPAyQS6JaaekGmOXbP0QVSDTMP1LmseiF5Vos6z
k6vyjwVfzy0YiVJJnFvpaqcl7zoYO9c+V5gkIocI3hQzVPDenLrb/fP+8cnB
IblvjuFLxZEcVmLY0I/cz9FTUpwRPX9ekWp1thzXvlu70DQsA1sCMbSufPAu
R4R9++B/HIlETXT/rhTcm+O9dOtKHlmSvQU6M7pavRlSwuZHetGtDZEdQ4oZ
VxDCJen3Ifzq1TgsFU+8RK0UO6XSKurDynXwFx267ktwYW1cwqAV3EnKkM1A
NzjqOhfM0NHSQwPridcV9iQTWpC5vGyKy9kDbAzhVRtUibbiAzZWAwTJB5Sp
/z4lIy7LaRFnJclMKL5TaqEUHeAtddLTK9EAwHb2vQ8CD+h2IyCnMUM/+SpV
cZeHOY6AxnhOwyBIKHHSV8SnCkHrhL7a56rJ/+g+U69bilQ3zrdEMU5hhVx9
SBf1151OnIiYdE1cnPjOltN8j9j4yuR+aLjJPt1yIev2pjO8uUEjRmJyhY0m
tji/x3jWrKKuVUwTOD3xZdww5gOiQ5l4PfTRwxCgE5eK8/h63a+7BWkxvrm6
2am4q03GyLssNL/pMhInWaomPpPvd8VsvVfEhkWKFrKFyw8KfJRt4JM35Bz4
S6j8Kpe2amLAn47xOjYQAHI8yjAUpkQ0m8eKK7KAXq2HhfVnLuzw+GbnaEjN
awkqjobMtmcu9FxCwTh9exEPjvJhkHqDw+gEhFuCwWiwROEBm/D42+8/7CVW
AEbKSG3nvGQzAmQjZpc3toIe/4xWgMaIv4NE4GLFOw4n8WF0opMuZDIrtLuz
WqweXLScxJBy2aA+gUZk/oeFn8JO8n7CyOqMGvwed2Jb0srAeihdFUlZxy5x
u4Kt9OZVMTZYM18RWyHDcRYzVXxDxn916eaOM6QZuOQWVp1Su2KRY5EqMP4H
hv5CRTTCToDepa9MLjD11ZRoulwgTtaRfdZpRo8YmUwOunH07DznPQ7OzwqW
I4NV31yQaYFF73G50bNBRfcQBbIho/c2MK7wObgbbTfds2LuGxIIY+PfC0Bv
+YbOaL1PQSOpOjUVUicwOByVVk1/eyPeIM2lBRjOXnPRPeuj7L2hHuZJVxTX
DwRAZ8PMxl4I5sTK80ng4PjTHYb0R03M4m6IXqe8+M1Qt7Nv910wWSnGsqgK
IoZPDChvppmmeZ48xIFqtBomdjkvFsEJUMdCJnD84kZH+jFrz/q+vpZJWF1Z
LLiuQg/xazCRGS8XAGBBpViv1AbCFRzvY/6Mm0YzCHJ81q/2W+9Kn5AVDscC
x4UFjX3dKsxrCv9oR0azfa6YiLJ52ciady7O9zjUqMbopOjlw1tUY0VAJ8TF
cDgZ+/GXXYm7i+nxkXLBlnBJOMDBV8iHTPVltTMzjIC+iOP1hmAyuxGYBg0l
8nf8aG0y3xbOCc5Hij8mMJZ6Wm++cvKRDSNl0I6tsk4+nE515EhqerwRGtKJ
BT8JnXoIqJHxBZCql+vlm4IqqVfaPW51YYDjhta1erqObXiK0dr8QGuSfn6J
dJYoessIhw6DSCltFIOxiA8y0kxB/8ppP3w/JMPGAwTjtnKEOGgI30J1hEq6
1JB5GQHuTQXF7Tw3WsbIlzEvOjL9ptCOr9KCO1W9PFVVsMcTJlu+0VqUGbS1
rdTgnf5qLMtZmm181TrsmoWtRIW+DhRQwdyj3VltupcYAnXAHqrr20R2FEpd
yMsWn0HM3BfIoS7ZlUffOrLwGS1pt1Mu7QJE7ZiM00LJoyXEZOAUeWe09eMV
p/ibGwIjuWC+EMQsnmd7/koiB62yJiF0BA6hmhC+X9IjYww88RvVjoUv3t2g
NTS6r614GX5VoGI5vLYQnAa/J7eouoVeys/+gjkGMpFq4oX8KCsCIGZy5AUE
Cme8OIvUo4h7AgifUJqrOXsP1KRuMXOSxhfHhWsckcSm3LtXKYoSG7q6VNe2
lz+woBdZBxz/ZjZbRLFrF/VqJqpXi2oXZB2l2ofWQS+pVnfLEQNQE9r8VcIz
qQS37GwDD9lzOTqmSiNQysF2UHE/gLjBxTVo3MI/mAGKTUxlIm2n0e5Rg1bz
BEpAkWzr+UHe8G162WfYOG0cpRiTeWu/4CKRbqO2Q9dxvudoTS9uFeqXG0qZ
1WLjPb40Sd/ld1gWcGR2bIXiNSZgb62f1/+dm3lnkR0jPLRZLT304ESILeBI
yKa90RMsxhv648KZoUaPc3CKw/X6cTQxIZiDFkgxtp1ABg9WwiztN4U7iwIX
TTeX7Aq0+BA3Mi8kFWCytqGv4qLzloNMVjdXNWJs6zhZkIz7ml6qR3mVCuG4
nzyAEhIkIAJkaAK8OmfucUzpydps76ucRqqtQZYYVk4yZHHc8fjN/De7C0bB
5/bYHE02CCwtGhWhWdpaO4gRxAD/ABNXau36PuWcDTevkHhGat2T9ZrBt2A2
mTSJIOlubFRrJDrWNTsKokPmmqxSiQlG+qfsoIAattsEz3Hwl+7zzWAaKhGw
uxUf3e/gYF++wD9XyOLZ1ZV5AOXyqP22USBhuHFamMr4udcaGj8M/elJ79Qs
EZbjhVVQFZJRWdS+BD+iaZnnUje+GBKFL1pW5b5+40vGIl0CHang60Z1Vk5i
eGj114HkMe3InfkMUih/LxCNQ+5ez3n1SHLg7na3P5V+4yx1ejScF6S6Ml+J
9BdvQAU/TUzZSFV3Sbvd4wP/hRsMMXe7klcEUNYGEqLgDQV687/oPbIHCQ0g
HcO0WEKEtnQXi0IDxcI3J7QHw/1B5j7d7mBX7KaVQgc6MrTxMFuFzFdHmnYb
mA5BagS1RhBAvhBKvr4IBG8xAlE/nA+CcuoEIOkbRIqPs2xtL+bXki1fasHN
o3G2EbTD46sH8L1oueBHRWr6xLXD3UpltWH4HUWPfdypYhqe5iISVjVk+N00
JJMkQrs0d3fSIfFlR6ufxqRHihr8GeyqZiUtXElwqbE9FrJXmI7yrX/z5ld4
pLtOu70rKXxl5Ju8T5fxds23vfCkyQYHYDTPvYaPPLzTXKo9YQ0T3LcafwID
cIEKTr6cznVMCk6jQde5zU7ehjaCzYsemQbCncmBMMfpClpj23y16AQcKVxj
1ZTXBr81Qq4kPbbgDWMjCAh4bVB7CfR4elAWHEazWy5PdiciqhlwViN6cgA2
mQBQpVHb4UZMzQUf6/lKrUi4zX2vzqSwnM/SxQOS8EJHxAzHF/yhqDB4UbyB
VklRoKdSBrQtLZ77TnaeNcKCEQmM0ADx4TGUMx34Z3vgIjrNn1CcpnvtFFox
/qHXHePg63o9+6IfakTzmv0hV93RDwRFEelHpFOYXCztY+38KD1sP6187quT
uOjsca707nTFnvHKYYG+R/AWlv/VLau10oM0aCVsRt0AWQkBLaPVRuxh9AD1
9NaXfb8AlW9BYx/4QHV53ffTM2VKiQuE+Mue3UuvfUxcafOEKgD+FP9/ZTCR
6LwdiYQOfuaeVxcv6c9mX+KZF2RJ6l8l2GNVDy1ZirIwv547JKBV/jEl2ylf
bHUk7ZfbK3QUKf6SFMWbzzxhddugqbHswRFN7CeFFMpJtA+KqZqn+v/8gCyh
HiufWkz/j6admTDhrMgebVBe/7yLxKdJjb4H2HInV7nv5C5uDZ0n305fBgiK
fCrDtSqnBMKqVteqYdwtjUcEr/JA6l1GGNI9BFbHARhyTm7hYm2edob2qeu7
vQ0KLPqcwpZlFR9ecXbUFLMVaj9ucTAEyo5Vr5P9hf26z0Tf/o2w9bLLg17n
+Zhv5i2qUSj+J6dTR+M6bP7wbfylJXLzX1KB9UvPCjZuSZKx1/CcKk6ealHy
ezeYEMQAGW9rog3oMOqZSxnciRrEcJ4IWpQBcc377YjAyHr70rcK95t8BNDv
m2DiodEvnJRbjLIABUD6v+S+ER/U9RDRlKu2f8/pbcyatCue8v9hK7HiAdd3
9pdJ7fuat1dCyOr/u15plrfakMwL9i6QUwK9AHzOq7Fl4I3XNDfibpSLB1ES
FxNfWA7iGcclr8xPlHFAIFgATjTZW/mMZKMCRdOEHYSdBaRNEa1QEx80f9rK
x9uPfujwWy07RdCjaPWj0/s7P12OrmZsAsM8WRi9tnof0KjhNSxuITvFsDc7
1wB37CsTX05y9epSbF6rVrZ7xrbgb5/ouGYQ8kgBIuvXdxt4ORa9CSqWqJ/j
g8a/Vhk6dFhMEno4t2gtfm/1647YIY/GtW8fDg6fwcOtIKNXfwTA6wNWJm1C
JHmL7HhNHR831H2r/ip1E0jKeStTsmX/ExZKrG8fgsuxiFTXZnPaA22C+GT1
y4nIN7wzC7X35VVvIj5L5Z89tH8ETy9T8v1aECB7h5LHBbXLYTYkobfM97CI
IZ85ccAU1YejBd5/+mDpuZbL31o/vRfKPS7RB9W0TrKOejtVEywk4AlNaJcl
i0b+vV66bc0yZRV6i6/DSoudvgOIAuuibMCw24LmJfgoP3QmSY2j2HytXibw
rrU7Bd7Mfbq9AVuPlIROsAeNCPKkETFCiXSnOzbw5aI7vYw8o1IcTKhTXAA1
sNM+b8+83xpD5fXnWsdOqjF7Sheu0Oix0Etua9SaTXO+5QBP2a1KaxU0w8FM
+B1UUT53V2ZH0PIChwa9aJ/AWoVXoQ5sZ+YYPohTMoQfpMVCeYjSYUM01CSZ
wY0iBDF4+WXu4FQfXmdPXUZVqLewyRkyzSf4yyi+Bf/xioVL4yLCtfJZXLm3
cwNIFb09W/uyDi0e4Y6pwQONZXFm0G2vV6apdTGsPtgh6Yqy/8UAzegZWfBm
wi82Bm+MLnDBi5n7uhwYk3gDEWxNZT3bC0P6F4qYdZZLucE2iF5En5Egbzp9
BQ+2NLzRAPZQ7q44uEqHFy6KcUehWdGTds33e04o9s0p8y6C7eBvj8J1vvMF
JTiFyCsslKRCZEGX3wo756qqOZg/sQGPCx64F4b80krQ/JYYK9FwOkm1nlUs
2Gka/ds002bHJSuVl0Yu0p8Ct7vM2cQ0qgkJtX8TMaRWCXY0d/VgAAkI4E+5
ehAEUzrR14l79U4EoziXQObk1YzB/a4EM/VPtUOFjIT+4XtUV/ny6mspK2sL
rFfeqsNn6cwC7Txz5Neg/o2gOh9new+MqvpvDHqiwEVGXfNAxayVKxf3eeZU
XAtmR8rUONifklpGQMf6YC+Fs6n7DssDyx6U+VoJ06i/+0RE8Tawj399CmF8
390GEOy7mw4PTrIIQu84qoJ7ZxjJkRjder36ukzv0SieSOpqDI7i5ktZrB3q
c9HkK9m871Mi8ag6IMMqjS8mu8id5+ewr3HfRnIhpzFdehJ/pvV5e6Tx8ilI
+1X8OzF3wxbKK18MsMRjE0cvdOSvGtDQGuuYzmhdpZVQuV6COda5xf19KlfA
jH6WEBJ9yjUxRxa1ksNJTiD04ORSpOClEcUYLH8XTwVjzKaU0rBupadgAaTa
2C+N2yZmkzSGoGLZGO2qDNgK/u6HDsqxAdX/Agyd1EQT0/2NO6+A0x5Y0AqN
NY9ANQeZxEpNCFCw5U9mpDFs088MfZjLHmVcx+6r2BwPkp/xvPQ0GpJq1HQD
DzaJKSJHam31ubtGHLMup0HlrhEMJg3Xk1ovmuYMnPeVnydL4AZGw//fcYxp
tv3gxJHZB4shcrEEDH5dJ08RjEuSMaaJX7KSRmmEy2P/dMx/Ple0Fyiv4TNU
IboNW+oHRDh1XGUvWX9ZLvGGLW1Awz4q29hQmyElyUwEUl9B0VSyNN+ZkA4K
ay0oUO5kjlR8e0zHnwk2dC0p/jBxRn8oM0+Hmc3JZjSzVsGbzdfe38/k7fsr
znuZdxXbT4sVEYv2aKE4fA3/dr85SL/vgmCb6EAzESfrf3IQa/ezMGVGsq4O
jnI/LkgdLjA57dBXt3HQkGUqFeXtlAsXlAPnNERnswOxTWG/pDz8KdlMlHW3
k88CZS+G7Nc3/rJKJ03ey4DHk7tVmzOlHbfmIZ191RIx59Dil8Ek2msSzc5x
LlIx6d39fIePuD7Rf6aXiWWpmv5Guz2vxUZTbb7DfwAKYOiZGvd7YhbkRkhb
BlfQQ+n+I4uLGf1J7HCDsp0HF/bac5my4mCvYVr3bcmOJ66qqvdLp5vGPiu5
6ZTVH1cbN/3t+fMXrOuY87TQLJg4gO5QGSGdap7us3VnW74wY5SLDrJVSeFe
FCDxicZFPRD/wpcVObYMR1GkU2+1mVAxCiqHuyTOCzSGX6Xqyduzv8CzP/QV
IrlkVL3N9/KpnVG245eVEvxOEqoJ8wL3kl4xp1h/Fp2klzpeypqO2LFZhcWD
vSUtP5KHjz8GgrToFwp9vLK3FmJkAiXCNJjpCBcFHS/GUe0DvA5si1fJJZMk
RZG84+627NQcgoYc/K9wBtNPF1fAbStbVU03vuK0xS5kMoOHKxzSZ3j3iGB+
gLoKTN7LtD38X0dSMvWYaR2mkCSxNXj8T5iWFy8MUnnknlHIEYHnYGNRQZ+a
RUEI7pxfsEjHhE118PbUDRfGgkN5jdgNN64izJ2qWn05/aamYQiEx1KIJqoU
mDnJc9OLSO1x1MznP8ZTTzKXkt8hbaA9CpQJDRu1kcD1xrHFKran3KH9trrM
YgoVyo22mOHnBs1eMbThcu1alTHjovnjT5weLYOhGL6WorvwbbUihxlSl1Df
udxhK23gpr65T+PsMQTBer8RBdM9neDSXre2JfXftIvh+FVV11KwOrK1IpM5
mEcgv79qzgKHIEfdihmAJRFA6lv7AeLMaFTyIDc4aiUb97p7Q0YAg2nevJDg
DTKpLUlWSCfv+/1mza4xefNGK11MMzVQa0F/tNLCOpbfAtTu9Z4p/EmX7hK8
htYlErqQ4XrBMAWEeJWf7usUd1GiYEPHWxx8eQcvj5CgEF47Pq1QETYca0IU
8O7kZgnP2TKVThj74VkKdJFoc/1915vSlyLb+vi98g9uRQGtWvTL5PWEiASM
BuAvhgIOv4PDhi8atT2H0CodH1Fza13JJSXsJKwYbOIXgkoy/w9/vWfwo+Ac
5VsZjp/hdBqUYy6tfZhuSRc8kzD7TiFfLzIFQYIZBeNXXE+yPBA2kKJ0aptM
K7AHa3nagJ+l65EJiNj7T7Ae3Stu0XNRdhShEtnL9Ntslx8M7ux85mW1yxBv
5Msx5K4xmRDiMd6KRePSWkJd4SYZDa4CNhbGoPLAsqQWAtzDA+cIrXF0JX67
4fuQNj0e9Rp1Pn55vvM9v9yP2CbEJJb826NukO8zcvEJVusY5ie2Awa85OLk
U5LlYvV/RhLkaHLKiMLrriJ+2abLOnABBOZNj7wmQgHbAYSDv4paTibtynyY
c+jiGi7TlWWIqXwWDO/GzY0Pjn8GUgxMkyCC4RHfbj6N1h2UiOeQiwgWlSGS
hIe0WY/1BzxQXrPe9I7hDhTcL7i7QVOFSySbcI9xcXvLfbOrK/8kmegHUxTj
y52ZY0uL2r2P7SNQHSO28AfjdfpSo+wCcHFwUtVYQjZ1s/KdWGz7Qm1eDKO8
GV5WDwOZ7vUoywOkruMl2i6+dyeu26wpprbgEWE838eyFaJhSJf6JehnT6Vv
GU+3d7FUy3+FvvdI+4HO/HEZQlL+gWIoXG5WunqO/wKkTZnH81EelX2uOGwd
lDn2RQ7OZGQCUkKkKwxCRgXcYRGh2zr4pvNRX2jVxOFQw23B7QqKFe//WLCT
IKqBsPRKL8PgagMgI+HsB2fA4MnBPj6Hr/KYXr8jiOoeEFxLYKU3dKzrt497
kH+IEGbgtalzyJ/PnaSIqvrrwb+dA7x/tfpDozE89MB44QmTAXu15WbgpFIX
KDj5iQWpKhmkcnbGjEvo+SaDk44K6uo42cVfj9VpYiwrDk0OMd7RKyKclhbi
J9eyelwDhSSMuE6kWlOf+hnRTh0WbZWjGPJvrK+xYMPxU0+6boRVk8DB9Rcm
GoHAcldiYJb+wQC8zol2htrbqbqMPep7L4RRRbWH2Noo90JDNi+jfVxTLHlz
DZmua27vBFDvGRA0Y0nz+fBYNqh+jxAiMc0T5WxEENoxR6TbVHrQBhqSPVeY
lUGaRbZPbS6auc3fjombXD3dpq7+wXnUWWwy4r+C7hJhqt1Rze9nx2SASCJ+
4fCoZEwTQvwBCBVxPoyEWU/vKvvF4FQWx7Cj+ECU/jJcRg6CUS5IsQIkC+G/
UgRY4ceOepBvb4uh4xVeR51hBsyPzhRK7LRzpIX6qJE9lFyN8xnfimgw/YAc
O8yUs7/BK9HrjIgxxpREv3d+5WXX7Vg15xjhUeGU5CFtFem+qq4c1lX1aCW5
/qJZFydTYFzpCw1wkSw2ylD196LFdtJiZeen27zLHYEeaU+VecXWuKaGoUVp
eXHdh9LrIKtpiHR21HWCDuxoaAu+Jf8BMJR/hcDVkfsyKBRiBP/Od08dDGWL
9cehdPrp4uOvXdpqrkkRP8/zj3sIqYkKc21pcMtI4wzd2avpTjuIzhTna598
PV8elrKbV+PohmiqSJc/749h6kp5cvw7zKiTeiKPGv6PhAT21nHBNyH7iLKz
OrOICD5B027eBKBA3+CppP3uDRhiUdj9ILX0yGHm7zuQhx1XfjKxCkH8Gkfc
capAhZrmlSqVyefvoFuPALX0FXanvPtbVKDfs9rijPKmXWRYSJR0m/V/vJOE
0kXHzm1+m4Zhx47Fo7LopZyVQTWnffPw4ZKGiKvVWpllwJtD4yIFVmevcIxU
l+CwMG3qbM0AwyiQlukSN2U8+z6Y3lrWgtl3yt3FKLOm7db356EcRMTTMR5k
ZonNKqDRAgPI6OOBbpcRE8hTsym4tPiSQCDUqPPHQlOz606K0I+1Z1ie3vP9
qf/pIXgGM16yhJnJY557AsSUWi4P8sCFRzpteFK4j/9FICP14+R7w0kN/VBD
4Ydxt353su/XjsZYYd0KqD2HKxx5BWnAlK0gfOocoa/Vuc0wtYRMbh6O/jFn
LkaQLficZDOWNtYKsF4vjaducvDlw9/IuLN3+UMgdnxs6diPNqStPmpt1E0z
ZixbgXE7+qufDei8HALlHniL41upaAf8O1zLtWYTlwNnitsNDZSVHxP7wacp
cNH2wCJYESXy4cF0LsOrp1ntaEpuM1BK/nFw7OTWga4QkRVDZW+sM/Y4UmXZ
XT1Q3UFpoxdMuc2NRZJFuOy6b60tX2SDfRwdV6GM+L7bSwSElgoQpQOAX+mW
GTYIAYb1fplUHBDuMk0yJGvywbNfv4Fkc2LVtiUMEL3DpsSg+jfu0up/cAi7
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
k9ZDtZnXUjoINy5Vaeey93SUA+lTAmarl/YQ56nYtBhEO535zvTSHekElmZy
8E5NzBqA8e/sKbwGZMFKnGv1lfE64UApBQwiUaDpQkAE0D78fM9JAXaqGrBd
erWx81vsvcfE5SPZKA1EhsBazPf+F5Or6sCWDm0DtNdw3aGvWvZUIqOAKkU+
70whS8Blr3HX1XQZ0bJAI8mJc8CSspfhhqyfvWNfwp37Ej4jOJjJZNZznIyP
8BoKe84+Y26Uz2mmyCJcWgwNxePzGEAPTRUz4MgkNVfD/P95BKo8dZlPSDde
nRXJBecKSVIVh+ZvgW97N6CRyMikpMX2fNdutEwQ4rTfBqiiinyNbHmx1lSL
/AidNGCzaFHEYItfuQ3SdqTodqEwP+2nNeFXMB7BC7riowpxEWZbYrJXHir1
YgvjDb8MDwpbUc/GQ6YwUj5u+dXIV5CGDqBVmItsoe4JxVLPUSdl9CkakMOP
r9obFHs+hlDWYfCnnfzC4jucjtLgvCW6RYDjmRz56SLrleSNVthU35yJSyQx
AyJK3RLUrL70WoqAuB580XMhhMNnA3FduWH8BULuPkThQnH0oXRNnieUVuXq
nUoAZHAi/59QUPLVZkezes19aXckWEgCzZrxHK3PztgARzOclac848LlF3JL
NYPr+tc4w/mNa8bEWG9SBlbgm/p0pfa60JXygTkjRuH5VQHf8U+X77WO5mrN
Fgk7gttmPkzP/POFRcmbedfzAubTHchqsUiAESB0eEsXHdmaDojMZNAbI2Yr
bPxl3jytgnrjFHU2u6VsiBYHrt6HVL4Caa5txrlEndo01MZOBEuIIx/q0J1s
jGmqhUAqFmLoaETBZ/wlQpH101uil1yZSd7NLgw5UlryJIamIeYOlB+OzdR9
9JmdUMpRmSSLSAMZ8krpag6oADqdcKdGNjjLS970kFY2TiNVa4XVJSSCBXRq
ySLXdIcqd12vinWaKmjXHwRSQ1lu2Xwf6zV5qW5sr6OvgmeaxHgag08tuGcq
irUIwt0PqcG2/cCfku7il73ue4HKdCxLciWSwZ4h1ZY9rYu62R71je3lbYLB
gV6n4jv58FSxrlJPfLPbX7Rw6zBSeLnrJzTAU7BIViphfFf0M1S2XfIrisFL
sCYCgVffDxC2W4CpDo1RxBBeMtRBO5oEnM5y8HUR+gW6uDWg5+9W0eu4TAQf
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
Aq+fNaYu4qAO6tlTJvEFJm8l0wqb326QSxQiOyE6mP9ZvJO1YtufjwGwP1ae
7Ouxbgu1sEEZw7TL8Pdmjg7nHW2HwVcT06S6b7Oip7hLqTYHIZdCHLW78RIu
iwXRtWzuWYty8d6DYvC4gqjfWMTOmZr1GcfoAiwARHse3tY2oUIGAnfgE8ZT
KTXNj2spHJlPXWqSvgkDSr4+qskg4ubWmnUv0rc+L6OLURZzi067UZ0NLzWc
7oECGorUplV3Ghk5s8lhROp+S8tsHf1efgeAMiACAcKttMvahqoP2jCoo1IM
AAXWXZogKDS10mzt4QxRLL0TsVMbW6oJuLIwZReZHd6kq58G1GOwcJYibtEW
DqWfAZ/lOveH5j55U2+l6vGONwA6jV/5lpHs33xRhlLsEmbkox9JSEZj07k5
s8HKEb5L67x0EVD0tHHooiTa1v2HO8fMjHMo99aJYYXaqxIOd/CispwCwJOB
iPrX2kOHZ4PAhvTzsZem84q38UsvSN2tqKuzXMDeST3WtCGqobyRwr3AYHDQ
wa6uRd/JyzFqBPETKdAZUxDy2xoxFtWbR+9Hp0X9lmvNIFNfFpzvJ5s4TvoC
d1VlojQaBinXilDSVbQjrcZRklxoKj2maoKvK9ZP83PSw43qpz/ULncCQxnR
eC8njrWhJjbFGApmhPpnI39IsASeg1wq7kD5tNcpfChUCI7bc9njxyPyKzau
iV7el8kbt63+szofeBh+menOnMhgBj/LZrEMRJ0hZREhE7EWRp7LIbLW4ozw
4ptSebAkoxohyLhPU7hoIriPZNZaIf0hBqkLuxCnNKaXJOQrrbIycR5s5eoq
AjnadTpJ9qdc9U92FgBUMFgcWrAY1u0TtGtnoYsXwCWopq5gyQfTuso7xHOW
VVXYyQeY3/h0qiSVc7bbZjKSgBykxNo261a5sfjCfqlHiJlwtfW3j/A63ll1
9756fa84SZRqyeJxgwV2aBcvLrfvKZ31LG9v0VYWCReUbS7NslwcB0dwVPWm
i//psJGeXMqwOYRi4xoFmnbJxanrQKKSVlbsDADhS3ye6TKPQnGM6X6+p5PW
K/2rsJNDBapjYg8S+FClA9h9vAaNOtW8Gzm65NcGZlUapT6c5TrEnieGg+l1
h53tQbKL7nTrpEaxJC5Nz3VpR5Bx5dqYztcpbASdEE3bt4Q3vES3NdC1UU00
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
Fbd67f4RbXlAONNgCCtUncfjqJC4yeNCfeeiyVz738tujyoCh5JnwEEEVf6r
pNh4OSuskeb6CTrwY7Xr5I/Wf/szVCgPEIKrHeII529vj9Trl+RxNjP1AiM0
OlFnAWjslJOJQqEdHqAmbbZd7RqMlvPwgNcWDhq6v6INXVqa98ZVLv9qY/PO
1eocuPqJefPGkMYEvq5XoyL0XWINkYNbn8WC1A61wzx9sdPn6SOrc076Jahw
52zlhfYWELVD6OnBrU2XBjSi1YXCQFEKCDHHu4B+VLaTkq37o1QLrhnNnhfE
BCTt91dYEMWEvOchNRf/zZF3y7uwTufoDlhDvNuWEi3xhY5D5sYuqPoWGDMQ
6uOJ0LpzuOG6PmEKTt2mV2WUj7rvVoWaS12ZbLMHsoChCMAtl4u4sczXNBkr
wpsnl4o9P4oUjtieeGhb3I8JtYvaccn1t7Rg2VD6u7kJULB2+2vy43kjGIxm
DSVf3sEgwtI1y3OTGTEAtlg7LECD1q7tRpjGtZWqpw5t4hIeyunHqazVp7sh
WGO29EFhtpLLk/xqOnhA8O7jD+BE6Bp39Fv7C05esn43NEI5kZvjuac104Xb
umpU80ugC9mjC5lQj3gGTwslFSGuW6hf/G9spkCL5xfshB7HqQNS2Mj5mIbV
HhIemQ3cHJT99UdBFJ3uBagYEdfaMryIlhy8+c2+Dn4jXYitYBCJQNcSTINQ
oH4PqsJAQdn+w7zGLh3OHv9vNJsFgws4QU9wUJtOzCaBeL1zvzHJC/dvBGqg
ojVbxFPnvtWtNdEJnWkQO/4WwW00NPc1B/vKiH2hkCyBH0t3KrQ7yRLpNNrm
TJ6Dnx2I7zfxPLfAP3OSnLjNLEfYXv3PcJGqNclR7KtdAfUd4EMyUyWig6V0
qv7Yl+qQZleNSaZVVK2ntQMQhqZBpUwpJXxXswE0AjvgPlf/8fNwhdNFaDFB
tdfTje8pLZrmlu8YTgZIl1sOpKknKuAFn0V7VuJ19L2zMBcX7eUUhKDlN/RU
ITpfKAq560gMBzBdKzY8raleLyKPFUJofdQG67FwO9sClF422cIMyV9UBbjj
YuaE/Kk04rZIS43v7XJ5tALMYwYeGFbJK1nNtzxSzYCfLl4lyJxkGntpV/s0
iKInLMJ1O41A1WLgJaF/X8YLmtmvvSAolvEHB/JjDF6xG5hADhMWm1KRlz8E
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
rI8j1d6uUZdLlTf1TYJyQCJQTRdUkye6y4d7PErAFHMsGYBXbnLSToSthVAr
CHSGpDo742L7vgxZ6U24JftsbOJmQ1VvJDR/BRkuajTnnclmo24YDiJEBcxU
3sdpDCQbl1RLvcHGVuTsUBROu19HOOfGoWRAzmhYvIoe7ImKUAh9vEHQgOa7
jRpysS5nrymCTdwR2U9yKt9Y9NU7FDZGZ5q8ZEooMK3I1HH7rLQRcMPLxm/X
LZ6WT4w1zKt4YaswLQfwze5J060E2NHCJUBN/bxyUGli3Bb2o2+40WYKfNZK
/yY0bXQPasxxoTFlpVgeFP3YanLTHnYaO3AtgImL6YNK38UTfvVQAeAuRNTG
ft+01annys207glbFQaB4jZ14lIYhfSjlDsIvj8Tu3RxkH+LDtF4iw/RE7xf
AQo5b/5AbuOs0wed4yH8TOWbiDog3OztdqwpJMp0SRqGrGOeMLSRckKKHcSx
ZWLR+YItvMFP0s4JMhwcgorpLKKHgYxcaXOUoolSSUUUIEpdwXX0wt7Jtvvi
Sb4hOhqoE7f/mJkhwcu8JCwfHov2aYSxHwav+ymQv0sp+32pLupEA/+ee+I/
l6qqix8shvHZw8KjpL3e+T+7NjPd3gYwPOrDwNTfRs0QDxJgbpLo+y5hwILt
C9r65SFLho4uawjaKAVQ4N9Aj9ib1GyrbgMKd121Uzr2BT6fsUjfkd0nUv1y
8F/uIIQZTL+zP7LLPWKg60B9Lp7n1R7q9SGvly/8Pr9kDQOxzQicf6b2CDV/
ONkFqe8hy0DO58C7sYYdmPmNi547vrvL1pS1ZYAl5o9Hz8tx51LiplodiYAu
AuDvIv7rqC+pBlSdYPWWwiO9sRYNOsuaGn/vWrpGeaHmkeCXKoN3+6uz+Nl8
71mzVqKDaa/q6ayqrMxBkGS1hnLIGkxUqV4WyT1qHHVp9x4pGuXNYMrmdkW9
HR0ddm7bE0yC9WKbk5r9M+N2yXHmNR6QCqP99o6k0SDQimnEnmowxUGcgnus
+KYHlyA87n6UBEQhiRB2Divj1F7fZfzyZQvVGndUxvnQvee+JwtW8/vD186f
6ZoWsGI9/KRjn5hpYrgeqeMZqteeIXLt72HZr1hP3ZTVTrwfVe6qzTX5+zRN
2jWu8wIcAQeuLKmQ1O3jkYUSICFwYEG7uS77pXk9ma3hbFMk3OJxHLQ6pSyI
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
yPOkqrT8jwYSez/VySs/iGx0g/lCRX+IcYrZtgwkdpIe1xHSirJyRlFv+GnQ
Aqi+9sG56e7tytqouNx9HjLRbFspd54WykxXicgY32gve/GChU0WzQDZKrf3
5ptLuqY3Zy+IiMUaTBkI8tqJFE5Y9Of+xulaHAY0Ep95J6X4iWEmGPmWazDJ
cgOOA2sOrcJQrVUpVubLZySf58YY2osdj2ZSVRbqZ7ZuSds4qj0M1PqOSXWJ
c25KE0CtzfjMP6BlPC+KLCniOSlrQIicoHrYZHDUb9YXnSJftVuIzOMdrj0c
bXgxawMzGXfltTpl1SFKl7gCY9nFwNz/u0qZ+VG1kPd1VBtz5e0CYwJq9FD/
X+BVTcxhxvmc37tRGq+s0k/wDBe+Ca4EPWfqIktoda2euInPJcE3U3W6FXOC
7iGls5WOLSVQinbx5wGdHg1aHnSwnKbfHdgnuLcIKs/u1VozDdDCErTDqE2h
qn5dW+/461+jwzH4dh43CuhJwCj6MayZnqt6VFk0PiFaj/6VOlYyoRIIGdMl
/WwUg3ahRPbdE0QXTXnIO5ZibUWx+133SqhnOR4b3TbC3tEs7i4m49jpsGwT
CGUmfewsrzqgbE6gib036gcBeB1RSck2mtJ42t/2NrpZlBj8GDWUJXd1rAJ8
1MclYOndvfYuMGd3nca3AIKkdnJsaC3SFTAzSyNJa8XMtlD6r9df3m5AsyRc
3zCReQuR2cllMkLy5iasZ5pTj8dY8EwI87IA12mzm3lZXAmqFZLm0xePmt6w
nxw9laSm5DXZP0o+CH6jmjF+yF72EHedKcXqVODKFmm4ZBAZNB6JgOf7P87F
imppTkrfM5aAqnMXyhb3cATeA0N+QrHbvDhqSG1h8aMM4eoa5f58ow/IVVdL
0VZHk1elDdzaGsF9XYn3lbUTk4iIlvTDoQcvNzHyhG50M/kJtIsDUQOZVEJ/
3XunKxbbP+lnKIjFL+2sseuO9cJ0Yf1PyZi8FHnsEnd8Gv1JZ59KS5zSJWdM
8C2fnGj1j1mRau2U0+tJs0SWhWzgVwCTAlsHEafzH0jV8gdxNwGXUCVH9ziW
zyCPgdMXOcnSis9N0BthCcEbHTQHm4GRsQTNygpxse0gv8gq7qvX31foVzIU
Z31zFa4bLz8u2iVj8DYGtlAqpuloyxFkxaTL7MoRMnu93g5J9loko8c+r9ja
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
UhI6daKhvtqLJnNUZgjTXoUGjRa/6PBlEzIRoKujlieeE6rAVYq9zC3rprTD
ZrPixduLJr6QefChkLD2/65yseGZ7VrzGSNlV3yaTmLKaIoARO1DwdlOT3fR
Je0tKPlmnx3v/Zj/7EvJCn+f9O4QL7lKkzW9HawSatIJBZsw1mD6Xc91s0FV
MLRehA1oTh+Wq/hUA930PYLoE4J4hkMmVVsC8087Q/hjkweJHVSvYJ5StVk2
EHgu+8XQTTZ9eZS19aU9mjKonL3eHh8ID7Om/N4oiNQldHY4skH1psPhfehf
ASa2jA4LOkIfYiGTlwDUsl6w/u4TIc4oBBhPPOeGc/d/2o5egoarI4ml9DMO
VHJtRzH8U2hPbo4dKAwYb1Bsw5+dftECoWNzYqoBVtY4ajxD3PrEud8iNRM3
gaOALOfgAe/BD/8povuA+wrOpbgXMb6VS9hp9RuaHwc5Ija0VlDACjOBaH8O
0LpYNaYwAMoNRyxBBBSQya7rICClCaBMEU8rJNNnfVXUspFBHceEgs52LUZn
86iq7S+lKzbq1loczFiLdKZbMZnHHm/QyLeexTC/JbUObwuOzIcJ8bXRSGx+
NbC2Aum7ZZHGaldLCcjSfdGJABsuwC3ud09MSk49P9dJfC0ADsDyy+6c0Xz8
N7MMFr0f1BYxDagMNKcdltjFFLiWfjU/HrTD3rBPAhsT53BXMqmBlhpgbZir
jZRMYnVnP7tiJWYjE9Q9f2PLhHgeSUFWwxQn2ZBwYIy8AEJ4Q4T/w7nhy8Dm
wHKjwpCoOSp7G4JPh9Vknmd8JyoRvuSyawSVMeE7woWigDCNVRXvrny8m9Sc
c0a3F0elLN3OcPedhGKsWvLnJthWIbF5yGTi7JyTxs4MpNjg9JS9w5Aqyo+D
iVxGqW9o0MnGDZhXGe9X9e9Lpa8QZ/ZucErUw6foOu8ODRfbgh+hD4QTwkT4
IOzNZ4FkzYHN0bkJNqwVhSjJztDDyBKmr6bZhZ+eDrzA8pVBUrpihawYehtv
TZqwDNQECOqUiftHf3OaScMBVxvpwxIuZIjjd9uGR7VN/MxlF9VGj3TelamU
JSJDWiqvIRpYLccx/LrFKmM9wFz3PsaKR7b6ADOxHi7GrNQnxUf1IfD9yyDQ
oXc5iDnkkacvWF77rVrt9ehNeSw9Vdjojg3bbB20U6x/uZhqY+VIv23KSuAw
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
25Zmjg2DpmNynGRhc/MF4e6b
    "],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.883234976708149*^9, 3.883235020878089*^9}},
 CellLabel->"Out[61]=",
 CellID->807387143,ExpressionUUID->"2a6d52ec-7d38-4311-b5bb-aaabf78bb772"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RandomInteger", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "255"}], "}"}], ",", "1000000"}], "]"}], ";"}], "//", 
  "RepeatedTiming"}]], "Input",
 CellChangeTimes->{{3.8832350025065517`*^9, 3.88323502063098*^9}},
 CellLabel->"In[62]:=",
 CellID->302103773,ExpressionUUID->"da1c4552-898b-4a28-9518-3767d688c17b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.001432642578125`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.883235013654254*^9, 3.883235022977562*^9}},
 CellLabel->"Out[62]=",
 CellID->2127475667,ExpressionUUID->"acbe8d10-13f6-49f7-98f4-5d5812e667e1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"buf", "=", 
  RowBox[{"CreateManagedExpression", "[", 
   RowBox[{
    RowBox[{"CreateBuffer", "[", 
     RowBox[{"\"\<UnsignedInteger8\>\"", ",", "10"}], "]"}], ",", 
    "DeleteBuffer"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.88323467606875*^9, 3.883234689964693*^9}, {
  3.8832348287808228`*^9, 3.8832348349247227`*^9}, {3.8832348997287807`*^9, 
  3.883234901718852*^9}},
 CellLabel->"In[49]:=",
 CellID->546368895,ExpressionUUID->"24857fe6-8301-409f-a45f-736df4d34592"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TypeProduct", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
                  TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ManagedExpression\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
                  TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ManagedExpression\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"], 
       DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("DataStructure[ManagedExpression, $Failed]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.883234690300465*^9, {3.883234875121275*^9, 3.883234902096169*^9}},
 CellLabel->"Out[49]=",
 CellID->1890042681,ExpressionUUID->"c37fe846-101f-4533-a1cb-2d7278235e7f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CallForeignFunction", "[", 
  RowBox[{"randBytes", ",", 
   RowBox[{"{", 
    RowBox[{"buf", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.883234738746394*^9, 3.883234744652362*^9}},
 CellLabel->"In[50]:=",
 CellID->1685366009,ExpressionUUID->"0eb055c4-9ad8-4c1b-87d4-d75909b78b0f"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.883234747601696*^9, 3.883234760814127*^9}, {
  3.8832348840582743`*^9, 3.883234903529954*^9}},
 CellLabel->"Out[50]=",
 CellID->1000078622,ExpressionUUID->"a334208e-937d-4183-8980-f4a4fc524eea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BufferToList", "[", 
  RowBox[{"buf", ",", "\"\<UnsignedInteger8\>\"", ",", "10"}], "]"}]], "Input",\

 CellChangeTimes->{{3.88323367898449*^9, 3.88323369966337*^9}, {
  3.883233831549364*^9, 3.8832338347424498`*^9}, {3.883234695703636*^9, 
  3.88323469867764*^9}},
 CellLabel->"In[48]:=",
 CellID->998498385,ExpressionUUID->"67cf3c1c-4ca5-44a9-a846-9f1ddeb2ebe6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "168", ",", "117", ",", "34", ",", "189", ",", "125", ",", "111", ",", 
   "114", ",", "144", ",", "102", ",", "187"}], "}"}]], "Output",
 CellChangeTimes->{{3.88323382898779*^9, 3.8832338350116053`*^9}, {
   3.883234699028573*^9, 3.88323470015143*^9}, {3.883234755442478*^9, 
   3.883234761339512*^9}, 3.88323488497182*^9},
 CellLabel->"Out[48]=",
 CellID->1912756573,ExpressionUUID->"c2148504-f6b3-41f1-a71e-e7170b98be8a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListToBuffer", "[", 
  RowBox[{
   RowBox[{"ToCharacterCode", "[", "\"\<hello there\>\"", "]"}], ",", 
   "\"\<UnsignedInteger8\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.883233402926264*^9, 3.883233435153784*^9}},
 CellLabel->"In[25]:=",
 CellID->820721599,ExpressionUUID->"e75d7b55-6c1b-478f-a302-02fcae81bea1"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{{3.883233428077374*^9, 3.88323343554502*^9}},
 CellLabel->"Out[25]=",
 CellID->1329021237,ExpressionUUID->"5144208b-acba-4a05-b3ec-2af39af73aa6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ChristopherWolfram`ForeignFunctionInterface`*"}]], "Input",
 CellChangeTimes->{{3.883232716461383*^9, 3.8832327268827267`*^9}},
 CellLabel->"In[19]:=",
 CellID->1391565408,ExpressionUUID->"2a1df921-88ec-4b7c-9af7-639123a1eba0"],

Cell[BoxData[
 StyleBox[
  FrameBox[GridBox[{
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          
          StyleBox["ChristopherWolfram`ForeignFunctionInterface`", 
           "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], " ", 
              
              StyleBox["ChristopherWolfram`ForeignFunctionInterface`", 
               "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 StyleBox["BufferToList", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-549c8faa-a15c-4d2c-871d-2144aab8c281", {
                   "BufferToList", 
                    "ChristopherWolfram`ForeignFunctionInterface`"}, False},
                 ButtonNote->"ChristopherWolfram`ForeignFunctionInterface`",
                 Evaluator->Automatic], 
                ButtonBox[
                 
                 StyleBox["CreateForeignFunctionWithLibrary", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-549c8faa-a15c-4d2c-871d-2144aab8c281", {
                   "CreateForeignFunctionWithLibrary", 
                    "ChristopherWolfram`ForeignFunctionInterface`"}, False},
                 ButtonNote->"ChristopherWolfram`ForeignFunctionInterface`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["LoadExternalLibrary", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-549c8faa-a15c-4d2c-871d-2144aab8c281", {
                   "LoadExternalLibrary", 
                    "ChristopherWolfram`ForeignFunctionInterface`"}, False},
                 ButtonNote->"ChristopherWolfram`ForeignFunctionInterface`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["BufferToNumericArray", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-549c8faa-a15c-4d2c-871d-2144aab8c281", {
                   "BufferToNumericArray", 
                    "ChristopherWolfram`ForeignFunctionInterface`"}, False},
                 ButtonNote->"ChristopherWolfram`ForeignFunctionInterface`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["CreateManagedExpression", "InformationGridButton"],
                 
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-549c8faa-a15c-4d2c-871d-2144aab8c281", {
                   "CreateManagedExpression", 
                    "ChristopherWolfram`ForeignFunctionInterface`"}, False},
                 ButtonNote->"ChristopherWolfram`ForeignFunctionInterface`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["NumericArrayToBuffer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-549c8faa-a15c-4d2c-871d-2144aab8c281", {
                   "NumericArrayToBuffer", 
                    "ChristopherWolfram`ForeignFunctionInterface`"}, False},
                 ButtonNote->"ChristopherWolfram`ForeignFunctionInterface`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["BufferToString", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-549c8faa-a15c-4d2c-871d-2144aab8c281", {
                   "BufferToString", 
                    "ChristopherWolfram`ForeignFunctionInterface`"}, False},
                 ButtonNote->"ChristopherWolfram`ForeignFunctionInterface`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["DeleteBuffer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-549c8faa-a15c-4d2c-871d-2144aab8c281", {
                   "DeleteBuffer", 
                    "ChristopherWolfram`ForeignFunctionInterface`"}, False},
                 ButtonNote->"ChristopherWolfram`ForeignFunctionInterface`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["OpaqueRawPointer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-549c8faa-a15c-4d2c-871d-2144aab8c281", {
                   "OpaqueRawPointer", 
                    "ChristopherWolfram`ForeignFunctionInterface`"}, False},
                 ButtonNote->"ChristopherWolfram`ForeignFunctionInterface`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CallForeignFunction", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-549c8faa-a15c-4d2c-871d-2144aab8c281", {
                   "CallForeignFunction", 
                    "ChristopherWolfram`ForeignFunctionInterface`"}, False},
                 ButtonNote->"ChristopherWolfram`ForeignFunctionInterface`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["DeleteCallback", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-549c8faa-a15c-4d2c-871d-2144aab8c281", {
                   "DeleteCallback", 
                    "ChristopherWolfram`ForeignFunctionInterface`"}, False},
                 ButtonNote->"ChristopherWolfram`ForeignFunctionInterface`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["PopulateBuffer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-549c8faa-a15c-4d2c-871d-2144aab8c281", {
                   "PopulateBuffer", 
                    "ChristopherWolfram`ForeignFunctionInterface`"}, False},
                 ButtonNote->"ChristopherWolfram`ForeignFunctionInterface`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CreateBuffer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-549c8faa-a15c-4d2c-871d-2144aab8c281", {
                   "CreateBuffer", 
                    "ChristopherWolfram`ForeignFunctionInterface`"}, False},
                 ButtonNote->"ChristopherWolfram`ForeignFunctionInterface`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["DereferenceBuffer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-549c8faa-a15c-4d2c-871d-2144aab8c281", {
                   "DereferenceBuffer", 
                    "ChristopherWolfram`ForeignFunctionInterface`"}, False},
                 ButtonNote->"ChristopherWolfram`ForeignFunctionInterface`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["StringToBuffer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-549c8faa-a15c-4d2c-871d-2144aab8c281", {
                   "StringToBuffer", 
                    "ChristopherWolfram`ForeignFunctionInterface`"}, False},
                 ButtonNote->"ChristopherWolfram`ForeignFunctionInterface`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CreateCallback", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-549c8faa-a15c-4d2c-871d-2144aab8c281", {
                   "CreateCallback", 
                    "ChristopherWolfram`ForeignFunctionInterface`"}, False},
                 ButtonNote->"ChristopherWolfram`ForeignFunctionInterface`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["GetManagedExpression", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-549c8faa-a15c-4d2c-871d-2144aab8c281", {
                   "GetManagedExpression", 
                    "ChristopherWolfram`ForeignFunctionInterface`"}, False},
                 ButtonNote->"ChristopherWolfram`ForeignFunctionInterface`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["UnloadExternalLibrary", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-549c8faa-a15c-4d2c-871d-2144aab8c281", {
                   "UnloadExternalLibrary", 
                    "ChristopherWolfram`ForeignFunctionInterface`"}, False},
                 ButtonNote->"ChristopherWolfram`ForeignFunctionInterface`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["CreateForeignFunction", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-549c8faa-a15c-4d2c-871d-2144aab8c281", {
                   "CreateForeignFunction", 
                    "ChristopherWolfram`ForeignFunctionInterface`"}, False},
                 ButtonNote->"ChristopherWolfram`ForeignFunctionInterface`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["ListToBuffer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-549c8faa-a15c-4d2c-871d-2144aab8c281", {
                   "ListToBuffer", 
                    "ChristopherWolfram`ForeignFunctionInterface`"}, False},
                 ButtonNote->"ChristopherWolfram`ForeignFunctionInterface`",
                 Evaluator->Automatic], ""}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.31666666666666665`]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"ColumnsIndexed" -> {{False}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.8]}, 
        Offset[0.2]}}],
   BaseStyle->"InformationTitleFrame"], "InformationGridPlain"]], "Output",
 CellChangeTimes->{3.8832327283647118`*^9},
 CellLabel->"Out[19]=",
 CellID->1215973067,ExpressionUUID->"ae218743-b83f-43f8-9128-67f7889468c7"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"ChristopherWolfram`ForeignFunctionInterface`\
LoadExternalLibrary\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], \
"\<\"ChristopherWolfram`ForeignFunctionInterface`LoadExternalLibrary\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"ChristopherWolfram`ForeignFunctionInterface`\
LoadExternalLibrary\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "ChristopherWolfram`ForeignFunctionInterface`LoadExternalLibrary", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> None, "SubValues" -> None, "DefaultValues" -> None, 
    "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {Protected}, "FullName" -> 
    "ChristopherWolfram`ForeignFunctionInterface`LoadExternalLibrary"|>, 
   False]]], "Print",
 CellTags->"Info-549c8faa-a15c-4d2c-871d-2144aab8c281",
 CellID->1803456099,ExpressionUUID->"16c05d64-35be-4f1a-bfef-7778a4368a58"]
}, Open  ]],

Cell[BoxData["CreateForeignFunctionWithLibrary"], "Input",
 CellChangeTimes->{{3.88323260319972*^9, 3.8832326052952147`*^9}},
 CellID->1395050299,ExpressionUUID->"0381562a-b037-4f35-9c09-281c9e26205e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LoadExternalLibrary", "[", 
  RowBox[{"FindLibrary", "@", "\"\<compilerDemoBase\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.883232739596793*^9, 3.8832327477081137`*^9}},
 CellLabel->"In[21]:=",
 CellID->1508823836,ExpressionUUID->"669cdb93-ed43-4fb1-b23a-f73d11205e1c"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TypeProduct", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
                  TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ExternalLibraryHandle\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
                  TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ExternalLibraryHandle\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"], 
       DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "DataStructure[ExternalLibraryHandle, $Failed]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.883232744029024*^9, 3.8832327482574987`*^9}},
 CellLabel->"Out[21]=",
 CellID->2000805172,ExpressionUUID->"c080d3a3-67ac-4129-b035-f59d275a5f28"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"StartExternalSession", "[", 
  RowBox[{"\"\<DynamicLibrary\>\"", ",", 
   RowBox[{"FindLibrary", "@", "\"\<compilerDemoBase\>\""}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.883232825704503*^9, 3.8832328395512037`*^9}},
 CellID->50575228,ExpressionUUID->"8bb8a919-d0a1-4181-b08a-25fa5710885a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ForeignFunction", "[", 
   RowBox[{"\"\<foo\>\"", ",", "type"}], "]"}], "[", 
  RowBox[{"1", ",", "2", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.883233012943287*^9, 3.883233024226177*^9}},
 CellID->1786212884,ExpressionUUID->"cfc805c1-e469-408b-997b-05d76c7cc920"],

Cell[BoxData[
 RowBox[{"ff", "=", 
  RowBox[{"ForeignFunction", "[", 
   RowBox[{"\"\<foo\>\"", ",", "type"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8832330341288643`*^9, 3.883233048523973*^9}},
 CellID->53464960,ExpressionUUID->"c4a69680-359c-48ef-8218-ba7f8e558f2e"],

Cell[BoxData[
 RowBox[{"ff", "[", 
  RowBox[{"1", ",", "2", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.883233039650382*^9, 3.883233039871591*^9}},
 CellID->1829148779,ExpressionUUID->"83651f00-75ab-4331-9648-325c397a817e"],

Cell[BoxData[
 RowBox[{"LibraryLoad", "[", 
  RowBox[{"\"\<myLib\>\"", ",", "\"\<LibraryHandle\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.883232915155696*^9, 3.883232918378511*^9}, {
  3.8832332138945627`*^9, 3.8832332236131563`*^9}},
 CellID->1353305701,ExpressionUUID->"5f86b7f6-efb6-43f5-b0bc-db5a7c1e1ae1"],

Cell[BoxData[
 RowBox[{"LibraryLoad", "[", 
  RowBox[{"\"\<myLib\>\"", ",", "\"\<LibraryPath\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.883233227098694*^9, 3.8832332285253572`*^9}},
 CellID->1685269890,ExpressionUUID->"5668037e-d438-439a-96ff-428fd360fd21"],

Cell[BoxData[
 RowBox[{"LibraryLoad", "[", 
  RowBox[{"\"\<myLib\>\"", ",", "All"}], "]"}]], "Input",
 CellChangeTimes->{{3.88323324014312*^9, 3.883233240542645*^9}},
 CellID->1475251005,ExpressionUUID->"9a4fbf0c-d1a5-4aff-8081-b057b990aa5f"],

Cell[BoxData[
 RowBox[{"ExternalFunction", "[", 
  RowBox[{"\"\<DynamicLibrary\>\"", ",", "..."}], "]"}]], "Input",
 CellChangeTimes->{{3.883232880570962*^9, 3.883232887658078*^9}},
 CellID->73091834,ExpressionUUID->"4ecdecbf-cb92-4f70-a958-31bc6a412bbc"],

Cell["Load a library:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.879010971902932*^9, 3.879010974590584*^9}, {
  3.879011031000729*^9, 3.879011035289214*^9}},
 CellID->1700674490,ExpressionUUID->"e6af56ba-8971-4966-8947-fff1822ebe7a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LibraryLoad", "[", "\"\<compilerDemoBase\>\"", "]"}], 
  ";"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.878160315790765*^9, 3.878160321206682*^9}, 
   3.8787404597394238`*^9, {3.883232187170073*^9, 3.883232192057787*^9}},
 CellLabel->"In[18]:=",
 CellID->2103845401,ExpressionUUID->"92231b28-aec2-4242-98e8-7d93eefd0fc1"],

Cell["\<\
Create a ForeignFunctionObject referring to a function from the library:\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.879011040360819*^9, 3.87901105785009*^9}},
 CellID->1552296596,ExpressionUUID->"21312dba-9b6c-4400-b9e2-7a99bc53651e"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<GEOSLink`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.883232076780251*^9, 3.883232080968935*^9}},
 CellLabel->"In[14]:=",
 CellID->2085890577,ExpressionUUID->"281836f0-fd87-4317-b902-2fae78ee9523"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToGEOS", "[", 
  RowBox[{"RandomPolygon", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.88323208559619*^9, 3.883232088755726*^9}},
 CellLabel->"In[15]:=",
 CellID->1308043301,ExpressionUUID->"357cda35-f51e-42a3-b473-658a6682e4f4"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TypeProduct", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
                  TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Managed`GEOSGeometry\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
                  TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Managed`GEOSGeometry\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"], 
       DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("DataStructure[Managed`GEOSGeometry, $Failed]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.883232089751367*^9},
 CellLabel->"Out[15]=",
 CellID->1561524489,ExpressionUUID->"f444f07c-f9a6-4aee-833b-4778d3f56dcb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CreateForeignFunction", "[", 
  RowBox[{"\"\<GEOSIntersection\>\"", ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<OpaqueRawPointer\>\"", ",", "\"\<OpaqueRawPointer\>\""}], 
     "}"}], "->", "\"\<OpaqueRawPointer\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.883232093585547*^9, 3.883232104837741*^9}},
 CellLabel->"In[16]:=",
 CellID->508299638,ExpressionUUID->"38b9f8ba-6c08-489a-b221-108e9bbe50c2"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TypeProduct", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
                  TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
                  TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"], 
       DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "DataStructure[ForeignFunctionObject, $Failed]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.883232105218666*^9},
 CellLabel->"Out[16]=",
 CellID->1877724615,ExpressionUUID->"cb236abd-50e5-4d3b-8aa8-7a0db7a6e7d6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Typed", "[", 
  RowBox[{
   RowBox[{"LibraryFunction", "[", "\"\<addone\>\"", "]"}], ",", 
   RowBox[{
    RowBox[{"{", "\"\<CInt\>\"", "}"}], "->", "\"\<CInt\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.883233108077804*^9, 3.883233117954178*^9}},
 CellID->535515052,ExpressionUUID->"9c218ec3-8bfc-4772-a0b9-fa67e1f6b0ee"],

Cell[BoxData[
 RowBox[{"Typed", "[", 
  RowBox[{"\"\<addone\>\"", ",", 
   RowBox[{
    RowBox[{"{", "\"\<CInt\>\"", "}"}], "->", "\"\<CInt\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{3.883233121889353*^9},
 CellID->1127275358,ExpressionUUID->"bf9683e2-4c80-4ad4-aa56-3ab35bd855d9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"CreateForeignFunction", "[", 
   RowBox[{"\"\<addone\>\"", ",", 
    RowBox[{
     RowBox[{"{", "\"\<CInt\>\"", "}"}], "->", "\"\<CInt\>\""}]}], "]"}], "//",
   "RepeatedTiming"}]], "Input",
 CellChangeTimes->{{3.883232005023326*^9, 3.8832320064622793`*^9}},
 CellLabel->"In[13]:=",
 CellID->443276720,ExpressionUUID->"b31b82fc-eac9-460d-b719-ee0af8a88858"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.355976104736328`*^-6", ",", 
   TagBox[
    TemplateBox[{
      RowBox[{
        StyleBox[
         TagBox["TypeProduct", "SummaryHead"], "NonInterpretableSummary"], 
        StyleBox["[", "NonInterpretableSummary"], 
        DynamicModuleBox[{
         Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
         TemplateBox[{
           PaneSelectorBox[{False -> GridBox[{{
                 GraphicsBox[
                  InsetBox[
                   FormBox[
                    StyleBox["\"BasicF\"", 
                    GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
                    TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], 
                  Axes -> False, AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                  Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 GraphicsBox[
                  InsetBox[
                   FormBox[
                    StyleBox["\"BasicF\"", 
                    GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
                    TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], 
                  Axes -> False, AspectRatio -> 1, ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                  Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.55]]], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}},
                AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
          "SummaryPanel"], DynamicModuleValues :> {}], 
        StyleBox["]", "NonInterpretableSummary"]}]},
     "CopyTag",
     DisplayFunction->(#& ),
     InterpretationFunction->(
      "DataStructure[ForeignFunctionObject, $Failed]"& )],
    False,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.883232007984428*^9},
 CellLabel->"Out[13]=",
 CellID->1725141750,ExpressionUUID->"06a8f55b-c47d-4a00-86da-580ce7ea6033"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"addone", "=", 
  RowBox[{"CreateForeignFunction", "[", 
   RowBox[{"\"\<addone\>\"", ",", 
    RowBox[{
     RowBox[{"{", "\"\<CInt\>\"", "}"}], "->", "\"\<CInt\>\""}]}], 
   "]"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.880510497182767*^9, 3.880510501072548*^9}},
 CellLabel->"In[7]:=",
 CellID->1370770033,ExpressionUUID->"88e3a340-937a-40b2-af16-945143c65d04"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TypeProduct", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
                  TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               GraphicsBox[
                InsetBox[
                 FormBox[
                  StyleBox["\"BasicF\"", 
                   GrayLevel[0.7], Bold, 8.109375, StripOnInput -> False], 
                  TraditionalForm], {0, 0}], Background -> GrayLevel[0.93], 
                Axes -> False, AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}, ImageSizeCache -> {27., {0., 10.}}], 
                Frame -> True, FrameTicks -> None, FrameStyle -> Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.55]]], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Type:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"ForeignFunctionObject\"", "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"], 
       DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "DataStructure[ForeignFunctionObject, $Failed]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.879011063058941*^9, 3.879846387971184*^9, 
  3.88051051403095*^9, 3.883231642484964*^9},
 CellLabel->"Out[7]=",
 CellID->1107853769,ExpressionUUID->"580865cd-6dbd-457c-bcab-81d3cc36ead8"]
}, Open  ]],

Cell["Call the foreign function:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.879011067009838*^9, 3.879011070530324*^9}},
 CellID->1284721661,ExpressionUUID->"30a289d0-aea8-4b78-9950-a8128d56d9e9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"CallForeignFunction", "[", 
   RowBox[{"addone", ",", 
    RowBox[{"{", "12", "}"}]}], "]"}], "//", "RepeatedTiming"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.883231694262064*^9, 3.883231695766068*^9}},
 CellLabel->"In[9]:=",
 CellID->1935087807,ExpressionUUID->"da55f71c-d694-4b52-b9c6-7678d45db54d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.689522743225098`*^-7", ",", "13"}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.879011072787431*^9, 3.879846390022151*^9, 
  3.880510515248898*^9, 3.883231652778706*^9, 3.883231697614872*^9},
 CellLabel->"Out[9]=",
 CellID->981303171,ExpressionUUID->"4918a450-60ac-4a69-8f4a-8edc5f1e64bf"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ff", "=", 
   RowBox[{"ForeignFunction", "[", "addone", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.883231766588752*^9, 3.883231767241941*^9}},
 CellLabel->"In[11]:=",
 CellID->896785815,ExpressionUUID->"ebeb4a5c-7699-4f2e-88df-e243b6620735"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ff", "[", "12", "]"}], "//", "RepeatedTiming"}]], "Input",
 CellChangeTimes->{{3.883231763214656*^9, 3.8832317701192207`*^9}},
 CellLabel->"In[12]:=",
 CellID->847642907,ExpressionUUID->"66165eef-4c89-4eef-a342-e516a82b45cc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7.392053604125977`*^-7", ",", "13"}], "}"}]], "Output",
 CellChangeTimes->{3.8832317732823257`*^9},
 CellLabel->"Out[12]=",
 CellID->1445610226,ExpressionUUID->"5528933d-8074-4884-931d-34cf935576db"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"addone", "[", "12", "]"}]], "Input",
 CellChangeTimes->{{3.88323165875345*^9, 3.8832316622751703`*^9}},
 CellID->219770310,ExpressionUUID->"b892f644-388e-4694-b7b8-1b5b6d312a78"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ForeignFunction", "[", "addone", "]"}], "[", "12", "]"}]], "Input",\

 CellChangeTimes->{{3.883231675182803*^9, 3.8832316790626593`*^9}},
 CellID->1302730473,ExpressionUUID->"1436ade1-4ebb-4623-8b74-048dba3c3ebd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ForeignFunction", "[", "ff_", "]"}], "[", "args___", "]"}], ":=", 
  
  RowBox[{"CallForeignFunction", "[", 
   RowBox[{"ff", ",", 
    RowBox[{"{", "args", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8832317493625507`*^9, 3.8832317600629377`*^9}},
 CellLabel->"In[10]:=",
 CellID->1756056945,ExpressionUUID->"e5968378-2cd5-47ff-8a85-26af1472f71a"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Bugs", "Section",
 CellChangeTimes->{{3.8781440164178123`*^9, 
  3.8781440171059237`*^9}},ExpressionUUID->"118f76d2-deb7-4a04-87b2-\
bc184c3b1f05"],

Cell[CellGroupData[{

Cell["1", "Subsection",
 CellChangeTimes->{{3.878168252066807*^9, 
  3.878168254424343*^9}},ExpressionUUID->"db2ee93f-0451-4b50-bcda-\
79d249ac2f1b"],

Cell["This crashes the compiler:", "Text",
 CellChangeTimes->{{3.878144028786315*^9, 
  3.8781440323704233`*^9}},ExpressionUUID->"c4c88e4b-4770-4d65-8dee-\
7f4d1208aadd"],

Cell[BoxData[
 RowBox[{"FunctionCompile", "[", 
  RowBox[{"Function", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{"Cast", "[", 
     RowBox[{
      RowBox[{"Typed", "[", 
       RowBox[{
        RowBox[{"ToRawPointer", "[", "]"}], ",", 
        RowBox[{"\"\<RawPointer\>\"", "::[", "\"\<Void\>\"", "]"}]}], "]"}], 
      ",", "\"\<OpaqueRawPointer\>\"", ",", "\"\<BitCast\>\""}], "]"}]}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.878144017859528*^9, 3.8781440238383923`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"e869d0e8-c68e-45f6-be00-0d5d3ea17ef9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["2", "Subsection",
 CellChangeTimes->{
  3.8781682569570217`*^9},ExpressionUUID->"de639252-2f49-4518-859a-\
142ec34fb385"],

Cell["\<\
Casting from boxable types to expressions should automatically work.\
\>", "Text",
 CellChangeTimes->{{3.8781682421841173`*^9, 
  3.8781682749770613`*^9}},ExpressionUUID->"879e158b-61b5-426b-a136-\
0a9f1fabf21e"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{816, 840},
WindowMargins->{{268.5, Automatic}, {Automatic, 87.75}},
TaggingRules->{
 "DocuToolsSettingsInternal" -> {
   "$PacletVersion" -> "0.10.2323", "$ApplicationName" -> "Mathematica", 
    "$LinkBase" -> "Mathematica", "$ApplicationDirectory" -> 
    "/Users/christopher/cvs/Mathematica/", "$DocumentationDirectory" -> 
    "/Users/christopher/cvs/Mathematica/Documentation/English/", 
    "$UseNewPageDialog" -> ""}, 
  "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> 
  False},
Magnification:>1. Inherited,
FrontEndVersion->"13.2 for Linux x86 (64-bit) (November 18, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"66f5fe53-3671-478f-aacd-9bf66fb064bd"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "85779f10-0e3e-4490-aea3-9c9c85b0d204"->{
  Cell[1011426, 20183, 433, 11, 27, "EchoBefore",ExpressionUUID->"168adaaa-06ba-47f8-ba81-691ec2c34e89",
   CellTags->"85779f10-0e3e-4490-aea3-9c9c85b0d204"]},
 "d6dcf371-bc63-4cb4-ae86-b7aa23519217"->{
  Cell[1011862, 20196, 498, 14, 27, "EchoAfter",ExpressionUUID->"99f19f3e-7e43-4313-b0a1-4ee351655beb",
   CellTags->"d6dcf371-bc63-4cb4-ae86-b7aa23519217"]},
 "34665357-2289-4996-8ad3-bd70f89482d1"->{
  Cell[1012363, 20212, 433, 11, 27, "EchoBefore",ExpressionUUID->"1b2c34d9-f956-453a-b4bb-36d304633128",
   CellTags->"34665357-2289-4996-8ad3-bd70f89482d1"]},
 "e22cd770-b69b-43d0-8cff-544b3df38b54"->{
  Cell[1012799, 20225, 500, 14, 27, "EchoAfter",ExpressionUUID->"dba11b8c-bdd5-4e00-a380-362a43c87da3",
   CellTags->"e22cd770-b69b-43d0-8cff-544b3df38b54"]},
 "f42930be-397e-4d48-bf2a-6eb1f1782cfd"->{
  Cell[1013302, 20241, 433, 11, 27, "EchoBefore",ExpressionUUID->"1948492a-08ef-4f06-b033-7f8a96ea22c0",
   CellTags->"f42930be-397e-4d48-bf2a-6eb1f1782cfd"]},
 "3094eb97-6a3d-4432-94a3-e2bb00086764"->{
  Cell[1013738, 20254, 500, 14, 27, "EchoAfter",ExpressionUUID->"96d910a9-6acb-4a58-bd62-7f439ccb2fa5",
   CellTags->"3094eb97-6a3d-4432-94a3-e2bb00086764"]},
 "dcda17ae-db03-4b03-9701-a30e1904f719"->{
  Cell[1014241, 20270, 435, 11, 27, "EchoBefore",ExpressionUUID->"1df4f241-ef0a-4718-958d-1e1d6c81eece",
   CellTags->"dcda17ae-db03-4b03-9701-a30e1904f719"]},
 "2e9f802d-c8ae-4aa7-8cbc-570eae973989"->{
  Cell[1014679, 20283, 500, 14, 27, "EchoAfter",ExpressionUUID->"27c2718b-0798-4a10-af46-0a5fa1de42db",
   CellTags->"2e9f802d-c8ae-4aa7-8cbc-570eae973989"]},
 "bb98e0c4-2b09-468b-9c61-3aa544f08c8e"->{
  Cell[1015182, 20299, 435, 11, 27, "EchoBefore",ExpressionUUID->"e3f71b6f-f787-4866-b1c9-3b236b1d63f6",
   CellTags->"bb98e0c4-2b09-468b-9c61-3aa544f08c8e"]},
 "ceb922e6-0336-45e4-afa1-4a4cf8c5b3e3"->{
  Cell[1015620, 20312, 499, 14, 27, "EchoAfter",ExpressionUUID->"fbbf58da-d6fa-4119-9cd9-f326fd0213e2",
   CellTags->"ceb922e6-0336-45e4-afa1-4a4cf8c5b3e3"]},
 "58cf81ac-641e-4c5d-93cc-569e166df3b8"->{
  Cell[1016122, 20328, 433, 11, 27, "EchoBefore",ExpressionUUID->"769499c5-2128-4f78-ada7-058c8c2ace9d",
   CellTags->"58cf81ac-641e-4c5d-93cc-569e166df3b8"]},
 "c6f56e17-0d01-498a-b6e7-bfd735714eb7"->{
  Cell[1016558, 20341, 499, 14, 27, "EchoAfter",ExpressionUUID->"cca79100-b4b9-49b3-94a7-17eb89171096",
   CellTags->"c6f56e17-0d01-498a-b6e7-bfd735714eb7"]},
 "ba326751-24af-4db2-9927-e33c9a5035e2"->{
  Cell[1017060, 20357, 433, 11, 27, "EchoBefore",ExpressionUUID->"5a3b232a-f80c-405e-b82f-fa9bc9d1f098",
   CellTags->"ba326751-24af-4db2-9927-e33c9a5035e2"]},
 "c86a1c69-6704-49cf-84bd-89d1d351993c"->{
  Cell[1017496, 20370, 499, 14, 27, "EchoAfter",ExpressionUUID->"14eb6240-78c8-4afd-9094-e34ad1d65fef",
   CellTags->"c86a1c69-6704-49cf-84bd-89d1d351993c"]},
 "7fb96cbf-9810-4c37-b929-092dc0f35b83"->{
  Cell[1017998, 20386, 435, 11, 27, "EchoBefore",ExpressionUUID->"9e78a746-a580-47d3-9d9a-6f59991c40c0",
   CellTags->"7fb96cbf-9810-4c37-b929-092dc0f35b83"]},
 "46bd5228-d088-46b9-bb4d-8b1c124529d0"->{
  Cell[1018436, 20399, 499, 14, 27, "EchoAfter",ExpressionUUID->"cb864803-6d1f-4dd6-b495-534f8c442a49",
   CellTags->"46bd5228-d088-46b9-bb4d-8b1c124529d0"]},
 "240fa398-a92b-4a12-adfe-9e1ba7d8eba9"->{
  Cell[1018938, 20415, 433, 11, 27, "EchoBefore",ExpressionUUID->"0026114c-f9fa-400e-94ba-bf6ee30c7044",
   CellTags->"240fa398-a92b-4a12-adfe-9e1ba7d8eba9"]},
 "c048d135-843f-4306-8560-b881833ae96f"->{
  Cell[1019374, 20428, 499, 14, 27, "EchoAfter",ExpressionUUID->"514c76b2-e877-44aa-96c1-855f4112f795",
   CellTags->"c048d135-843f-4306-8560-b881833ae96f"]},
 "09722dbb-3377-41ee-8b4a-528ea4c3d12c"->{
  Cell[1019876, 20444, 433, 11, 27, "EchoBefore",ExpressionUUID->"2f26b9b1-fd16-4467-8c44-e9e368580e25",
   CellTags->"09722dbb-3377-41ee-8b4a-528ea4c3d12c"]},
 "c9a0a49a-0f50-439b-8bd3-3287607ab982"->{
  Cell[1020312, 20457, 499, 14, 27, "EchoAfter",ExpressionUUID->"f3e6f68b-3234-4bbc-9f68-eba3d6afd3be",
   CellTags->"c9a0a49a-0f50-439b-8bd3-3287607ab982"]},
 "Info-549c8faa-a15c-4d2c-871d-2144aab8c281"->{
  Cell[2685588, 48979, 8797, 221, 129, "Print",ExpressionUUID->"16c05d64-35be-4f1a-bfef-7778a4368a58",
   CellTags->"Info-549c8faa-a15c-4d2c-871d-2144aab8c281",
   CellID->1803456099]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"85779f10-0e3e-4490-aea3-9c9c85b0d204", 2727429, 49988},
 {"d6dcf371-bc63-4cb4-ae86-b7aa23519217", 2727632, 49991},
 {"34665357-2289-4996-8ad3-bd70f89482d1", 2727834, 49994},
 {"e22cd770-b69b-43d0-8cff-544b3df38b54", 2728037, 49997},
 {"f42930be-397e-4d48-bf2a-6eb1f1782cfd", 2728239, 50000},
 {"3094eb97-6a3d-4432-94a3-e2bb00086764", 2728442, 50003},
 {"dcda17ae-db03-4b03-9701-a30e1904f719", 2728644, 50006},
 {"2e9f802d-c8ae-4aa7-8cbc-570eae973989", 2728847, 50009},
 {"bb98e0c4-2b09-468b-9c61-3aa544f08c8e", 2729049, 50012},
 {"ceb922e6-0336-45e4-afa1-4a4cf8c5b3e3", 2729252, 50015},
 {"58cf81ac-641e-4c5d-93cc-569e166df3b8", 2729454, 50018},
 {"c6f56e17-0d01-498a-b6e7-bfd735714eb7", 2729657, 50021},
 {"ba326751-24af-4db2-9927-e33c9a5035e2", 2729859, 50024},
 {"c86a1c69-6704-49cf-84bd-89d1d351993c", 2730062, 50027},
 {"7fb96cbf-9810-4c37-b929-092dc0f35b83", 2730264, 50030},
 {"46bd5228-d088-46b9-bb4d-8b1c124529d0", 2730467, 50033},
 {"240fa398-a92b-4a12-adfe-9e1ba7d8eba9", 2730669, 50036},
 {"c048d135-843f-4306-8560-b881833ae96f", 2730872, 50039},
 {"09722dbb-3377-41ee-8b4a-528ea4c3d12c", 2731074, 50042},
 {"c9a0a49a-0f50-439b-8bd3-3287607ab982", 2731277, 50045},
 {"Info-549c8faa-a15c-4d2c-871d-2144aab8c281", 2731484, 50048}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 276, 4, 29, "Input",ExpressionUUID->"139476a9-3c83-4845-a4ae-1236b88c36de"],
Cell[CellGroupData[{
Cell[859, 28, 246, 4, 67, "Section",ExpressionUUID->"faf1aeae-d9af-4069-9593-755aeee43b0e"],
Cell[CellGroupData[{
Cell[1130, 36, 395, 8, 29, "Input",ExpressionUUID->"a0cbc2b3-671a-4c21-bf2c-be2db5b71a45"],
Cell[1528, 46, 23513, 371, 63, "Output",ExpressionUUID->"c0c7a19a-8683-480b-ac16-25a2d9b0dde3"]
}, Open  ]],
Cell[25056, 420, 320, 6, 29, "Input",ExpressionUUID->"e61e89d2-034f-4b87-9582-4028542464d0"],
Cell[25379, 428, 305, 5, 29, "Input",ExpressionUUID->"d7f1f76e-f543-4578-9a1d-dfe36104d3e8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25721, 438, 151, 3, 67, "Section",ExpressionUUID->"0969184b-b69f-47f9-85bb-9029dc4c5df1"],
Cell[25875, 443, 178, 3, 35, "Text",ExpressionUUID->"736f435a-9efe-42cb-850b-abdfaa8f3805"],
Cell[26056, 448, 2007, 38, 278, "Input",ExpressionUUID->"92733140-6395-45f4-a96f-983e14579bc4"],
Cell[28066, 488, 178, 3, 35, "Text",ExpressionUUID->"f9136f71-b7c8-4409-bda1-0b6102a4288f"],
Cell[CellGroupData[{
Cell[28269, 495, 627, 11, 51, "Input",ExpressionUUID->"fdaf6456-106c-42ca-bf07-57b6ecf1e3df"],
Cell[28899, 508, 17342, 342, 133, "Output",ExpressionUUID->"6fd595aa-c691-4218-b16b-ba5d88953c4a"]
}, Open  ]],
Cell[46256, 853, 198, 3, 29, "Input",ExpressionUUID->"fd44cdfa-2d7f-44a4-8e3f-03acfff5a1a1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46491, 861, 154, 3, 67, "Section",ExpressionUUID->"762b75dd-df63-44cb-9ac2-74adda1e11cd"],
Cell[CellGroupData[{
Cell[46670, 868, 153, 3, 54, "Subsection",ExpressionUUID->"b4ae5d32-9af7-424b-bb47-23aef3209bff"],
Cell[CellGroupData[{
Cell[46848, 875, 493, 8, 29, "Input",ExpressionUUID->"a0aa9f34-18d7-425b-ab49-b6cf512b9d29"],
Cell[47344, 885, 4491, 88, 66, "Output",ExpressionUUID->"05b27dc9-003d-4308-8bcd-87a39e9461c9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51872, 978, 762, 14, 29, "Input",ExpressionUUID->"436146f3-e1d0-4fff-8025-bc47dd95295b"],
Cell[52637, 994, 3422, 70, 68, "Output",ExpressionUUID->"14fc7a7f-b1fd-483f-b02b-48a520c6f978"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56096, 1069, 206, 3, 29, "Input",ExpressionUUID->"8a0419c7-4f84-4560-a8f7-37bf926217f4"],
Cell[56305, 1074, 196, 3, 33, "Output",ExpressionUUID->"12e46910-4ee8-4c92-9ef3-e595f8c157e9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56538, 1082, 158, 3, 45, "Subsubsection",ExpressionUUID->"43455c52-d0a4-4f20-b26f-c2989a64bf4b"],
Cell[56699, 1087, 280, 6, 29, "Input",ExpressionUUID->"055e2bf9-b4e6-4ca9-9ecc-9e2e05281437"],
Cell[CellGroupData[{
Cell[57004, 1097, 695, 13, 29, "Input",ExpressionUUID->"172418f8-8fd7-481e-9d92-4b467ac9227f"],
Cell[57702, 1112, 3254, 67, 68, "Output",ExpressionUUID->"cc855f73-e78a-4179-91ad-7b50f3b55ca9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60993, 1184, 241, 4, 29, "Input",ExpressionUUID->"e2c13335-41ce-407d-9340-2e097c178e38"],
Cell[61237, 1190, 215, 4, 36, "Output",ExpressionUUID->"f35df512-3256-47bc-99a6-e06f3614a99b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61489, 1199, 464, 10, 29, "Input",ExpressionUUID->"9a77e349-efcc-4403-8035-976ba9840372"],
Cell[61956, 1211, 3203, 68, 68, "Output",ExpressionUUID->"35a88f56-f101-4120-b3f8-6fea804c18d0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65196, 1284, 398, 9, 29, "Input",ExpressionUUID->"9255ff8e-ba3d-427a-b22b-1fb5f5862913"],
Cell[65597, 1295, 240, 4, 36, "Output",ExpressionUUID->"ce17c45a-01c0-4b00-b62c-2dc3c97815db"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65874, 1304, 663, 17, 51, "Input",ExpressionUUID->"8fa5fa71-8972-458a-9752-ebfcd4979f4a",
 CellID->371194181],
Cell[66540, 1323, 9003, 170, 63, "Output",ExpressionUUID->"ed37f021-8641-44ff-85d0-7ad8e4dce37a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75580, 1498, 307, 6, 33, "Input",ExpressionUUID->"6df37121-3d70-492d-a0bb-68aa1ba39fd5",
 CellID->90146561],
Cell[75890, 1506, 12751, 243, 68, "Output",ExpressionUUID->"712c6a6d-1ac4-4f20-83f5-bad9eb141224"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88678, 1754, 339, 6, 29, "Input",ExpressionUUID->"a63300bb-699a-4379-8b37-98748e83ee8b"],
Cell[89020, 1762, 911, 14, 36, "Output",ExpressionUUID->"0259faee-7aaf-4a25-af34-af60295099ac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89968, 1781, 238, 4, 29, "Input",ExpressionUUID->"4a3857b8-41d2-4c5f-820e-f2b7b0433574"],
Cell[90209, 1787, 413, 7, 36, "Output",ExpressionUUID->"439bad98-b44e-41b2-88d0-d5395ccdc505"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90659, 1799, 239, 4, 29, "Input",ExpressionUUID->"93066710-9e79-4ff8-af21-6140e9319d2c"],
Cell[90901, 1805, 367, 7, 36, "Output",ExpressionUUID->"d24a5bcc-2597-4cd9-8f45-5546a2323184"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[91317, 1818, 165, 3, 45, "Subsubsection",ExpressionUUID->"d8be9472-d061-40b7-972e-f04be5f9066c"],
Cell[CellGroupData[{
Cell[91507, 1825, 621, 12, 29, "Input",ExpressionUUID->"89ecc4c5-8e7b-4d9c-b099-91b59b978adc"],
Cell[92131, 1839, 3705, 73, 68, "Output",ExpressionUUID->"cb8e616a-ea2e-44e1-bc2d-8ab23198a6e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95873, 1917, 425, 9, 29, "Input",ExpressionUUID->"0074d8f0-c4ba-4497-8546-a818911a63f2"],
Cell[96301, 1928, 3286, 70, 68, "Output",ExpressionUUID->"c4e058e4-6c46-4c03-b7be-f680409dac0e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[99624, 2003, 544, 11, 29, "Input",ExpressionUUID->"8c79dd84-c8c5-4069-9740-ac59a74f65ed"],
Cell[100171, 2016, 4836, 97, 63, "Output",ExpressionUUID->"8206ce09-2079-41c8-abf7-3d3aad58835d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105044, 2118, 290, 5, 29, "Input",ExpressionUUID->"bfd8ee02-e1a4-4fbb-b88f-76e460a9c2b6"],
Cell[105337, 2125, 842, 12, 33, "Output",ExpressionUUID->"658a37b4-582a-4eff-9bf7-43fc36b9899f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106216, 2142, 421, 7, 29, "Input",ExpressionUUID->"dd0a1092-3e9e-4f21-b95a-5f5ad51d17c1"],
Cell[106640, 2151, 1903, 28, 158, "Output",ExpressionUUID->"3347223b-31df-41d5-ab37-e038eae26a85"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[108592, 2185, 159, 3, 45, "Subsubsection",ExpressionUUID->"48945c05-7d57-42c9-bfe0-e78913aa8a33"],
Cell[CellGroupData[{
Cell[108776, 2192, 658, 13, 29, "Input",ExpressionUUID->"e69b8133-3338-4112-8dd8-d932d8111b5c"],
Cell[109437, 2207, 3571, 72, 68, "Output",ExpressionUUID->"7623a6cd-0116-4fe0-9497-5db42c3006e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113045, 2284, 383, 6, 29, "Input",ExpressionUUID->"18106ab7-3aeb-4769-8042-06199124b17d"],
Cell[113431, 2292, 688, 10, 33, "Output",ExpressionUUID->"44dbebd1-1694-41f0-99f5-bff9f8c10676"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114156, 2307, 395, 7, 29, "Input",ExpressionUUID->"fc9dccde-5bc0-48f8-8f38-367601a8f310"],
Cell[114554, 2316, 468, 7, 33, "Output",ExpressionUUID->"6c048a5c-cc63-4bde-ae1d-faecc2d93320"]
}, Open  ]],
Cell[CellGroupData[{
Cell[115059, 2328, 714, 17, 71, "Input",ExpressionUUID->"0b30341c-9378-4e58-bf95-fcef35d86cad"],
Cell[115776, 2347, 280, 4, 33, "Output",ExpressionUUID->"cbb30fe7-b850-4aca-a739-e7d8cc0b8cd9"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[116117, 2358, 159, 3, 54, "Subsection",ExpressionUUID->"9a43e2f0-17d3-4818-a8d3-3b65decda34d"],
Cell[CellGroupData[{
Cell[116301, 2365, 162, 3, 45, "Subsubsection",ExpressionUUID->"423a67c7-f342-4b9f-b689-9e56ea90dd99"],
Cell[CellGroupData[{
Cell[116488, 2372, 1087, 18, 71, "Input",ExpressionUUID->"43205e43-9dd6-4f00-a465-982630cfc8ca"],
Cell[117578, 2392, 4039, 78, 68, "Output",ExpressionUUID->"4cece337-a0cb-4ac2-bf65-5569fbfe2e71"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121654, 2475, 428, 7, 29, "Input",ExpressionUUID->"e846cb3b-43fc-4236-9938-3fbf96aa921d"],
Cell[122085, 2484, 3063, 60, 66, "Output",ExpressionUUID->"8332a72a-8a7c-4c04-95a8-632d038576ca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125185, 2549, 331, 6, 29, "Input",ExpressionUUID->"26796f94-76ec-4241-80a2-d567217716fe"],
Cell[125519, 2557, 972, 13, 33, "Output",ExpressionUUID->"aacce7aa-2874-4edc-b759-cebcd7428992"]
}, Open  ]],
Cell[CellGroupData[{
Cell[126528, 2575, 430, 8, 29, "Input",ExpressionUUID->"9eb82e58-b3d7-449f-a395-ba263520014c"],
Cell[126961, 2585, 1195, 19, 55, "Output",ExpressionUUID->"94d9aa8b-7082-4970-8b12-958c53af6f0f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128193, 2609, 324, 6, 29, "Input",ExpressionUUID->"17036279-7f78-4d71-9fb7-112f8133b4d9"],
Cell[128520, 2617, 568, 9, 36, "Output",ExpressionUUID->"40296dd4-d851-48ea-8486-c2e2049fba14"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[129137, 2632, 221, 4, 45, "Subsubsection",ExpressionUUID->"cb624e93-784d-4bbd-ae81-c283a93cf6b6"],
Cell[CellGroupData[{
Cell[129383, 2640, 405, 9, 29, "Input",ExpressionUUID->"d6dc65c8-2f03-49bb-a32f-2ff0d985e393"],
Cell[129791, 2651, 592, 8, 33, "Output",ExpressionUUID->"1aec7785-f26d-42a9-ad00-d6cae47eb523"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130420, 2664, 457, 11, 29, "Input",ExpressionUUID->"75fcd64e-bef3-4263-b186-c02e5e609fd4"],
Cell[130880, 2677, 597, 8, 33, "Output",ExpressionUUID->"c6b4a1fd-3560-499a-9aa1-f4f87065fed2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[131526, 2691, 157, 3, 45, "Subsubsection",ExpressionUUID->"0925e49e-806d-475e-8540-9bb6fe79bd31"],
Cell[CellGroupData[{
Cell[131708, 2698, 1587, 27, 154, "Input",ExpressionUUID->"6246fb13-e4f0-43b7-82a4-488f4a72261f"],
Cell[133298, 2727, 4839, 95, 84, "Output",ExpressionUUID->"4e554119-a64b-45b2-bac8-87f64fe1fe8b"]
}, Open  ]],
Cell[138152, 2825, 889, 17, 53, "Input",ExpressionUUID->"046e0247-2815-4489-859e-de1d4955b294"],
Cell[CellGroupData[{
Cell[139066, 2846, 630, 10, 29, "Input",ExpressionUUID->"b9785da8-6a31-4ce1-bd32-23804ebd7ed2"],
Cell[139699, 2858, 3983, 73, 68, "Output",ExpressionUUID->"9609016d-80ea-4c2e-b5e8-abdb4d6407fc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[143719, 2936, 557, 10, 29, "Input",ExpressionUUID->"0537dbbc-b392-46b9-b650-74925962cf2c"],
Cell[144279, 2948, 1751, 26, 55, "Output",ExpressionUUID->"31b4a1ab-0b1a-4eed-8ae8-706b63957ba4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[146067, 2979, 323, 7, 33, "Input",ExpressionUUID->"b4db8f67-28f1-4ccf-91ec-8f70ea09ac43"],
Cell[146393, 2988, 903, 15, 55, "Output",ExpressionUUID->"c35dc847-9dda-4503-baff-6b888951bf58"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147333, 3008, 2453, 55, 270, "Input",ExpressionUUID->"fde60ec2-805a-48f0-b6ea-f818d8ab8d7f"],
Cell[149789, 3065, 12388, 226, 63, "Output",ExpressionUUID->"282dcf7e-9e8f-4257-a2f2-4dfe9141a13e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162214, 3296, 281, 5, 29, "Input",ExpressionUUID->"55a993b0-ebcf-4a40-97b3-5c1adff6a2c4"],
Cell[162498, 3303, 5068, 104, 68, "Output",ExpressionUUID->"37700aef-f15e-4ab2-8a4f-99aaf446f3ec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[167603, 3412, 1282, 26, 139, "Input",ExpressionUUID->"c0986cc5-17b3-4350-b7ed-c105c17b64ad"],
Cell[168888, 3440, 4823, 100, 68, "Output",ExpressionUUID->"6349a2e3-8c50-49a4-aaae-76b54497b0c3"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[173772, 3547, 154, 3, 54, "Subsection",ExpressionUUID->"4c6873e4-5428-4b70-a4f4-14f0d3fabeb5"],
Cell[CellGroupData[{
Cell[173951, 3554, 160, 2, 29, "Input",ExpressionUUID->"224a0598-e1e7-4b33-8141-13ef8bbc3299"],
Cell[174114, 3558, 22918, 404, 68, "Output",ExpressionUUID->"2c570c19-71aa-46ff-a4b7-810cf13fa3fb"]
}, Open  ]],
Cell[197047, 3965, 246, 4, 29, "Input",ExpressionUUID->"4430de82-4346-4399-a4f5-e7c75974d3e2"],
Cell[CellGroupData[{
Cell[197318, 3973, 491, 9, 29, "Input",ExpressionUUID->"2185f48d-a7c7-48d4-aef9-aaf3ae7deb98"],
Cell[197812, 3984, 5029, 100, 63, "Output",ExpressionUUID->"20eadb9e-0836-4825-8bda-d6a5c3e3ea87"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202878, 4089, 272, 5, 29, "Input",ExpressionUUID->"d70e7555-4f90-417c-ba96-d868e897a684"],
Cell[203153, 4096, 902, 12, 33, "Output",ExpressionUUID->"796518f3-3a35-4232-97bb-be7e55d6317d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[204092, 4113, 647, 13, 92, "Input",ExpressionUUID->"85e2130b-0cf6-4382-882f-bdfe7976d67e"],
Cell[204742, 4128, 4963, 98, 63, "Output",ExpressionUUID->"289c7f4d-9c5d-4633-87c0-11198c013e92"]
}, Open  ]],
Cell[CellGroupData[{
Cell[209742, 4231, 544, 12, 71, "Input",ExpressionUUID->"1059d57b-27ce-4222-98d8-28ffe7e85b5d"],
Cell[210289, 4245, 4857, 97, 63, "Output",ExpressionUUID->"88c25661-71d3-476d-a1a3-fc38c6c9521f"]
}, Open  ]],
Cell[215161, 4345, 344, 7, 29, "Input",ExpressionUUID->"5df6f2ee-1831-4a2a-8301-d9b599451827"],
Cell[215508, 4354, 2420, 50, 236, "Input",ExpressionUUID->"d7fc2c56-9d7d-4a90-8835-20babad1dcf3"],
Cell[CellGroupData[{
Cell[217953, 4408, 320, 7, 29, "Input",ExpressionUUID->"aabc691d-93b2-4ba2-b006-84af501e5855"],
Cell[218276, 4417, 3341, 63, 66, "Output",ExpressionUUID->"c68d8163-a5ca-4013-a0a3-2f90755d0d64"]
}, Open  ]],
Cell[CellGroupData[{
Cell[221654, 4485, 210, 3, 29, "Input",ExpressionUUID->"e43d5bf6-1b38-4474-9324-173092525239"],
Cell[221867, 4490, 955, 13, 33, "Output",ExpressionUUID->"08cf6869-e344-48d5-8103-694d15439ab0"]
}, Open  ]],
Cell[222837, 4506, 480, 9, 151, "Program",ExpressionUUID->"5de9782f-deff-4ed3-a141-830de8d3c222",
 CellID->891380682],
Cell[CellGroupData[{
Cell[223342, 4519, 857, 16, 154, "Input",ExpressionUUID->"e0fd7d0f-6479-4035-bd32-b061c343b93b"],
Cell[224202, 4537, 4436, 91, 63, "Output",ExpressionUUID->"614ffd15-736f-489b-84e3-cb3c7d36e9d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[228675, 4633, 1322, 30, 203, "Input",ExpressionUUID->"6af83ecd-a850-47a6-ba78-c0a5038ced9d"],
Cell[CellGroupData[{
Cell[230022, 4667, 7200, 154, 109, "Echo",ExpressionUUID->"ff8c599b-d66a-4e48-a5d0-f1073916e9a4"],
Cell[237225, 4823, 7200, 154, 109, "Echo",ExpressionUUID->"a9b92687-4560-472a-b1a6-4388503ad882"]
}, Open  ]],
Cell[244440, 4980, 251, 3, 33, "Output",ExpressionUUID->"231e000d-5b4b-40fb-9781-824ace68fd5d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[244728, 4988, 3261, 71, 285, "Input",ExpressionUUID->"fc1014ee-187f-4c50-81ee-8ccbf4e8df6b"],
Cell[CellGroupData[{
Cell[248014, 5063, 3295, 68, 122, "Echo",ExpressionUUID->"d199eb23-3172-42d4-bbba-40909a81763a"],
Cell[251312, 5133, 3294, 69, 122, "Echo",ExpressionUUID->"07ddd0cd-3b36-44e5-8e99-fb32aa297001"]
}, Open  ]],
Cell[254621, 5205, 549, 8, 33, "Output",ExpressionUUID->"a5815560-2032-4e14-8f0b-6e2388d7a097"]
}, Open  ]],
Cell[CellGroupData[{
Cell[255207, 5218, 805, 16, 154, "Input",ExpressionUUID->"17d88015-d0bf-40bf-bc0e-1743a838bbc6"],
Cell[256015, 5236, 4726, 95, 63, "Output",ExpressionUUID->"b7fda679-1814-4016-9a8b-8458961fded5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[260778, 5336, 554, 12, 71, "Input",ExpressionUUID->"76cf0346-393e-46c0-bd21-9d1f2af65669"],
Cell[261335, 5350, 4667, 94, 63, "Output",ExpressionUUID->"64f2f704-5b1c-4432-be8a-4a075898e1e7"]
}, Open  ]],
Cell[266017, 5447, 392, 8, 29, "Input",ExpressionUUID->"98325666-6cf6-430a-8149-391368797413"],
Cell[266412, 5457, 2930, 59, 360, "Input",ExpressionUUID->"825a0ead-5663-4f50-a075-4f96f2060ef6"],
Cell[CellGroupData[{
Cell[269367, 5520, 320, 7, 29, "Input",ExpressionUUID->"4942ab63-3712-4809-a635-f9c765a713cf"],
Cell[269690, 5529, 2994, 59, 66, "Output",ExpressionUUID->"84913d62-b7d3-4ac9-9e56-b6737c9f1621"]
}, Open  ]],
Cell[CellGroupData[{
Cell[272721, 5593, 315, 5, 33, "Input",ExpressionUUID->"85da601e-cbaf-4c92-a1a6-c985575ce44f"],
Cell[273039, 5600, 4978, 104, 85, "Output",ExpressionUUID->"c43e13bd-3e82-479c-9e3f-4b0e9df2511f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[278054, 5709, 242, 4, 33, "Input",ExpressionUUID->"cd6619c0-3343-47ca-a5e3-47d4c81bb559"],
Cell[278299, 5715, 4715, 95, 63, "Output",ExpressionUUID->"a8f69cbe-09ba-4600-90cd-1dc31e8199d1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[283051, 5815, 593, 12, 71, "Input",ExpressionUUID->"188b5938-2ca8-4b49-8f7b-e7985ab53ae1"],
Cell[283647, 5829, 4674, 94, 63, "Output",ExpressionUUID->"ff26175a-0b4e-4d9d-8556-ac9d64c1f999"]
}, Open  ]],
Cell[288336, 5926, 382, 8, 29, "Input",ExpressionUUID->"bc39e143-f5dd-48f4-a135-b2da64a0423b"],
Cell[CellGroupData[{
Cell[288743, 5938, 775, 18, 139, "Input",ExpressionUUID->"3f4c7504-3eff-4730-806c-a12df326f533"],
Cell[289521, 5958, 553, 8, 33, "Output",ExpressionUUID->"2b434b27-9078-435d-8357-0e984f80a45b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[290111, 5971, 514, 11, 71, "Input",ExpressionUUID->"10c0e08f-2a96-47d6-80f1-ca1fea67359b"],
Cell[290628, 5984, 4644, 94, 63, "Output",ExpressionUUID->"021d3bb7-982b-4afa-b419-93d6cd68fa7f"]
}, Open  ]],
Cell[295287, 6081, 438, 8, 29, "Input",ExpressionUUID->"d2661487-504d-4a5a-815f-cb90b0b9e079"],
Cell[CellGroupData[{
Cell[295750, 6093, 311, 6, 33, "Input",ExpressionUUID->"56005263-6780-4975-b210-a9db14cbddd9"],
Cell[296064, 6101, 523, 7, 33, "Output",ExpressionUUID->"6f4d2459-103a-4419-8716-42107012459c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[296624, 6113, 638, 13, 92, "Input",ExpressionUUID->"f7bac357-39d0-4a6e-bebd-ff29fca92235"],
Cell[297265, 6128, 4642, 94, 63, "Output",ExpressionUUID->"d565cfc8-8d00-4299-9f09-db1d8173f52e"]
}, Open  ]],
Cell[301922, 6225, 1062, 25, 92, "Input",ExpressionUUID->"431705ef-57fb-4afe-8586-4d231b6ad035"],
Cell[CellGroupData[{
Cell[303009, 6254, 721, 14, 92, "Input",ExpressionUUID->"ae68a6d5-a489-40fb-a125-fb1fc6907076"],
Cell[303733, 6270, 4584, 94, 63, "Output",ExpressionUUID->"8a1178f4-b3bf-4bb8-8de1-390267d10733"]
}, Open  ]],
Cell[308332, 6367, 1016, 24, 92, "Input",ExpressionUUID->"33cd2016-ad2a-478a-aa29-f748542c8dae"],
Cell[309351, 6393, 1442, 33, 257, "Input",ExpressionUUID->"314b6928-9b6b-4a79-8d15-93c81cf0f2be"],
Cell[310796, 6428, 2162, 51, 257, "Input",ExpressionUUID->"5f8fbf24-1f7e-4fd7-b801-abea87cd60b7"],
Cell[312961, 6481, 1979, 47, 257, "Input",ExpressionUUID->"b7f39feb-7e9b-42e2-aff7-f52da1c61fc6"],
Cell[CellGroupData[{
Cell[314965, 6532, 385, 8, 33, "Input",ExpressionUUID->"43497f8c-580c-4bc4-9cac-a6110eee566a"],
Cell[315353, 6542, 2971, 54, 240, "Output",ExpressionUUID->"954c1332-09be-4b50-9274-5cdcc58c8135"]
}, Open  ]],
Cell[CellGroupData[{
Cell[318361, 6601, 357, 8, 33, "Input",ExpressionUUID->"053efb08-b3a1-4269-8882-c292d56a1931"],
Cell[318721, 6611, 469, 8, 33, "Output",ExpressionUUID->"f91885c5-0c9f-4f7f-a486-307def302d0e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[319239, 6625, 165, 3, 54, "Subsection",ExpressionUUID->"41ea61a3-054e-4610-aaad-7ad03d1debf0"],
Cell[CellGroupData[{
Cell[319429, 6632, 1329, 32, 220, "Code",ExpressionUUID->"780b3482-a4ad-4c30-b4d7-aa6c36e9c136"],
Cell[320761, 6666, 11737, 216, 63, "Output",ExpressionUUID->"031e42ba-625c-487b-93a0-23d5036eaaaf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[332535, 6887, 248, 4, 29, "Input",ExpressionUUID->"5a8fdd1f-30d5-45c3-94f5-c21f5749e288"],
Cell[332786, 6893, 204, 4, 33, "Output",ExpressionUUID->"f67dbf6d-e7c1-42ec-b41e-283da2513396"]
}, Open  ]],
Cell[CellGroupData[{
Cell[333027, 6902, 162, 3, 45, "Subsubsection",ExpressionUUID->"ca33c122-9b32-4c32-abac-bd18744e2f51"],
Cell[CellGroupData[{
Cell[333214, 6909, 1033, 25, 189, "Input",ExpressionUUID->"6f66879e-6d27-45d2-8f3a-50cabdd261e2"],
Cell[334250, 6936, 45113, 641, 1840, "Output",ExpressionUUID->"6f1854b3-70aa-4c87-be7d-6ab51015111e"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[379436, 7585, 149, 3, 53, "Section",ExpressionUUID->"2678c1c2-9699-4775-b3f7-c754d1d32482"],
Cell[379588, 7590, 241, 4, 32, "Item",ExpressionUUID->"9636e6e1-043e-4935-928e-76f4678f8bdf"],
Cell[CellGroupData[{
Cell[379854, 7598, 210, 4, 32, "Item",ExpressionUUID->"8d23f82d-b708-4710-b4ab-1b1d1a59632b"],
Cell[CellGroupData[{
Cell[380089, 7606, 303, 7, 27, "Subitem",ExpressionUUID->"25d83b8e-52f8-4a49-8e5f-a646f37c95bf"],
Cell[380395, 7615, 397, 8, 29, "Input",ExpressionUUID->"13edd955-c3d8-42d7-bae3-a323e0c2e6b2"],
Cell[380795, 7625, 374, 9, 29, "Input",ExpressionUUID->"8187abd4-7072-42fd-a4be-5551444c1da0"],
Cell[CellGroupData[{
Cell[381194, 7638, 357, 8, 29, "Input",ExpressionUUID->"d45c97e3-b145-4895-a5a8-b9125b4037fc"],
Cell[381554, 7648, 175, 2, 33, "Output",ExpressionUUID->"ee4ee495-c28f-4d0f-9c3e-7d023d41ad18"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[381802, 7658, 158, 3, 67, "Section",ExpressionUUID->"e7ee7826-7806-4fd7-bc58-187f528d57cd"],
Cell[CellGroupData[{
Cell[381985, 7665, 204, 4, 54, "Subsection",ExpressionUUID->"e32804c5-5345-49e5-8ae5-b27e4ad90791"],
Cell[CellGroupData[{
Cell[382214, 7673, 1116, 26, 195, "Input",ExpressionUUID->"3c0d1402-4094-47a3-b244-129bc2fa7f0f"],
Cell[383333, 7701, 8908, 169, 63, "Output",ExpressionUUID->"876ac938-4c21-478e-a0ac-322674c4fa3e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[392278, 7875, 844, 20, 154, "Input",ExpressionUUID->"27c72b6b-f6fc-4e4d-b3d2-1b14f6a05bb3"],
Cell[393125, 7897, 8664, 164, 63, "Output",ExpressionUUID->"42f10064-62d5-434f-8edb-07e729d4a7a5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[401826, 8066, 286, 5, 29, "Input",ExpressionUUID->"238f80e2-06cf-4f70-b441-5178749f2a1a"],
Cell[402115, 8073, 331, 6, 36, "Output",ExpressionUUID->"fb837e40-43f3-4205-9390-74968dc19f8a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[402483, 8084, 210, 4, 29, "Input",ExpressionUUID->"4e83bce8-80dc-472d-ba8c-639979cd7f1f"],
Cell[402696, 8090, 259, 5, 36, "Output",ExpressionUUID->"51ab3398-04ac-4eac-a7a7-6758daaf2f6e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[402992, 8100, 421, 9, 29, "Input",ExpressionUUID->"15016f83-4ca6-4fc7-802c-0e0a95df773b"],
Cell[403416, 8111, 4559, 93, 63, "Output",ExpressionUUID->"7b138d4b-941a-471a-9719-c0bea0c23243"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[408024, 8210, 177, 3, 54, "Subsection",ExpressionUUID->"2aff3fb6-9ae6-45b2-8d22-f2e3736fb34f"],
Cell[408204, 8215, 280, 6, 29, "Input",ExpressionUUID->"7272336c-0a9b-474a-be3c-916170615a14"],
Cell[CellGroupData[{
Cell[408509, 8225, 165, 3, 45, "Subsubsection",ExpressionUUID->"826d099d-b3ce-4648-a74f-7fa69f383666"],
Cell[CellGroupData[{
Cell[408699, 8232, 574, 11, 51, "Input",ExpressionUUID->"564a49b8-33fa-40b7-9620-36ef8d15e314"],
Cell[409276, 8245, 4971, 99, 63, "Output",ExpressionUUID->"d5dcbbb9-aafc-4f11-a8ac-65cc2998b8b7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[414284, 8349, 544, 11, 29, "Input",ExpressionUUID->"7a3757ff-210e-4367-a4c0-0e160cabf8ff"],
Cell[414831, 8362, 4834, 97, 63, "Output",ExpressionUUID->"4797d711-6d65-461d-93eb-dfcb15158eec"]
}, Open  ]],
Cell[CellGroupData[{
Cell[419702, 8464, 309, 6, 29, "Input",ExpressionUUID->"a6fe7918-d87b-4de1-8c7a-27aca59f9936"],
Cell[420014, 8472, 839, 12, 33, "Output",ExpressionUUID->"677e9944-5b87-44d4-a7a2-edbbc56a5321"]
}, Open  ]],
Cell[CellGroupData[{
Cell[420890, 8489, 309, 5, 29, "Input",ExpressionUUID->"a70788af-5dac-40b4-aecd-f48f06befc46"],
Cell[421202, 8496, 1576, 24, 158, "Output",ExpressionUUID->"24aa19f5-f03b-4cb5-abc8-2932d24a6446"]
}, Open  ]],
Cell[CellGroupData[{
Cell[422815, 8525, 421, 7, 29, "Input",ExpressionUUID->"836e4113-f533-47f2-9fb9-da43ce12defa"],
Cell[423239, 8534, 1903, 28, 158, "Output",ExpressionUUID->"eb428e5e-92f1-41de-9d50-54ba8c1cf9bd"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[425191, 8568, 159, 3, 45, "Subsubsection",ExpressionUUID->"3d075ca6-7cde-40bc-a160-19f7dc4bd878"],
Cell[CellGroupData[{
Cell[425375, 8575, 615, 12, 29, "Input",ExpressionUUID->"bde46fbb-2816-421f-9129-51a029a052ed"],
Cell[425993, 8589, 4878, 98, 63, "Output",ExpressionUUID->"026faffe-2d59-4e15-9dcb-e42bea0bdd95"]
}, Open  ]],
Cell[CellGroupData[{
Cell[430908, 8692, 1690, 26, 174, "Input",ExpressionUUID->"2b01c57b-81a3-476e-9f65-711bd9ead6c3"],
Cell[432601, 8720, 2420, 51, 66, "Output",ExpressionUUID->"348e80d5-bfe4-4c35-b617-4a3bb58bf746"]
}, Open  ]],
Cell[CellGroupData[{
Cell[435058, 8776, 426, 8, 29, "Input",ExpressionUUID->"8f20dc1c-c057-4b86-8eb1-bc224bbef830"],
Cell[435487, 8786, 738, 11, 33, "Output",ExpressionUUID->"4c055d29-b863-4279-830f-bcae603aa326"]
}, Open  ]],
Cell[CellGroupData[{
Cell[436262, 8802, 279, 6, 29, "Input",ExpressionUUID->"bb207708-2e33-4f58-b59f-d2aada94c550"],
Cell[436544, 8810, 175, 2, 33, "Output",ExpressionUUID->"ad151c6e-97e0-4907-9241-f6bac67556c1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[436768, 8818, 167, 3, 45, "Subsubsection",ExpressionUUID->"bd3414da-025a-45bb-9b27-aa9003e9a9e2"],
Cell[CellGroupData[{
Cell[436960, 8825, 247, 4, 29, "Input",ExpressionUUID->"3c52a8c8-e20f-4ec3-8a8c-009767c6faab"],
Cell[437210, 8831, 2390, 50, 66, "Output",ExpressionUUID->"bd933eee-ef53-42d2-bad8-ffdaf1620f4e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[439637, 8886, 260, 4, 29, "Input",ExpressionUUID->"7b1e8e9a-e111-47db-83af-eed00e102002"],
Cell[439900, 8892, 2369, 50, 66, "Output",ExpressionUUID->"bc90faea-8010-4057-81ce-434007580e63"]
}, Open  ]],
Cell[CellGroupData[{
Cell[442306, 8947, 252, 4, 29, "Input",ExpressionUUID->"f6597706-7913-4760-9b14-5e6abf8b161b"],
Cell[442561, 8953, 175, 2, 33, "Output",ExpressionUUID->"d999382b-6537-48e0-b249-e90499acfe46"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[442785, 8961, 158, 3, 45, "Subsubsection",ExpressionUUID->"ad563fc7-3f8d-47c4-a417-78864e64b8c2"],
Cell[CellGroupData[{
Cell[442968, 8968, 592, 16, 29, "Input",ExpressionUUID->"3f5e01ad-b0a9-44a3-9dc0-2ba989d1fdf9"],
Cell[443563, 8986, 2396, 50, 66, "Output",ExpressionUUID->"9fdc68fc-d1e4-4e26-a204-1e4f2e597277"]
}, Open  ]],
Cell[CellGroupData[{
Cell[445996, 9041, 345, 7, 29, "Input",ExpressionUUID->"9d134b55-c77f-49a8-b9c6-15f168ff169e"],
Cell[446344, 9050, 385, 10, 33, "Output",ExpressionUUID->"39762100-f593-447d-a100-e009dca54c1e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[446790, 9067, 157, 3, 54, "Subsection",ExpressionUUID->"708b3ce7-d1cf-41dd-876a-53f9376f19d6"],
Cell[CellGroupData[{
Cell[446972, 9074, 633, 13, 29, "Input",ExpressionUUID->"94b2c50c-af6a-4eeb-8c2a-ae625c856568"],
Cell[447608, 9089, 4495, 92, 63, "Output",ExpressionUUID->"a2fa5871-db87-4517-a7c2-ce8873c2e59d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[452140, 9186, 343, 7, 29, "Input",ExpressionUUID->"299de88b-98b8-450a-b1b9-7899f2dc2857"],
Cell[452486, 9195, 342, 7, 33, "Output",ExpressionUUID->"cfd056e9-3658-4288-969a-279a7df74551"]
}, Open  ]],
Cell[CellGroupData[{
Cell[452865, 9207, 320, 6, 29, "Input",ExpressionUUID->"239ea184-a2a2-4c6c-b3fd-6a344163b29a"],
Cell[453188, 9215, 400, 6, 33, "Output",ExpressionUUID->"b6335396-1624-4aaf-8cb7-30e94d8d8380"]
}, Open  ]],
Cell[CellGroupData[{
Cell[453625, 9226, 499, 11, 29, "Input",ExpressionUUID->"a83c29f5-15e7-4c4f-90c8-5c83e29b8045"],
Cell[454127, 9239, 4483, 92, 63, "Output",ExpressionUUID->"3aee0039-c43c-4ce8-94c7-93646335cb82"]
}, Open  ]],
Cell[CellGroupData[{
Cell[458647, 9336, 324, 6, 29, "Input",ExpressionUUID->"84a5b1b5-2b75-41d6-b48c-1273331943e1"],
Cell[458974, 9344, 421, 7, 33, "Output",ExpressionUUID->"baa9a69a-6a46-4637-baf8-6b9064e7f144"]
}, Open  ]],
Cell[CellGroupData[{
Cell[459432, 9356, 514, 11, 51, "Input",ExpressionUUID->"c93653a7-3bc3-49f7-aafd-e81671e9112e"],
Cell[459949, 9369, 4462, 92, 63, "Output",ExpressionUUID->"1d7dd750-249b-4260-b824-fdf483c0ab6f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[464448, 9466, 333, 8, 29, "Input",ExpressionUUID->"c273a76e-eb17-45f5-8ac2-aabfeeb758de"],
Cell[464784, 9476, 229, 4, 33, "Output",ExpressionUUID->"f38b2842-bc14-4761-9e5a-807b5b683411"]
}, Open  ]],
Cell[CellGroupData[{
Cell[465050, 9485, 349, 9, 29, "Input",ExpressionUUID->"98d27d03-e823-451c-92df-9df9cc2877ba"],
Cell[465402, 9496, 210, 4, 33, "Output",ExpressionUUID->"6ca6ee57-5c6f-4428-8d88-4aa3ce965f7e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[465649, 9505, 481, 9, 29, "Input",ExpressionUUID->"2ad9b863-c736-416f-9a66-664d3855c89b"],
Cell[466133, 9516, 130, 3, 26, "Echo",ExpressionUUID->"99b026f3-3fa1-4a30-985f-2b6dc187785e"],
Cell[466266, 9521, 298, 4, 33, "Output",ExpressionUUID->"9fbfbfb2-fd5d-410f-9786-90eb20042183"]
}, Open  ]],
Cell[CellGroupData[{
Cell[466601, 9530, 704, 15, 51, "Input",ExpressionUUID->"d236d586-d21f-4e33-ad15-ea9b0e78e786"],
Cell[467308, 9547, 4393, 91, 63, "Output",ExpressionUUID->"bb153c28-6d30-4cad-b11b-a9c330ffaabd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[471738, 9643, 455, 10, 29, "Input",ExpressionUUID->"0eb0b646-3229-4385-8c93-c2bd980fc9c6"],
Cell[472196, 9655, 252, 6, 33, "Output",ExpressionUUID->"cdafdac3-1ae8-4472-af78-471577f89728"]
}, Open  ]],
Cell[CellGroupData[{
Cell[472485, 9666, 601, 13, 51, "Input",ExpressionUUID->"1a0820f0-ad14-42cb-8c2a-eb1ed04adfc5"],
Cell[473089, 9681, 4343, 90, 63, "Output",ExpressionUUID->"56b3f4e4-bee0-4370-bd5f-7908f263e164"]
}, Open  ]],
Cell[CellGroupData[{
Cell[477469, 9776, 276, 5, 29, "Input",ExpressionUUID->"5f41c49b-8e1d-419e-8c36-926c12ff8c21"],
Cell[477748, 9783, 328, 8, 33, "Output",ExpressionUUID->"c43ca2cb-847a-4186-8013-5d581c38afd0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[478113, 9796, 715, 16, 71, "Input",ExpressionUUID->"57b225be-54a3-406c-973a-171b9b986716"],
Cell[478831, 9814, 4388, 90, 63, "Output",ExpressionUUID->"32b117bf-1ea2-4703-bc2c-923ae3f8e1fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[483256, 9909, 388, 9, 29, "Input",ExpressionUUID->"45755ca8-f1af-416f-9a88-f8e414829128"],
Cell[CellGroupData[{
Cell[483669, 9922, 130, 3, 26, "Echo",ExpressionUUID->"5dd65a63-c3e3-4e94-821b-46c199a4cd64"],
Cell[483802, 9927, 130, 3, 26, "Echo",ExpressionUUID->"bc48dbea-28fa-4f7a-951f-3b291851de5a"],
Cell[483935, 9932, 130, 3, 26, "Echo",ExpressionUUID->"05717694-5897-4f90-9542-411a95ae987c"],
Cell[484068, 9937, 128, 3, 26, "Echo",ExpressionUUID->"3f821e15-8695-4825-9ae8-0cd914111dd8"],
Cell[484199, 9942, 130, 3, 26, "Echo",ExpressionUUID->"1c11b184-f9f8-4a98-b296-7990655a817c"],
Cell[484332, 9947, 128, 3, 26, "Echo",ExpressionUUID->"ce937458-d676-41f6-8fd4-d48bb8380dc5"]
}, Open  ]],
Cell[484475, 9953, 296, 5, 33, "Output",ExpressionUUID->"881ef3ee-6dc1-4de5-a071-22eca7b2d2cc"]
}, Open  ]],
Cell[484786, 9961, 361, 9, 29, "Input",ExpressionUUID->"88d0b182-cb64-4291-9262-364490420480"],
Cell[CellGroupData[{
Cell[485172, 9974, 383, 9, 29, "Input",ExpressionUUID->"ed57d46c-bcf2-4d29-a56d-dca45f273f80"],
Cell[485558, 9985, 8708, 164, 63, "Output",ExpressionUUID->"558a91a1-bd54-4eaf-88ea-acf0f5084bcb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[494303, 10154, 202, 3, 29, "Input",ExpressionUUID->"2bf4d68f-d66b-4c73-9aa6-295bd93a4c27"],
Cell[494508, 10159, 399, 9, 28, "Message",ExpressionUUID->"13d531ce-faeb-4600-a1c3-5ee3bd0075b4"],
Cell[494910, 10170, 5694, 112, 85, "Output",ExpressionUUID->"43cc20ff-5fde-4ad3-a730-30c8e493dadf"]
}, Open  ]],
Cell[500619, 10285, 245, 4, 29, "Input",ExpressionUUID->"7ebb6b92-0cd7-4040-bed8-1644d349ae3d",
 CellID->914026889],
Cell[500867, 10291, 617, 12, 307, "Input",ExpressionUUID->"58037b69-9891-4c2e-869a-bca191e375f8",
 CellID->1099396432],
Cell[501487, 10305, 244, 4, 29, "Input",ExpressionUUID->"9ec39f21-5fb6-4be2-8e07-75b94063f0e4"],
Cell[CellGroupData[{
Cell[501756, 10313, 449, 10, 29, "Input",ExpressionUUID->"6c9db8e5-ef9f-441f-8d15-b29da4db632c"],
Cell[502208, 10325, 131, 3, 26, "Echo",ExpressionUUID->"a5ff8f34-df4d-489a-ab38-8fca2caf5a20"],
Cell[502342, 10330, 4316, 89, 63, "Output",ExpressionUUID->"0d1b6de9-c699-4b14-8e05-708cabd35267"]
}, Open  ]],
Cell[CellGroupData[{
Cell[506695, 10424, 376, 8, 29, "Input",ExpressionUUID->"72388b54-070e-4a98-8de5-57ebe770f347"],
Cell[CellGroupData[{
Cell[507096, 10436, 128, 3, 26, "Echo",ExpressionUUID->"9c6162ed-f044-499f-9427-28f60809683b"],
Cell[507227, 10441, 130, 3, 26, "Echo",ExpressionUUID->"04f5100c-0ae0-4b7b-bdc5-5005662d4918"],
Cell[507360, 10446, 128, 3, 26, "Echo",ExpressionUUID->"421220fc-2b81-4052-8e5d-8fbbab0e1cfb"]
}, Open  ]],
Cell[507503, 10452, 273, 4, 33, "Output",ExpressionUUID->"fc04aa34-4ed8-4819-b79d-3d55237259f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[507813, 10461, 368, 8, 29, "Input",ExpressionUUID->"29058056-a567-4bc3-9850-dccb34bc605a"],
Cell[508184, 10471, 128, 3, 26, "Echo",ExpressionUUID->"ec1f78cb-5d11-4fb8-8c02-43530061d652"],
Cell[508315, 10476, 4347, 90, 63, "Output",ExpressionUUID->"5b6d8fc7-0dbe-447a-b882-07c87fbea69b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[512699, 10571, 271, 5, 29, "Input",ExpressionUUID->"6e9376b6-0a4d-461a-a924-0f6bf637ef04"],
Cell[512973, 10578, 203, 3, 33, "Output",ExpressionUUID->"a0544858-b865-463b-8711-c10cc4a1119b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[513213, 10586, 206, 3, 29, "Input",ExpressionUUID->"fda2a2e9-ee3a-4cf6-ac09-91a41553b99f"],
Cell[513422, 10591, 150, 2, 33, "Output",ExpressionUUID->"28c2f25c-3993-4430-8fd4-40a33d17553d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[513609, 10598, 182, 2, 29, "Input",ExpressionUUID->"950761e3-5b88-41c2-850b-a5d9afd51e8f"],
Cell[513794, 10602, 156, 2, 33, "Output",ExpressionUUID->"277eaf06-c06e-4ef2-a42c-fa00c53474c3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[513987, 10609, 212, 3, 29, "Input",ExpressionUUID->"c84d9dd0-5584-4eb8-b841-fcc9d8b420a6"],
Cell[514202, 10614, 1662, 35, 188, "Output",ExpressionUUID->"8b5426b8-406c-40de-bed7-4a6322030b4e"]
}, Open  ]],
Cell[515879, 10652, 1126, 19, 328, "Input",ExpressionUUID->"bce46687-2005-40a4-8a19-118bf1957ae9",
 CellID->322383571],
Cell[CellGroupData[{
Cell[517030, 10675, 232, 4, 29, "Input",ExpressionUUID->"86144e0a-8e92-4f37-9e3c-e824ea8b34e0"],
Cell[517265, 10681, 226, 3, 33, "Output",ExpressionUUID->"bd9a8d97-6a52-4619-8384-30f339c3f808"]
}, Open  ]],
Cell[517506, 10687, 554, 10, 328, "Input",ExpressionUUID->"3f63b2b2-709a-4d5c-b983-e3d9b98b189d"],
Cell[CellGroupData[{
Cell[518085, 10701, 669, 15, 51, "Input",ExpressionUUID->"99e5b59d-66e3-49da-88ea-9795fc0dc0e9"],
Cell[518757, 10718, 426, 8, 33, "Output",ExpressionUUID->"a48cbef6-396e-4d5a-ab8f-cbc99fa051e2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[519220, 10731, 283, 6, 29, "Input",ExpressionUUID->"488a3b0a-6b15-477d-be83-70dcfcaa93d3"],
Cell[519506, 10739, 268, 3, 33, "Output",ExpressionUUID->"8e713880-1a78-41ae-8d06-f387999418cf"]
}, Open  ]],
Cell[519789, 10745, 636, 10, 29, "Input",ExpressionUUID->"1babd20d-bbfc-46be-8c5c-73ee85b54015",
 CellID->1830551293],
Cell[CellGroupData[{
Cell[520450, 10759, 405, 7, 71, "Input",ExpressionUUID->"7c7f3bf8-4af6-4f07-994d-2ea63da1e6c4"],
Cell[520858, 10768, 313, 4, 33, "Output",ExpressionUUID->"969ebdd2-a96f-4962-8bcc-b71906536305"]
}, Open  ]],
Cell[CellGroupData[{
Cell[521208, 10777, 523, 11, 51, "Input",ExpressionUUID->"8cc7bb05-b300-464b-94bf-99531593f44e"],
Cell[521734, 10790, 189, 4, 26, "Echo",ExpressionUUID->"c463f426-51c6-4007-915b-db397f04bf23"],
Cell[521926, 10796, 4869, 98, 63, "Output",ExpressionUUID->"408173f1-f2bf-4093-a927-a5b04c463ca3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[526832, 10899, 496, 12, 51, "Input",ExpressionUUID->"23d8cbb3-e489-4ea7-8b8d-229772d19f7b"],
Cell[527331, 10913, 187, 4, 26, "Echo",ExpressionUUID->"82912cc8-a52b-4564-a473-4ee079f3c644"],
Cell[527521, 10919, 4396, 90, 63, "Output",ExpressionUUID->"ae427b66-3f12-4a1e-b373-1f3e912aed38"]
}, Open  ]],
Cell[CellGroupData[{
Cell[531954, 11014, 408, 9, 29, "Input",ExpressionUUID->"ee730658-7544-4f5a-bf15-f01ba777e761"],
Cell[532365, 11025, 4375, 90, 63, "Output",ExpressionUUID->"07a5f3b9-3c76-4f46-b500-525d0fd115c0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[536777, 11120, 268, 5, 29, "Input",ExpressionUUID->"e2e2f00b-ac15-4fb7-ad5d-836231f9db29"],
Cell[537048, 11127, 150, 2, 33, "Output",ExpressionUUID->"702cd334-64b8-4fa1-9409-12974d0f6dd6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[537235, 11134, 204, 3, 29, "Input",ExpressionUUID->"5f27daa4-99f3-49c5-95eb-065f85039e4b"],
Cell[537442, 11139, 150, 2, 33, "Output",ExpressionUUID->"94cc9537-8dae-4389-8ff8-2c9302a6220a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[537629, 11146, 5382, 123, 484, "Input",ExpressionUUID->"3fa453c0-2c87-4951-bb19-5f2a73f59286"],
Cell[543014, 11271, 436, 10, 28, "Message",ExpressionUUID->"85b0407d-3bba-4d75-ba63-772e9e850533"],
Cell[543453, 11283, 438, 10, 28, "Message",ExpressionUUID->"298bc8c5-992c-44a0-83dd-708c1126994d"],
Cell[543894, 11295, 438, 10, 28, "Message",ExpressionUUID->"e430d40a-0d1a-4ebf-962d-bf72820a9420"],
Cell[544335, 11307, 518, 12, 28, "Message",ExpressionUUID->"c30da044-c74f-4358-943a-e50697dcadeb"],
Cell[544856, 11321, 25125, 445, 63, "Output",ExpressionUUID->"ebb2de70-f84a-4680-b9de-f8232975cfe9"]
}, Open  ]],
Cell[569996, 11769, 198, 3, 29, "Input",ExpressionUUID->"002f0fe5-7320-4a2b-a2e1-e4d9da303fb5"],
Cell[CellGroupData[{
Cell[570219, 11776, 844, 20, 92, "Input",ExpressionUUID->"e9937d44-8939-4597-a3d6-3fbdf6253039"],
Cell[571066, 11798, 11605, 214, 63, "Output",ExpressionUUID->"52a1d34a-4ead-484b-8d93-ad6d43a9929a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[582708, 12017, 195, 3, 29, "Input",ExpressionUUID->"3c6c3848-4507-45fd-b50e-a04f1678158b"],
Cell[CellGroupData[{
Cell[582928, 12024, 144, 3, 26, "Echo",ExpressionUUID->"2aff851e-5a7f-497a-a8f7-4ec4f341b88b"],
Cell[583075, 12029, 139, 3, 26, "Echo",ExpressionUUID->"d1e8a1cd-e2e8-4dce-a05b-d2d275152bca"]
}, Open  ]]
}, Open  ]],
Cell[583241, 12036, 443, 20, 380, "Text",ExpressionUUID->"9dd129cf-b403-4dce-84da-d2ec1ea364c4"],
Cell[CellGroupData[{
Cell[583709, 12060, 220, 3, 29, "Input",ExpressionUUID->"27a55342-d4f0-4ebc-8c21-6182415f612e"],
Cell[CellGroupData[{
Cell[583954, 12067, 129, 3, 26, "Echo",ExpressionUUID->"58389271-b40e-456d-9c3c-bffe06b5badb"],
Cell[584086, 12072, 128, 3, 26, "Echo",ExpressionUUID->"b0ea31f8-131b-4501-b1e8-80cc448480c5"],
Cell[584217, 12077, 131, 3, 26, "Echo",ExpressionUUID->"5d449b54-c932-4851-9343-399c8cb47400"],
Cell[584351, 12082, 139, 3, 26, "Echo",ExpressionUUID->"c106df64-b28f-4808-b506-e74196bb4725"],
Cell[584493, 12087, 128, 3, 26, "Echo",ExpressionUUID->"27aedf98-1cc2-4930-ae3c-b2fe7f99511d"],
Cell[584624, 12092, 130, 3, 26, "Echo",ExpressionUUID->"2e175708-0fd1-4056-9c86-cf74d8123c8f"],
Cell[584757, 12097, 129, 3, 26, "Echo",ExpressionUUID->"70ab2808-f6b0-4c7b-9669-e798cb823f65"],
Cell[584889, 12102, 137, 3, 26, "Echo",ExpressionUUID->"f774f6dc-f01a-42dc-b8ee-e164e2160438"],
Cell[585029, 12107, 130, 3, 26, "Echo",ExpressionUUID->"38c732e3-6c9b-4a56-bfb5-f009274d49a0"],
Cell[585162, 12112, 130, 3, 26, "Echo",ExpressionUUID->"372dbfe4-558b-494d-be0c-a60d679a8eb6"],
Cell[585295, 12117, 129, 3, 26, "Echo",ExpressionUUID->"5785d09a-b284-4050-8fca-a930f2a47c61"],
Cell[585427, 12122, 137, 3, 26, "Echo",ExpressionUUID->"4ac10b1b-07c7-4d52-93f2-0ab826f49021"],
Cell[585567, 12127, 128, 3, 26, "Echo",ExpressionUUID->"7814dc05-c7e0-4fbd-95fa-478283fe02d5"],
Cell[585698, 12132, 130, 3, 26, "Echo",ExpressionUUID->"854de61c-8dc6-4f13-b3f5-f91622cbe6f0"],
Cell[585831, 12137, 128, 3, 26, "Echo",ExpressionUUID->"2d9d7ce0-12b3-4118-8f65-a5d030567233"],
Cell[585962, 12142, 128, 3, 26, "Echo",ExpressionUUID->"9e6afd3a-0415-4e5e-ad97-e3a9a7d5e4ee"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[586139, 12151, 155, 2, 29, "Input",ExpressionUUID->"eafa1026-b722-40df-b58e-fb130d270f14"],
Cell[CellGroupData[{
Cell[586319, 12157, 129, 3, 26, "Echo",ExpressionUUID->"59643d75-237a-4376-8da1-27485a325850"],
Cell[586451, 12162, 128, 3, 26, "Echo",ExpressionUUID->"b1647c2d-0488-41d3-899a-1301cce6e911"],
Cell[586582, 12167, 129, 3, 26, "Echo",ExpressionUUID->"028471bc-8f08-4092-989d-bb118292321f"],
Cell[586714, 12172, 139, 3, 26, "Echo",ExpressionUUID->"93b03b29-6bad-416b-8d01-de01ac6d16d7"],
Cell[586856, 12177, 128, 3, 26, "Echo",ExpressionUUID->"acc5fd5a-9d5d-46fe-9762-c236e37a6aa9"],
Cell[586987, 12182, 130, 3, 26, "Echo",ExpressionUUID->"356054e8-f880-4874-be19-7e3bbb85404b"],
Cell[587120, 12187, 131, 3, 26, "Echo",ExpressionUUID->"8ae81d60-764d-4d50-a3e1-99a7f757f7b9"],
Cell[587254, 12192, 134, 2, 26, "Echo",ExpressionUUID->"b208ff98-93d3-4dbc-9064-de8ec7824f3a"],
Cell[587391, 12196, 130, 3, 26, "Echo",ExpressionUUID->"94520552-b445-40a6-9187-72a1d42dc494"],
Cell[587524, 12201, 130, 3, 26, "Echo",ExpressionUUID->"88d287cd-a7f1-4980-9d23-5f60427f3ef6"],
Cell[587657, 12206, 129, 3, 26, "Echo",ExpressionUUID->"681e6827-75fa-44b5-809c-fb975ed12ac4"],
Cell[587789, 12211, 139, 3, 26, "Echo",ExpressionUUID->"7b4ece9f-c171-4fdd-a1f9-af7030f5137b"],
Cell[587931, 12216, 128, 3, 26, "Echo",ExpressionUUID->"a3abc739-c23d-486d-a949-61a8ed166c3c"],
Cell[588062, 12221, 128, 3, 26, "Echo",ExpressionUUID->"225aab60-ef3a-4f1b-b789-ffea19fe8015"],
Cell[588193, 12226, 130, 3, 26, "Echo",ExpressionUUID->"42c5d034-917a-473e-b711-2fb1a6697a44"],
Cell[588326, 12231, 128, 3, 26, "Echo",ExpressionUUID->"57a8353a-8b49-401b-9296-bc306ea340db"]
}, Open  ]]
}, Open  ]],
Cell[588481, 12238, 197, 3, 29, "Input",ExpressionUUID->"efd86905-dc93-41eb-ab80-05db6edfc784"],
Cell[588681, 12243, 155, 3, 35, "Text",ExpressionUUID->"e122fac4-fefc-4f82-8388-fcb3ab70fce7"],
Cell[CellGroupData[{
Cell[588861, 12250, 271, 6, 29, "Input",ExpressionUUID->"9ba288d9-818f-44c4-8b20-80c92a494604"],
Cell[CellGroupData[{
Cell[589157, 12260, 154, 3, 26, "Echo",ExpressionUUID->"da536479-f3b0-4de6-889e-3735710d3a8a"],
Cell[589314, 12265, 2328, 49, 54, "Echo",ExpressionUUID->"40ec4dc3-f92b-4835-8681-794a3759624e"],
Cell[591645, 12316, 149, 3, 26, "Echo",ExpressionUUID->"fe8a3b22-e358-43b5-9d80-00c4b94a2bbb"],
Cell[591797, 12321, 2331, 50, 54, "Echo",ExpressionUUID->"c0c762ab-db62-4f47-ae3d-8fde3df8b57d"],
Cell[594131, 12373, 144, 3, 26, "Echo",ExpressionUUID->"19f5738a-89f2-454b-a081-6d0a1f8463d0"],
Cell[594278, 12378, 4227, 89, 52, "Echo",ExpressionUUID->"78e91b37-c0da-412e-9e7b-e252cebdded7"],
Cell[598508, 12469, 139, 3, 26, "Echo",ExpressionUUID->"06edf55a-2da1-4790-98e4-940eee51a27d"],
Cell[598650, 12474, 186, 5, 26, "Echo",ExpressionUUID->"62712ddd-a1c4-44c6-b8dc-14a9a64525a2"],
Cell[598839, 12481, 162, 3, 26, "Echo",ExpressionUUID->"e170f814-cb79-42d9-9891-01b5bde3b757"],
Cell[599004, 12486, 2333, 50, 54, "Echo",ExpressionUUID->"b3873d8c-b961-4fd6-a430-727f08d7dab5"],
Cell[601340, 12538, 161, 3, 26, "Echo",ExpressionUUID->"5ae597f4-e377-4ab0-ba0f-da1ec9ce8177"],
Cell[601504, 12543, 2351, 51, 54, "Echo",ExpressionUUID->"a04a63d8-2f98-4375-bf67-d00f650fd488"]
}, Open  ]],
Cell[603870, 12597, 293, 4, 33, "Output",ExpressionUUID->"984d6f36-888c-497c-b3c8-1d006aa8d5c3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[604200, 12606, 271, 6, 29, "Input",ExpressionUUID->"7cfc4637-dd3a-47ad-943d-9afc3fb4d629"],
Cell[CellGroupData[{
Cell[604496, 12616, 154, 3, 26, "Echo",ExpressionUUID->"f864704f-63b8-45d0-a212-0fb3b334ebeb"],
Cell[604653, 12621, 2331, 50, 54, "Echo",ExpressionUUID->"023b49bf-ccb6-458e-a99c-e2ac39151c38"],
Cell[606987, 12673, 144, 2, 26, "Echo",ExpressionUUID->"858a416d-11d8-49c8-9c4e-b8bc3d0a8399"],
Cell[607134, 12677, 2331, 50, 54, "Echo",ExpressionUUID->"ef37ec74-5b0c-4456-ab11-cd1c2efa5fe5"],
Cell[609468, 12729, 144, 3, 26, "Echo",ExpressionUUID->"17aee904-e113-414a-9cd7-d73265b33498"],
Cell[609615, 12734, 4227, 89, 52, "Echo",ExpressionUUID->"950a2a2d-6e6d-463c-9746-390da8a9073c"],
Cell[613845, 12825, 141, 3, 26, "Echo",ExpressionUUID->"05b7ba91-02ba-41af-8692-ea43c813c553"],
Cell[613989, 12830, 188, 5, 26, "Echo",ExpressionUUID->"947588da-01ba-45a9-8d85-69ae14d03258"],
Cell[614180, 12837, 160, 3, 26, "Echo",ExpressionUUID->"f12d8a50-c848-467a-8efd-3435b72c74e0"],
Cell[614343, 12842, 2333, 50, 54, "Echo",ExpressionUUID->"7ad91ab7-7e72-4fe9-9a17-f3cf5e60d0ed"],
Cell[616679, 12894, 159, 3, 26, "Echo",ExpressionUUID->"d855d9fd-ce2f-48cd-95ef-2817ce221edb"],
Cell[616841, 12899, 2346, 50, 54, "Echo",ExpressionUUID->"cdae5c27-793c-4b4b-979c-16d51a2488d1"]
}, Open  ]],
Cell[619202, 12952, 193, 2, 33, "Output",ExpressionUUID->"3a11d221-4461-419c-bdfa-c5d1973867b6"]
}, Open  ]],
Cell[619410, 12957, 156, 3, 35, "Text",ExpressionUUID->"8b6565c3-5c71-47a2-b021-32221e3717db"],
Cell[CellGroupData[{
Cell[619591, 12964, 438, 9, 29, "Input",ExpressionUUID->"00edc26e-bc42-4587-9048-19be7a4aa623"],
Cell[CellGroupData[{
Cell[620054, 12977, 172, 3, 26, "Echo",ExpressionUUID->"82d8c580-f536-4a14-b6dc-a3fcbbf2bfc3"],
Cell[620229, 12982, 154, 3, 26, "Echo",ExpressionUUID->"3c5aeab0-b5b4-4e60-8a11-f8a36c00d000"],
Cell[620386, 12987, 2331, 50, 54, "Echo",ExpressionUUID->"cd92d09a-e32c-4666-933e-bf57c4c0397a"],
Cell[622720, 13039, 149, 3, 26, "Echo",ExpressionUUID->"e1cb9f6a-e89a-4421-b43d-3738809b0edf"],
Cell[622872, 13044, 2331, 50, 54, "Echo",ExpressionUUID->"af908b13-dbb0-430e-85ea-83a9ccfa3f13"],
Cell[625206, 13096, 144, 3, 26, "Echo",ExpressionUUID->"3f33832e-653c-4c68-aea1-d634ee4b983c"],
Cell[625353, 13101, 4227, 89, 52, "Echo",ExpressionUUID->"fd72c310-4274-49c4-9d14-4f9103025e55"],
Cell[629583, 13192, 139, 3, 26, "Echo",ExpressionUUID->"e0be05b6-ad4f-4b1f-be04-19d72b7ff7a9"],
Cell[629725, 13197, 188, 5, 26, "Echo",ExpressionUUID->"3c391c3d-ef25-47e6-aed7-4e0e823e6100"],
Cell[629916, 13204, 160, 3, 26, "Echo",ExpressionUUID->"8d07942d-4ffc-409c-9606-bd83afec89c0"],
Cell[630079, 13209, 2331, 50, 54, "Echo",ExpressionUUID->"81812b21-f513-4407-b151-0166b99a3dc1"],
Cell[632413, 13261, 161, 3, 26, "Echo",ExpressionUUID->"52807801-d814-4499-96cb-416851945cff"],
Cell[632577, 13266, 2351, 51, 54, "Echo",ExpressionUUID->"840fa1af-b4a1-4062-87e5-202bb358691b"]
}, Open  ]],
Cell[634943, 13320, 316, 4, 33, "Output",ExpressionUUID->"7c915e4c-23b6-4367-a265-ce7c0a333cb1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[635296, 13329, 271, 6, 29, "Input",ExpressionUUID->"e6cb3b64-d877-456f-97e4-b2265b75e2e3"],
Cell[CellGroupData[{
Cell[635592, 13339, 152, 3, 26, "Echo",ExpressionUUID->"12bf158f-fdb3-4aea-b065-f3e8e4155988"],
Cell[635747, 13344, 2333, 50, 54, "Echo",ExpressionUUID->"3db0d823-8f17-44c1-aa54-70c7fcad5750"],
Cell[638083, 13396, 147, 3, 26, "Echo",ExpressionUUID->"2a984d76-cf99-4e98-89a5-de735399d601"],
Cell[638233, 13401, 2349, 51, 54, "Echo",ExpressionUUID->"0fff8105-d5a5-4509-b57e-d1abd063df97"],
Cell[640585, 13454, 144, 3, 26, "Echo",ExpressionUUID->"3bc96c4e-e2ed-44ce-a11d-081641cd48e5"],
Cell[640732, 13459, 4227, 89, 52, "Echo",ExpressionUUID->"f84a172d-d8f4-43ea-b810-3e2281fc6e0e"],
Cell[644962, 13550, 139, 3, 26, "Echo",ExpressionUUID->"d4505e62-92ef-4e69-a5f2-851e2aa193be"],
Cell[645104, 13555, 186, 5, 26, "Echo",ExpressionUUID->"3d309cf4-9dfb-4eb7-b8a4-9c80916a028c"]
}, Open  ]],
Cell[645305, 13563, 238, 3, 33, "Output",ExpressionUUID->"3ddf556d-f8c1-49fb-8263-851a74f7170f"]
}, Open  ]],
Cell[645558, 13569, 160, 3, 35, "Text",ExpressionUUID->"897f376c-b5e2-4fe6-8edc-c99028096947"],
Cell[CellGroupData[{
Cell[645743, 13576, 438, 9, 29, "Input",ExpressionUUID->"c95ea796-9fc4-48f3-b367-2bbfc204278f"],
Cell[CellGroupData[{
Cell[646206, 13589, 149, 3, 26, "Echo",ExpressionUUID->"0b7eea20-70a9-4611-9c0c-c3dcd1a7efd6"],
Cell[646358, 13594, 2331, 50, 54, "Echo",ExpressionUUID->"d9189ec5-a69b-4a6d-93ed-db3216bb2d7d"],
Cell[648692, 13646, 144, 3, 26, "Echo",ExpressionUUID->"aa14a864-6ec6-4d85-a74c-b57a14c8b2dc"],
Cell[648839, 13651, 4227, 89, 52, "Echo",ExpressionUUID->"040e70ac-465b-4ed4-bc49-0c23eb3c35d2"],
Cell[653069, 13742, 139, 3, 26, "Echo",ExpressionUUID->"2486f26e-af0f-42ec-8a29-dc4bbec1f0dc"],
Cell[653211, 13747, 183, 4, 26, "Echo",ExpressionUUID->"4eeba37b-c879-4b64-b5fd-577dac455a01"]
}, Open  ]],
Cell[653409, 13754, 264, 3, 33, "Output",ExpressionUUID->"fb3aab2a-f3c2-4126-ab60-df9e411e8cf5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[653710, 13762, 271, 6, 29, "Input",ExpressionUUID->"f12ff30e-75c7-4329-8b1d-7829a7d8a0c5"],
Cell[CellGroupData[{
Cell[654006, 13772, 147, 3, 26, "Echo",ExpressionUUID->"3c928b4c-3d37-49ed-ad94-7f273fbf3770"],
Cell[654156, 13777, 2333, 50, 54, "Echo",ExpressionUUID->"2be5b326-55b3-4ca4-8c1d-772188a5cb63"],
Cell[656492, 13829, 144, 3, 26, "Echo",ExpressionUUID->"98e0be9e-a59b-47f5-aa78-44b4fb070f47"],
Cell[656639, 13834, 4227, 89, 52, "Echo",ExpressionUUID->"bfe10fdf-4b32-473a-a3f5-fe8f2a5484e3"],
Cell[660869, 13925, 139, 3, 26, "Echo",ExpressionUUID->"3f6d9af2-f4b5-408f-ab9f-837ed743733c"],
Cell[661011, 13930, 188, 5, 26, "Echo",ExpressionUUID->"31e8dae4-5f0c-4705-9a82-edbfa12449de"]
}, Open  ]],
Cell[661214, 13938, 238, 3, 33, "Output",ExpressionUUID->"3429c980-2ac7-45a3-bb4d-5bf3df9d0ccf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[661489, 13946, 890, 21, 133, "Input",ExpressionUUID->"c7263e85-d6ff-4baa-b709-d4c1fefbaa2f"],
Cell[662382, 13969, 56028, 939, 63, "Output",ExpressionUUID->"673fd13f-d839-47c9-b9e1-b4872eed864a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[718447, 14913, 220, 3, 29, "Input",ExpressionUUID->"5465c6e7-5f47-410a-b8cd-db1592d3d6a5"],
Cell[718670, 14918, 149, 2, 33, "Output",ExpressionUUID->"b0566870-b5a0-4764-b792-f6800708c4bb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[718856, 14925, 303, 5, 29, "Input",ExpressionUUID->"4ef2f9f3-72fd-406c-ba95-88700bf5f070"],
Cell[719162, 14932, 175, 2, 33, "Output",ExpressionUUID->"85404239-1b5f-4261-98fe-0ff4d5f8bc55"]
}, Open  ]],
Cell[719352, 14937, 265, 5, 29, "Input",ExpressionUUID->"435e4bc8-2d42-4d16-9b4b-2757700b6eac"],
Cell[CellGroupData[{
Cell[719642, 14946, 3429, 74, 422, "Input",ExpressionUUID->"8d0184e7-aab8-4da4-a549-e057dd41fbb2"],
Cell[723074, 15022, 57311, 964, 63, "Output",ExpressionUUID->"c3f616a0-eeb7-427d-a2b6-3df89e9acc09"]
}, Open  ]],
Cell[CellGroupData[{
Cell[780422, 15991, 223, 4, 29, "Input",ExpressionUUID->"61aafd9a-696d-41bf-8237-12496085bcab"],
Cell[780648, 15997, 249, 3, 33, "Output",ExpressionUUID->"5ef7795d-0843-4e95-b93c-b189e3180eff"]
}, Open  ]],
Cell[780912, 16003, 198, 3, 29, "Input",ExpressionUUID->"063b9efc-6e57-4476-bf08-7174d6552f15"],
Cell[CellGroupData[{
Cell[781135, 16010, 630, 16, 71, "Input",ExpressionUUID->"6b6c0bb2-b6c8-4961-b3c6-cb673564e4a8"],
Cell[781768, 16028, 8725, 164, 63, "Output",ExpressionUUID->"87d71572-7f9c-4b42-bbcf-1aa61b8fc37d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[790530, 16197, 196, 3, 29, "Input",ExpressionUUID->"93f1f4e1-cc08-4da0-8834-6add36e1abd1"],
Cell[790729, 16202, 172, 2, 33, "Output",ExpressionUUID->"a8c30378-c07c-4799-8a3f-1474ba727278"]
}, Open  ]],
Cell[CellGroupData[{
Cell[790938, 16209, 1446, 33, 195, "Input",ExpressionUUID->"c30042c1-cdf1-48c3-9107-48331cf3635b"],
Cell[792387, 16244, 56314, 946, 63, "Output",ExpressionUUID->"0264abef-6de8-4b5e-aeda-2ef26733b3f5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[848738, 17195, 292, 5, 29, "Input",ExpressionUUID->"14c60938-243d-4b97-834b-32dd222a2076"],
Cell[849033, 17202, 175, 2, 33, "Output",ExpressionUUID->"954317e3-c414-420b-a933-bd5ff49db34f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[849245, 17209, 261, 4, 29, "Input",ExpressionUUID->"3df9b858-e10a-4a6b-930e-2382975f3699"],
Cell[849509, 17215, 175, 2, 33, "Output",ExpressionUUID->"72905c48-4a6e-46b7-b0cc-7f4084c2a748"]
}, Open  ]],
Cell[CellGroupData[{
Cell[849721, 17222, 3626, 85, 391, "Input",ExpressionUUID->"afc4d485-6eef-4b4a-bf99-23a19b6b1aa8"],
Cell[853350, 17309, 72047, 1207, 63, "Output",ExpressionUUID->"444b8cd2-51cb-4b79-b1c5-2dc098d70b40"]
}, Open  ]],
Cell[925412, 18519, 197, 3, 29, "Input",ExpressionUUID->"ef99a7a6-a262-481e-820c-372cc50ab094"],
Cell[CellGroupData[{
Cell[925634, 18526, 414, 8, 29, "Input",ExpressionUUID->"6d868474-532a-4bc3-adfb-759d12e75768"],
Cell[CellGroupData[{
Cell[926073, 18538, 149, 3, 26, "Echo",ExpressionUUID->"81b7db2e-3ed2-43aa-a45b-f3e0aed27511"],
Cell[926225, 18543, 130, 3, 26, "Echo",ExpressionUUID->"2a9d3395-2693-42e3-a34a-f39d1220c9af"],
Cell[926358, 18548, 143, 3, 26, "Echo",ExpressionUUID->"ed44ed12-535a-4c3d-93ca-00f927054621"],
Cell[926504, 18553, 128, 3, 26, "Echo",ExpressionUUID->"ea19eb0b-143d-45ea-a153-ce10685a2d78"],
Cell[926635, 18558, 130, 3, 26, "Echo",ExpressionUUID->"b51b6f81-38fb-4ac2-97c1-ac162cc54de8"],
Cell[926768, 18563, 128, 3, 26, "Echo",ExpressionUUID->"2a78ec01-ba9f-4af0-8673-6ce8c6313240"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[926957, 18573, 156, 3, 54, "Subsection",ExpressionUUID->"af48fbc8-1817-4a93-aabc-b17cbddb3307"],
Cell[927116, 18578, 224, 3, 29, "Input",ExpressionUUID->"4cbc5b83-1821-4f6d-8e77-d6f39737d9e8"],
Cell[CellGroupData[{
Cell[927365, 18585, 484, 8, 310, "Code",ExpressionUUID->"b845cd7e-3ce2-4004-99aa-a61cd1085b70"],
Cell[927852, 18595, 328, 4, 55, "Output",ExpressionUUID->"556d5765-e178-46ea-b488-3bcab8232265"]
}, Open  ]],
Cell[CellGroupData[{
Cell[928217, 18604, 227, 3, 29, "Input",ExpressionUUID->"74c744ff-bb4f-441f-8441-9d512b81d58f"],
Cell[928447, 18609, 352, 4, 55, "Output",ExpressionUUID->"4d5b5e18-cf5f-4841-88d6-178f64a62e26"]
}, Open  ]],
Cell[CellGroupData[{
Cell[928836, 18618, 9804, 210, 1259, "Code",ExpressionUUID->"965c001c-4bf8-40cd-93cc-6c983cf995aa"],
Cell[938643, 18830, 54445, 928, 63, "Output",ExpressionUUID->"0840aaa4-f971-4f2f-bcb6-f782b9852fa2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[993125, 19763, 206, 3, 29, "Input",ExpressionUUID->"ecd262a0-19df-49ca-8859-a4c73b6c5a33"],
Cell[CellGroupData[{
Cell[993356, 19770, 143, 3, 26, "Echo",ExpressionUUID->"18524781-8ece-4b49-8291-968716e74508"],
Cell[993502, 19775, 143, 3, 26, "Echo",ExpressionUUID->"fc978846-f3b0-421d-b829-912c8b49912f"],
Cell[993648, 19780, 143, 3, 26, "Echo",ExpressionUUID->"5b70a39d-ef0f-4ca0-98c5-e53827c8fa62"],
Cell[993794, 19785, 143, 3, 26, "Echo",ExpressionUUID->"3a551c67-13e7-463e-b996-71f86b8f5034"],
Cell[993940, 19790, 143, 3, 26, "Echo",ExpressionUUID->"c482f11a-973a-46bc-a874-2b2faa720ee2"],
Cell[994086, 19795, 143, 3, 26, "Echo",ExpressionUUID->"3fd4fb1c-e6c3-4e85-8369-1ab029fe1888"],
Cell[994232, 19800, 143, 3, 26, "Echo",ExpressionUUID->"9b34e242-15a3-48f0-aa00-eb86278ad73a"],
Cell[994378, 19805, 143, 3, 26, "Echo",ExpressionUUID->"201bfed5-6166-41e4-9a49-cda2cb8dfd29"],
Cell[994524, 19810, 140, 2, 26, "Echo",ExpressionUUID->"de88dad1-0376-4949-aeae-35dec339e3a2"],
Cell[994667, 19814, 143, 3, 26, "Echo",ExpressionUUID->"6076cf36-ec19-4054-9146-060cb91dc21d"]
}, Open  ]],
Cell[994825, 19820, 4517, 95, 68, "Output",ExpressionUUID->"c5c5422d-b7a7-41fc-8fba-74ba2650aa45"]
}, Open  ]],
Cell[CellGroupData[{
Cell[999379, 19920, 172, 3, 45, "Subsubsection",ExpressionUUID->"656b98f6-8e42-45fb-8f7d-64eef54ce1cc"],
Cell[CellGroupData[{
Cell[999576, 19927, 226, 3, 29, "Input",ExpressionUUID->"a6e580eb-17df-4f8a-a41c-532f1cc5c57f"],
Cell[999805, 19932, 639, 9, 55, "Output",ExpressionUUID->"b166c7c4-4cdb-4fab-b924-51af7cd7aefc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1000481, 19946, 449, 9, 51, "Input",ExpressionUUID->"718a38de-d36b-4d3b-bf95-b6774ab0c7a5"],
Cell[1000933, 19957, 4629, 94, 63, "Output",ExpressionUUID->"fcbc8c0a-2e7b-42a1-97c1-49a8dc5bd91a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1005599, 20056, 745, 16, 71, "Input",ExpressionUUID->"dacfec10-5e70-4544-a066-4ea6dc796583"],
Cell[1006347, 20074, 4660, 93, 63, "Output",ExpressionUUID->"674575b7-4ac0-4960-807b-140e0ca225fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1011044, 20172, 357, 7, 29, "Input",ExpressionUUID->"278c85e0-6cf2-44fb-b2fc-619a4ff949db"],
Cell[CellGroupData[{
Cell[1011426, 20183, 433, 11, 27, "EchoBefore",ExpressionUUID->"168adaaa-06ba-47f8-ba81-691ec2c34e89",
 CellTags->"85779f10-0e3e-4490-aea3-9c9c85b0d204"],
Cell[1011862, 20196, 498, 14, 27, "EchoAfter",ExpressionUUID->"99f19f3e-7e43-4313-b0a1-4ee351655beb",
 CellTags->"d6dcf371-bc63-4cb4-ae86-b7aa23519217"],
Cell[1012363, 20212, 433, 11, 27, "EchoBefore",ExpressionUUID->"1b2c34d9-f956-453a-b4bb-36d304633128",
 CellTags->"34665357-2289-4996-8ad3-bd70f89482d1"],
Cell[1012799, 20225, 500, 14, 27, "EchoAfter",ExpressionUUID->"dba11b8c-bdd5-4e00-a380-362a43c87da3",
 CellTags->"e22cd770-b69b-43d0-8cff-544b3df38b54"],
Cell[1013302, 20241, 433, 11, 27, "EchoBefore",ExpressionUUID->"1948492a-08ef-4f06-b033-7f8a96ea22c0",
 CellTags->"f42930be-397e-4d48-bf2a-6eb1f1782cfd"],
Cell[1013738, 20254, 500, 14, 27, "EchoAfter",ExpressionUUID->"96d910a9-6acb-4a58-bd62-7f439ccb2fa5",
 CellTags->"3094eb97-6a3d-4432-94a3-e2bb00086764"],
Cell[1014241, 20270, 435, 11, 27, "EchoBefore",ExpressionUUID->"1df4f241-ef0a-4718-958d-1e1d6c81eece",
 CellTags->"dcda17ae-db03-4b03-9701-a30e1904f719"],
Cell[1014679, 20283, 500, 14, 27, "EchoAfter",ExpressionUUID->"27c2718b-0798-4a10-af46-0a5fa1de42db",
 CellTags->"2e9f802d-c8ae-4aa7-8cbc-570eae973989"],
Cell[1015182, 20299, 435, 11, 27, "EchoBefore",ExpressionUUID->"e3f71b6f-f787-4866-b1c9-3b236b1d63f6",
 CellTags->"bb98e0c4-2b09-468b-9c61-3aa544f08c8e"],
Cell[1015620, 20312, 499, 14, 27, "EchoAfter",ExpressionUUID->"fbbf58da-d6fa-4119-9cd9-f326fd0213e2",
 CellTags->"ceb922e6-0336-45e4-afa1-4a4cf8c5b3e3"],
Cell[1016122, 20328, 433, 11, 27, "EchoBefore",ExpressionUUID->"769499c5-2128-4f78-ada7-058c8c2ace9d",
 CellTags->"58cf81ac-641e-4c5d-93cc-569e166df3b8"],
Cell[1016558, 20341, 499, 14, 27, "EchoAfter",ExpressionUUID->"cca79100-b4b9-49b3-94a7-17eb89171096",
 CellTags->"c6f56e17-0d01-498a-b6e7-bfd735714eb7"],
Cell[1017060, 20357, 433, 11, 27, "EchoBefore",ExpressionUUID->"5a3b232a-f80c-405e-b82f-fa9bc9d1f098",
 CellTags->"ba326751-24af-4db2-9927-e33c9a5035e2"],
Cell[1017496, 20370, 499, 14, 27, "EchoAfter",ExpressionUUID->"14eb6240-78c8-4afd-9094-e34ad1d65fef",
 CellTags->"c86a1c69-6704-49cf-84bd-89d1d351993c"],
Cell[1017998, 20386, 435, 11, 27, "EchoBefore",ExpressionUUID->"9e78a746-a580-47d3-9d9a-6f59991c40c0",
 CellTags->"7fb96cbf-9810-4c37-b929-092dc0f35b83"],
Cell[1018436, 20399, 499, 14, 27, "EchoAfter",ExpressionUUID->"cb864803-6d1f-4dd6-b495-534f8c442a49",
 CellTags->"46bd5228-d088-46b9-bb4d-8b1c124529d0"],
Cell[1018938, 20415, 433, 11, 27, "EchoBefore",ExpressionUUID->"0026114c-f9fa-400e-94ba-bf6ee30c7044",
 CellTags->"240fa398-a92b-4a12-adfe-9e1ba7d8eba9"],
Cell[1019374, 20428, 499, 14, 27, "EchoAfter",ExpressionUUID->"514c76b2-e877-44aa-96c1-855f4112f795",
 CellTags->"c048d135-843f-4306-8560-b881833ae96f"],
Cell[1019876, 20444, 433, 11, 27, "EchoBefore",ExpressionUUID->"2f26b9b1-fd16-4467-8c44-e9e368580e25",
 CellTags->"09722dbb-3377-41ee-8b4a-528ea4c3d12c"],
Cell[1020312, 20457, 499, 14, 27, "EchoAfter",ExpressionUUID->"f3e6f68b-3234-4bbc-9f68-eba3d6afd3be",
 CellTags->"c9a0a49a-0f50-439b-8bd3-3287607ab982"]
}, Open  ]],
Cell[1020826, 20474, 2703, 55, 66, "Output",ExpressionUUID->"faffa24f-169f-403d-bf8d-09c91772e160"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1023566, 20534, 337, 7, 29, "Input",ExpressionUUID->"cccc2d88-2613-456c-a46b-53fe272c333a"],
Cell[1023906, 20543, 361, 7, 33, "Output",ExpressionUUID->"38b63f2f-ab70-4064-bd67-93fe738bf190"]
}, Open  ]],
Cell[1024282, 20553, 581, 14, 51, "Input",ExpressionUUID->"dd827b99-240d-407f-826d-80f15c0a98e5"],
Cell[CellGroupData[{
Cell[1024888, 20571, 329, 7, 29, "Input",ExpressionUUID->"4a55620e-9fe1-417a-b63b-f3432ad8ca78"],
Cell[1025220, 20580, 2594, 54, 66, "Output",ExpressionUUID->"39d12430-3b78-4244-b8aa-ed18eedaa66d"]
}, Open  ]],
Cell[1027829, 20637, 736, 18, 51, "Input",ExpressionUUID->"8b3c3b07-4705-48e8-a6fd-3aad33ca85e7"],
Cell[CellGroupData[{
Cell[1028590, 20659, 376, 7, 29, "Input",ExpressionUUID->"6f787f08-b4ee-4d3f-92d5-2c7e9aeef0f0"],
Cell[1028969, 20668, 2736, 59, 66, "Output",ExpressionUUID->"064a2b65-aefc-4f9d-826f-15e929d96c65"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1031742, 20732, 403, 8, 29, "Input",ExpressionUUID->"84b6a98b-47d7-49ed-a67d-b81395b799e5"],
Cell[1032148, 20742, 4324, 90, 63, "Output",ExpressionUUID->"8316a085-05c0-4b95-885b-ce5c107b40ee"]
}, Open  ]],
Cell[1036487, 20835, 220, 3, 29, "Input",ExpressionUUID->"9622d886-1e75-40e7-93d0-49e3b3ed0cf8"],
Cell[CellGroupData[{
Cell[1036732, 20842, 214, 4, 29, "Input",ExpressionUUID->"2c163fe2-b35c-49d1-9c74-0593f0615b81"],
Cell[CellGroupData[{
Cell[1036971, 20850, 130, 3, 26, "Echo",ExpressionUUID->"8fdda9e1-06d8-45d6-bbc0-339143978792"],
Cell[1037104, 20855, 130, 3, 26, "Echo",ExpressionUUID->"4a124edb-415c-4663-822e-f02002074f38"],
Cell[1037237, 20860, 132, 3, 26, "Echo",ExpressionUUID->"54e5b3c8-0906-414a-986a-8f3f86737840"],
Cell[1037372, 20865, 130, 3, 26, "Echo",ExpressionUUID->"fbf6fdd5-3df9-469d-824d-5cc32d6153ba"],
Cell[1037505, 20870, 130, 3, 26, "Echo",ExpressionUUID->"2f02fa68-5a87-416c-b3b7-6cb39bbc8ec9"],
Cell[1037638, 20875, 130, 3, 26, "Echo",ExpressionUUID->"3c262410-eedc-4864-b512-480d287a28f7"],
Cell[1037771, 20880, 132, 3, 26, "Echo",ExpressionUUID->"2147c3e6-2b76-4150-b835-a36d8388177e"],
Cell[1037906, 20885, 130, 3, 26, "Echo",ExpressionUUID->"3dde8961-15cb-4c90-b6d8-dc0f567f6c05"],
Cell[1038039, 20890, 130, 3, 26, "Echo",ExpressionUUID->"398ff64e-0666-46df-b48c-7162633bc055"],
Cell[1038172, 20895, 130, 3, 26, "Echo",ExpressionUUID->"9b15a01d-6c69-49c7-90f1-4dc871b5c081"]
}, Open  ]],
Cell[1038317, 20901, 2346, 49, 66, "Output",ExpressionUUID->"f4b81561-dd2d-4e04-9474-762019aed9f9"]
}, Open  ]],
Cell[1040678, 20953, 312, 5, 35, "Text",ExpressionUUID->"2725948c-e93a-432b-ac3e-5c544b3a5080"],
Cell[CellGroupData[{
Cell[1041015, 20962, 913, 23, 92, "Input",ExpressionUUID->"83007879-4d91-4faa-b1e1-4611cac0c963"],
Cell[1041931, 20987, 440, 6, 34, "Output",ExpressionUUID->"8e8ed074-0bf3-46f5-89d8-b32c7df6e04c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1042408, 20998, 1001, 26, 115, "Input",ExpressionUUID->"e4f9af7f-42f6-47aa-93a7-76ac3a2e2636"],
Cell[1043412, 21026, 471, 6, 34, "Output",ExpressionUUID->"a1438aef-4244-4321-95cf-f582eb49664e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1043944, 21039, 177, 3, 54, "Subsection",ExpressionUUID->"22dc5cf9-6b4f-4f72-a345-d123f3d3159d"],
Cell[CellGroupData[{
Cell[1044146, 21046, 2254, 54, 241, "Input",ExpressionUUID->"bc5e68d5-e3b5-4297-9a62-f760f48a6610"],
Cell[1046403, 21102, 54738, 926, 61, "Output",ExpressionUUID->"6b75d7bd-ff70-43bf-aa61-9651e9479b76"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1101178, 22033, 2195, 53, 220, "Input",ExpressionUUID->"fb41b172-f039-4441-be0f-d20c99bdb783"],
Cell[1103376, 22088, 45315, 771, 61, "Output",ExpressionUUID->"ceebd0a0-4a76-4e65-a7e0-3b0789bea58f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1148728, 22864, 341, 7, 30, "Input",ExpressionUUID->"9a9eaf26-550d-49e1-a157-a4aa6eef64cf"],
Cell[1149072, 22873, 268, 5, 37, "Output",ExpressionUUID->"3500e95d-9a74-41a9-aa62-04c3b654f8ee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1149377, 22883, 346, 7, 30, "Input",ExpressionUUID->"c9f80d0f-b63b-4716-894f-d4afaef781f3"],
Cell[1149726, 22892, 268, 5, 37, "Output",ExpressionUUID->"67deb0bc-f41b-4bb3-afc8-bbee40b8d502"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1150031, 22902, 243, 5, 30, "Input",ExpressionUUID->"904488dd-9f4c-46e6-8653-1a2cd3ca52be"],
Cell[1150277, 22909, 241, 4, 37, "Output",ExpressionUUID->"db3d341a-10b1-4223-b0c5-90e1f626deee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1150555, 22918, 296, 6, 30, "Input",ExpressionUUID->"4667ec37-438b-4825-a1a7-801999a9c67a"],
Cell[1150854, 22926, 157, 2, 34, "Output",ExpressionUUID->"899b3120-4d8f-4c43-9675-ba39d9904659"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1151060, 22934, 167, 3, 54, "Subsection",ExpressionUUID->"227ff952-0d3c-4678-a327-e733511b0830"],
Cell[CellGroupData[{
Cell[1151252, 22941, 311, 6, 30, "Input",ExpressionUUID->"904e18de-daff-4f5b-a297-5ae0c5ec1481"],
Cell[1151566, 22949, 292, 5, 37, "Output",ExpressionUUID->"cc7269b1-a5ba-4278-93ae-9e4f60a1675f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1151895, 22959, 677, 15, 94, "Input",ExpressionUUID->"725fe85f-f672-4407-8092-0427d99b9a5c"],
Cell[1152575, 22976, 316, 5, 37, "Output",ExpressionUUID->"db966c70-4d41-4862-b7a6-a404bf92e140"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1152928, 22986, 675, 15, 94, "Input",ExpressionUUID->"381be789-c3b5-4aff-8bfa-58497c7340f7"],
Cell[1153606, 23003, 266, 5, 37, "Output",ExpressionUUID->"d78e297f-e3e5-4bf4-8ecd-ac0caddc04b2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1153921, 23014, 153, 3, 54, "Subsection",ExpressionUUID->"5a3e2992-2305-4f52-b094-cf44483b6efe"],
Cell[CellGroupData[{
Cell[1154099, 23021, 254, 4, 30, "Input",ExpressionUUID->"988c20d1-f3f7-4ce9-bc67-a4f2f49ed68f",
 CellID->429968114],
Cell[1154356, 23027, 10646, 239, 246, "Output",ExpressionUUID->"c9a158cb-82ee-455e-9198-cb7f82a416ac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1165039, 23271, 296, 5, 29, "Input",ExpressionUUID->"25fab619-8c7e-438b-a8d6-b83397aea539"],
Cell[1165338, 23278, 587, 10, 55, "Output",ExpressionUUID->"2b4109e6-56eb-4c17-8e7a-c6b270451e89"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1165962, 23293, 268, 5, 29, "Input",ExpressionUUID->"3e617ac3-ef6f-405b-ba83-dcfe35220b88"],
Cell[1166233, 23300, 1556, 25, 199, "Output",ExpressionUUID->"f1fc933d-4d75-4877-aa8c-53d61cdc6b6a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1167826, 23330, 336, 6, 29, "Input",ExpressionUUID->"5d0f630b-7772-4a1d-9881-a6f1f31c8bd9"],
Cell[1168165, 23338, 174, 2, 33, "Output",ExpressionUUID->"1b87e05a-9386-4667-9dc2-1163d1d583da"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1168376, 23345, 543, 13, 29, "Input",ExpressionUUID->"c492ee40-1f79-4d94-940d-46eacb73cdc8"],
Cell[1168922, 23360, 8417, 162, 63, "Output",ExpressionUUID->"fa37d849-4799-4118-90ea-50e8dc6311e2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1177376, 23527, 443, 10, 29, "Input",ExpressionUUID->"dd6b32fe-89e3-46b8-82b8-bdc93e7dc571"],
Cell[1177822, 23539, 750, 14, 45, "Message",ExpressionUUID->"90e1a646-be15-4b10-9f32-37edfec05fe1"],
Cell[1178575, 23555, 50378, 928, 85, "Output",ExpressionUUID->"184f1db7-ba29-49cd-8fdd-7acff4c55b05"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1228990, 24488, 199, 4, 29, "Input",ExpressionUUID->"886fa53e-03ab-41b7-9cee-830bcdde29a2"],
Cell[1229192, 24494, 155, 3, 33, "Output",ExpressionUUID->"016ecd38-849d-4df5-a490-ac6999856eb9"]
}, Open  ]],
Cell[1229362, 24500, 426, 10, 71, "Input",ExpressionUUID->"717bdaab-9941-4fbd-a6fa-e0c91b132952"],
Cell[CellGroupData[{
Cell[1229813, 24514, 268, 6, 29, "Input",ExpressionUUID->"92e4175a-08a2-4d31-94dc-45ca4264c9eb"],
Cell[1230084, 24522, 153, 3, 33, "Output",ExpressionUUID->"5869a946-dd36-41e0-89f0-6bba349f0d83"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1230274, 24530, 254, 4, 29, "Input",ExpressionUUID->"5a53b24a-253c-4f51-9ba0-cff76e7e6442"],
Cell[1230531, 24536, 17260, 342, 99, "Output",ExpressionUUID->"e7337443-bf32-4f7c-9b0d-bd762c6b3daf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1247828, 24883, 218, 3, 29, "Input",ExpressionUUID->"6822b9c5-c6eb-4b02-b4bb-5bd2faf851c5"],
Cell[1248049, 24888, 386, 7, 55, "Output",ExpressionUUID->"5838798d-80c1-4bea-b8da-71643606e3e3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1248472, 24900, 423, 9, 29, "Input",ExpressionUUID->"b6ff6953-a0d6-4512-bcdd-6b0a43ca482e"],
Cell[1248898, 24911, 128, 3, 26, "Echo",ExpressionUUID->"0ef44b34-73a1-4c6e-bfa7-9e46c97b9e05"],
Cell[1249029, 24916, 4471, 92, 63, "Output",ExpressionUUID->"f892d583-7f86-44b2-93a8-a1446e6cd4e8"]
}, Open  ]],
Cell[1253515, 25011, 236, 4, 29, "Input",ExpressionUUID->"17aa63bf-a276-42c8-9b05-5e8dee7f755d"],
Cell[CellGroupData[{
Cell[1253776, 25019, 3192, 72, 321, "Code",ExpressionUUID->"4d6f3468-90ad-4d29-bd4a-784e572b491e"],
Cell[1256971, 25093, 402, 10, 28, "Message",ExpressionUUID->"efe826a2-1cc3-444f-9819-71339de5bf4f"],
Cell[1257376, 25105, 365, 9, 28, "Message",ExpressionUUID->"2acbe30c-da8c-4a70-b4fb-2633a6e52d4f"],
Cell[1257744, 25116, 8034, 179, 85, "Output",ExpressionUUID->"95637cbb-6450-4c38-8d65-3e54e941c539"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1265815, 25300, 315, 6, 29, "Input",ExpressionUUID->"46fe4879-1003-4638-99e4-27c8a9e5ba01"],
Cell[1266133, 25308, 287, 6, 36, "Output",ExpressionUUID->"e2cdbd61-53ca-4932-878e-f8e390039e59"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1266457, 25319, 4315, 94, 420, "Code",ExpressionUUID->"d0909e88-78b8-4727-9982-08d2a3667691"],
Cell[1270775, 25415, 402, 10, 28, "Message",ExpressionUUID->"d30a27c1-4be1-4f7e-bc4c-4948e7057f17"],
Cell[1271180, 25427, 364, 9, 28, "Message",ExpressionUUID->"e7d9ee50-4f57-4579-a784-8e3237239f4a"],
Cell[1271547, 25438, 8041, 180, 85, "Output",ExpressionUUID->"8fc8c35a-514b-4a49-a318-2a19edc51714"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1279625, 25623, 290, 5, 29, "Input",ExpressionUUID->"08210330-54b5-4b01-8d8d-b5f054ef27d1"],
Cell[1279918, 25630, 314, 6, 36, "Output",ExpressionUUID->"83447073-78b4-4c7e-8f38-caa8c4093b44"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1280269, 25641, 664, 17, 71, "Input",ExpressionUUID->"f57dca11-d202-414d-948c-742a8ec1ad82"],
Cell[1280936, 25660, 8879, 168, 63, "Output",ExpressionUUID->"ec0a54ce-99db-44d0-96d9-1ac1dd48da37"]
}, Open  ]],
Cell[1289830, 25831, 525, 22, 338, "Program",ExpressionUUID->"9acf54ce-7adf-4152-95d7-e50d07af809d"],
Cell[CellGroupData[{
Cell[1290380, 25857, 782, 18, 113, "Input",ExpressionUUID->"cda46893-f6e2-40b5-a1db-ad444b22ac91"],
Cell[1291165, 25877, 2655, 37, 232, "Output",ExpressionUUID->"0e273c3f-11cf-401e-9cad-93ed74f677a9"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1293881, 25921, 152, 3, 53, "Section",ExpressionUUID->"f01c9054-21ae-48c4-a6ec-7b7be419e37f"],
Cell[CellGroupData[{
Cell[1294058, 25928, 158, 3, 54, "Subsection",ExpressionUUID->"fc68d7db-3959-4eaa-a6df-f531758f8fc2"],
Cell[1294219, 25933, 407, 9, 29, "Input",ExpressionUUID->"e67d84f7-9763-4dd2-a72e-49db0d2f41a1",
 CellID->489580890],
Cell[CellGroupData[{
Cell[1294651, 25946, 490, 11, 29, "Input",ExpressionUUID->"0034ef88-7cbe-4bcc-98b1-ca383dbb4982",
 CellID->1966699715],
Cell[1295144, 25959, 4296, 90, 63, "Output",ExpressionUUID->"c5ae93e0-665b-43e3-a63d-722f830e6d1b",
 CellID->1214796430]
}, Open  ]],
Cell[CellGroupData[{
Cell[1299477, 26054, 465, 10, 55, "Input",ExpressionUUID->"2f587dd4-a1ec-476d-9985-619951318a67",
 CellID->1856934654],
Cell[1299945, 26066, 2414, 51, 66, "Output",ExpressionUUID->"0e8d4796-af93-46c8-97ee-b8bb5133f37e",
 CellID->1090191562]
}, Open  ]],
Cell[1302374, 26120, 935, 22, 113, "Input",ExpressionUUID->"8d3614a8-0f87-4f7f-9a4c-c366122a2d1f",
 CellID->333736608],
Cell[CellGroupData[{
Cell[1303334, 26146, 275, 6, 29, "Input",ExpressionUUID->"749df91b-02dc-419a-ab49-85330bd141f4",
 CellID->2048723663],
Cell[1303612, 26154, 1360764, 22331, 68, "Output",ExpressionUUID->"2a6d52ec-7d38-4311-b5bb-aaabf78bb772",
 CellID->807387143]
}, Open  ]],
Cell[CellGroupData[{
Cell[2664413, 48490, 377, 10, 29, "Input",ExpressionUUID->"da1c4552-898b-4a28-9518-3767d688c17b",
 CellID->302103773],
Cell[2664793, 48502, 259, 5, 33, "Output",ExpressionUUID->"acbe8d10-13f6-49f7-98f4-5d5812e667e1",
 CellID->2127475667]
}, Open  ]],
Cell[CellGroupData[{
Cell[2665089, 48512, 500, 11, 29, "Input",ExpressionUUID->"24857fe6-8301-409f-a45f-736df4d34592",
 CellID->546368895],
Cell[2665592, 48525, 4328, 90, 63, "Output",ExpressionUUID->"c37fe846-101f-4533-a1cb-2d7278235e7f",
 CellID->1890042681]
}, Open  ]],
Cell[CellGroupData[{
Cell[2669957, 48620, 321, 7, 29, "Input",ExpressionUUID->"0eb055c4-9ad8-4c1b-87d4-d75909b78b0f",
 CellID->1685366009],
Cell[2670281, 48629, 245, 4, 33, "Output",ExpressionUUID->"a334208e-937d-4183-8980-f4a4fc524eea",
 CellID->1000078622]
}, Open  ]],
Cell[CellGroupData[{
Cell[2670563, 48638, 388, 8, 29, "Input",ExpressionUUID->"67cf3c1c-4ca5-44a9-a846-9f1ddeb2ebe6",
 CellID->998498385],
Cell[2670954, 48648, 466, 9, 33, "Output",ExpressionUUID->"c2148504-f6b3-41f1-a71e-e7170b98be8a",
 CellID->1912756573]
}, Open  ]],
Cell[CellGroupData[{
Cell[2671457, 48662, 341, 7, 33, "Input",ExpressionUUID->"e75d7b55-6c1b-478f-a302-02fcae81bea1",
 CellID->820721599],
Cell[2671801, 48671, 199, 3, 33, "Output",ExpressionUUID->"5144208b-acba-4a05-b3ec-2af39af73aa6",
 CellID->1329021237]
}, Open  ]],
Cell[CellGroupData[{
Cell[2672037, 48679, 256, 4, 29, "Input",ExpressionUUID->"2a1df921-88ec-4b7c-9af7-639123a1eba0",
 CellID->1391565408],
Cell[2672296, 48685, 13289, 292, 225, "Output",ExpressionUUID->"ae218743-b83f-43f8-9128-67f7889468c7",
 CellID->1215973067],
Cell[2685588, 48979, 8797, 221, 129, "Print",ExpressionUUID->"16c05d64-35be-4f1a-bfef-7778a4368a58",
 CellTags->"Info-549c8faa-a15c-4d2c-871d-2144aab8c281",
 CellID->1803456099]
}, Open  ]],
Cell[2694400, 49203, 201, 2, 29, "Input",ExpressionUUID->"0381562a-b037-4f35-9c09-281c9e26205e",
 CellID->1395050299],
Cell[CellGroupData[{
Cell[2694626, 49209, 296, 5, 29, "Input",ExpressionUUID->"669cdb93-ed43-4fb1-b23a-f73d11205e1c",
 CellID->1508823836],
Cell[2694925, 49216, 4322, 90, 63, "Output",ExpressionUUID->"c080d3a3-67ac-4129-b035-f59d275a5f28",
 CellID->2000805172]
}, Open  ]],
Cell[2699262, 49309, 318, 6, 29, "Input",ExpressionUUID->"8bb8a919-d0a1-4181-b08a-25fa5710885a",
 CellID->50575228],
Cell[2699583, 49317, 308, 6, 29, "Input",ExpressionUUID->"cfc805c1-e469-408b-997b-05d76c7cc920",
 CellID->1786212884],
Cell[2699894, 49325, 271, 5, 29, "Input",ExpressionUUID->"c4a69680-359c-48ef-8218-ba7f8e558f2e",
 CellID->53464960],
Cell[2700168, 49332, 230, 4, 29, "Input",ExpressionUUID->"83651f00-75ab-4331-9648-325c397a817e",
 CellID->1829148779],
Cell[2700401, 49338, 314, 5, 29, "Input",ExpressionUUID->"5f86b7f6-efb6-43f5-b0bc-db5a7c1e1ae1",
 CellID->1353305701],
Cell[2700718, 49345, 261, 4, 29, "Input",ExpressionUUID->"5668037e-d438-439a-96ff-428fd360fd21",
 CellID->1685269890],
Cell[2700982, 49351, 242, 4, 29, "Input",ExpressionUUID->"9a4fbf0c-d1a5-4aff-8081-b057b990aa5f",
 CellID->1475251005],
Cell[2701227, 49357, 255, 4, 29, "Input",ExpressionUUID->"4ecdecbf-cb92-4f70-a958-31bc6a412bbc",
 CellID->73091834],
Cell[2701485, 49363, 241, 4, 35, "Text",ExpressionUUID->"e6af56ba-8971-4966-8947-fff1822ebe7a",
 CellID->1700674490],
Cell[2701729, 49369, 367, 8, 29, "Input",ExpressionUUID->"92231b28-aec2-4242-98e8-7d93eefd0fc1",
 CellID->2103845401],
Cell[2702099, 49379, 256, 5, 35, "Text",ExpressionUUID->"21312dba-9b6c-4400-b9e2-7a99bc53651e",
 CellID->1552296596],
Cell[2702358, 49386, 240, 4, 29, "Input",ExpressionUUID->"281836f0-fd87-4317-b902-2fae78ee9523",
 CellID->2085890577],
Cell[CellGroupData[{
Cell[2702623, 49394, 259, 5, 29, "Input",ExpressionUUID->"357cda35-f51e-42a3-b473-658a6682e4f4",
 CellID->1308043301],
Cell[2702885, 49401, 4288, 89, 63, "Output",ExpressionUUID->"f444f07c-f9a6-4aee-833b-4778d3f56dcb",
 CellID->1561524489]
}, Open  ]],
Cell[CellGroupData[{
Cell[2707210, 49495, 436, 9, 51, "Input",ExpressionUUID->"38b9f8ba-6c08-489a-b221-108e9bbe50c2",
 CellID->508299638],
Cell[2707649, 49506, 4296, 90, 63, "Output",ExpressionUUID->"cb236abd-50e5-4d3b-8aa8-7a0db7a6e7d6",
 CellID->1877724615]
}, Open  ]],
Cell[2711960, 49599, 353, 8, 29, "Input",ExpressionUUID->"9c218ec3-8bfc-4772-a0b9-fa67e1f6b0ee",
 CellID->535515052],
Cell[2712316, 49609, 287, 7, 29, "Input",ExpressionUUID->"bf9683e2-4c80-4ad4-aa56-3ab35bd855d9",
 CellID->1127275358],
Cell[CellGroupData[{
Cell[2712628, 49620, 392, 9, 29, "Input",ExpressionUUID->"b31b82fc-eac9-460d-b719-ee0af8a88858",
 CellID->443276720],
Cell[2713023, 49631, 4555, 94, 63, "Output",ExpressionUUID->"06a8f55b-c47d-4a00-86da-580ce7ea6033",
 CellID->1725141750]
}, Open  ]],
Cell[CellGroupData[{
Cell[2717615, 49730, 401, 10, 29, "Input",ExpressionUUID->"88e3a340-937a-40b2-af16-945143c65d04",
 CellID->1370770033],
Cell[2718019, 49742, 4382, 92, 63, "Output",ExpressionUUID->"580865cd-6dbd-457c-bcab-81d3cc36ead8",
 CellID->1107853769]
}, Open  ]],
Cell[2722416, 49837, 203, 3, 35, "Text",ExpressionUUID->"30a289d0-aea8-4b78-9950-a8128d56d9e9",
 CellID->1284721661],
Cell[CellGroupData[{
Cell[2722644, 49844, 348, 8, 29, "Input",ExpressionUUID->"da55f71c-d694-4b52-b9c6-7678d45db54d",
 CellID->1935087807],
Cell[2722995, 49854, 345, 7, 36, "Output",ExpressionUUID->"4918a450-60ac-4a69-8f4a-8edc5f1e64bf",
 CellID->981303171]
}, Open  ]],
Cell[2723355, 49864, 281, 6, 29, "Input",ExpressionUUID->"ebeb4a5c-7699-4f2e-88df-e243b6620735",
 CellID->896785815],
Cell[CellGroupData[{
Cell[2723661, 49874, 260, 5, 29, "Input",ExpressionUUID->"66165eef-4c89-4eef-a342-e516a82b45cc",
 CellID->847642907],
Cell[2723924, 49881, 239, 5, 36, "Output",ExpressionUUID->"5528933d-8074-4884-931d-34cf935576db",
 CellID->1445610226]
}, Open  ]],
Cell[2724178, 49889, 202, 3, 29, "Input",ExpressionUUID->"b892f644-388e-4694-b7b8-1b5b6d312a78",
 CellID->219770310],
Cell[2724383, 49894, 248, 5, 29, "Input",ExpressionUUID->"1436ade1-4ebb-4623-8b74-048dba3c3ebd",
 CellID->1302730473],
Cell[2724634, 49901, 401, 10, 29, "Input",ExpressionUUID->"e5968378-2cd5-47ff-8a85-26af1472f71a",
 CellID->1756056945]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2725084, 49917, 153, 3, 67, "Section",ExpressionUUID->"118f76d2-deb7-4a04-87b2-bc184c3b1f05"],
Cell[CellGroupData[{
Cell[2725262, 49924, 149, 3, 54, "Subsection",ExpressionUUID->"db2ee93f-0451-4b50-bcda-79d249ac2f1b"],
Cell[2725414, 49929, 170, 3, 35, "Text",ExpressionUUID->"c4c88e4b-4770-4d65-8dee-7f4d1208aadd"],
Cell[2725587, 49934, 578, 14, 71, "Input",ExpressionUUID->"e869d0e8-c68e-45f6-be00-0d5d3ea17ef9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2726202, 49953, 127, 3, 54, "Subsection",ExpressionUUID->"de639252-2f49-4518-859a-142ec34fb385"],
Cell[2726332, 49958, 222, 5, 35, "Text",ExpressionUUID->"879e158b-61b5-426b-a136-0a9f1fabf21e"]
}, Open  ]]
}, Open  ]]
}
]
*)

